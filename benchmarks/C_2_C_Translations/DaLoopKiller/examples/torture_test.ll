; ModuleID = './examples/torture_test.ready.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.code_to_reason = type { i32, i8* }
%struct.to_str_table = type { [30 x i8], i32, %struct.osip_list*, i8*, i32 (i8*, i8**)* }
%struct.osip_list = type { i32, %struct.__node* }
%struct.__node = type { %struct.__node*, i8* }
%struct.___osip_message_config_t = type { i8*, i32 (%struct.osip_message*, i8*)*, i32 }
%struct.osip_message = type { i8*, %struct.osip_uri*, i8*, i32, i8*, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_call_id*, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_content_length*, %struct.osip_content_type*, %struct.osip_cseq*, %struct.osip_list, %struct.osip_from*, %struct.osip_content_length*, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_from*, %struct.osip_list, %struct.osip_list, %struct.osip_list, %struct.osip_list, i32, i8*, i64, i8* }
%struct.osip_uri = type { i8*, i8*, i8*, i8*, i8*, %struct.osip_list, %struct.osip_list, i8* }
%struct.osip_call_id = type { i8*, i8* }
%struct.osip_content_type = type { i8*, i8*, %struct.osip_list }
%struct.osip_cseq = type { i8*, i8* }
%struct.osip_content_length = type { i8* }
%struct.osip_from = type { i8*, %struct.osip_uri*, %struct.osip_list }
%struct.osip_accept_encoding = type { i8*, %struct.osip_list }
%struct.osip_call_info = type { i8*, %struct.osip_list }
%struct.osip_authentication_info = type { i8*, i8*, i8*, i8*, i8* }
%struct.osip_list_iterator_t = type { %struct.__node*, %struct.__node**, %struct.osip_list*, i32 }
%struct.osip_uri_param = type { i8*, i8* }
%struct.osip_via = type { i8*, i8*, i8*, i8*, i8*, %struct.osip_list }
%struct.osip_header = type { i8*, i8* }
%struct.osip_body = type { i8*, i64, %struct.osip_list*, %struct.osip_content_type* }
%struct.osip_www_authenticate = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.fd_set = type { [16 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.osip_authorization = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }

@.str = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str1 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str2 = private unnamed_addr constant [3 x i8] c"-b\00", align 1
@.str3 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdout = external global %struct._IO_FILE*
@.str4 = private unnamed_addr constant [41 x i8] c"test %s : ============================ \0A\00", align 1
@.str5 = private unnamed_addr constant [43 x i8] c"test %s : ============================ OK\0A\00", align 1
@.str6 = private unnamed_addr constant [47 x i8] c"test %s : ============================ FAILED\0A\00", align 1
@.str7 = private unnamed_addr constant [98 x i8] c"Trying %i sequentials calls to osip_message_init(), osip_message_parse() and osip_message_free()\0A\00", align 1
@.str8 = private unnamed_addr constant [30 x i8] c"ERROR: failed while parsing!\0A\00", align 1
@.str9 = private unnamed_addr constant [39 x i8] c"ERROR: failed while printing message!\0A\00", align 1
@.str10 = private unnamed_addr constant [77 x i8] c"Trying %i sequentials calls to osip_message_clone() and osip_message_free()\0A\00", align 1
@.str11 = private unnamed_addr constant [47 x i8] c"ERROR: failed while creating copy of message!\0A\00", align 1
@.str12 = private unnamed_addr constant [47 x i8] c"The osip_message_clone method works perfectly\0A\00", align 1
@.str13 = private unnamed_addr constant [53 x i8] c"ERROR: The osip_message_clone method DOES NOT works\0A\00", align 1
@.str14 = private unnamed_addr constant [20 x i8] c"Here is the copy: \0A\00", align 1
@.str15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str16 = private unnamed_addr constant [25 x i8] c"sequentials calls: done\0A\00", align 1
@read_text.num_test = internal global i32 0, align 4
@.str17 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@stderr = external global %struct._IO_FILE*
@.str18 = private unnamed_addr constant [27 x i8] c"Error! osip_malloc failed\0A\00", align 1
@.str19 = private unnamed_addr constant [58 x i8] c"Error! The message's number you specified does not exist\0A\00", align 1
@.str20 = private unnamed_addr constant [53 x i8] c"Usage: ./torture_test torture_file number [-v] [-c]\0A\00", align 1
@.str21 = private unnamed_addr constant [8 x i8] c"SIP/2.0\00", align 1
@osip_protocol_version = global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str21, i32 0, i32 0), align 8
@.str42 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str143 = private unnamed_addr constant [6 x i8] c"%s@%s\00", align 1
@.str48 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str149 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str250 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str351 = private unnamed_addr constant [8 x i8] c"call-id\00", align 1
@.str452 = private unnamed_addr constant [5 x i8] c"cseq\00", align 1
@.str553 = private unnamed_addr constant [8 x i8] c"subject\00", align 1
@.str654 = private unnamed_addr constant [8 x i8] c"expires\00", align 1
@.str755 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str856 = private unnamed_addr constant [11 x i8] c"user-agent\00", align 1
@.str957 = private unnamed_addr constant [17 x i8] c"www-authenticate\00", align 1
@.str1058 = private unnamed_addr constant [20 x i8] c"authentication-info\00", align 1
@.str1159 = private unnamed_addr constant [19 x i8] c"proxy-authenticate\00", align 1
@.str1260 = private unnamed_addr constant [20 x i8] c"proxy-authorization\00", align 1
@.str1361 = private unnamed_addr constant [26 x i8] c"proxy-authentication-info\00", align 1
@.str1462 = private unnamed_addr constant [13 x i8] c"organization\00", align 1
@.str1563 = private unnamed_addr constant [14 x i8] c"authorization\00", align 1
@.str1664 = private unnamed_addr constant [6 x i8] c"rport\00", align 1
@.str1765 = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@.str1866 = private unnamed_addr constant [9 x i8] c"received\00", align 1
@osip_message_get_reason.reasons1xx = internal constant [5 x %struct.code_to_reason] [%struct.code_to_reason { i32 100, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1967, i32 0, i32 0) }, %struct.code_to_reason { i32 180, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str2068, i32 0, i32 0) }, %struct.code_to_reason { i32 181, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str2169, i32 0, i32 0) }, %struct.code_to_reason { i32 182, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str22, i32 0, i32 0) }, %struct.code_to_reason { i32 183, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str23, i32 0, i32 0) }], align 16
@.str1967 = private unnamed_addr constant [7 x i8] c"Trying\00", align 1
@.str2068 = private unnamed_addr constant [8 x i8] c"Ringing\00", align 1
@.str2169 = private unnamed_addr constant [24 x i8] c"Call Is Being Forwarded\00", align 1
@.str22 = private unnamed_addr constant [7 x i8] c"Queued\00", align 1
@.str23 = private unnamed_addr constant [17 x i8] c"Session Progress\00", align 1
@osip_message_get_reason.reasons2xx = internal constant [2 x %struct.code_to_reason] [%struct.code_to_reason { i32 200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str24, i32 0, i32 0) }, %struct.code_to_reason { i32 202, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str25, i32 0, i32 0) }], align 16
@.str24 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str25 = private unnamed_addr constant [9 x i8] c"Accepted\00", align 1
@osip_message_get_reason.reasons3xx = internal constant [5 x %struct.code_to_reason] [%struct.code_to_reason { i32 300, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str26, i32 0, i32 0) }, %struct.code_to_reason { i32 301, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str27, i32 0, i32 0) }, %struct.code_to_reason { i32 302, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str28, i32 0, i32 0) }, %struct.code_to_reason { i32 305, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str29, i32 0, i32 0) }, %struct.code_to_reason { i32 380, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str30, i32 0, i32 0) }], align 16
@.str26 = private unnamed_addr constant [17 x i8] c"Multiple Choices\00", align 1
@.str27 = private unnamed_addr constant [18 x i8] c"Moved Permanently\00", align 1
@.str28 = private unnamed_addr constant [18 x i8] c"Moved Temporarily\00", align 1
@.str29 = private unnamed_addr constant [10 x i8] c"Use Proxy\00", align 1
@.str30 = private unnamed_addr constant [20 x i8] c"Alternative Service\00", align 1
@osip_message_get_reason.reasons4xx = internal constant [33 x %struct.code_to_reason] [%struct.code_to_reason { i32 400, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str31, i32 0, i32 0) }, %struct.code_to_reason { i32 401, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str32, i32 0, i32 0) }, %struct.code_to_reason { i32 402, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str33, i32 0, i32 0) }, %struct.code_to_reason { i32 403, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str34, i32 0, i32 0) }, %struct.code_to_reason { i32 404, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str35, i32 0, i32 0) }, %struct.code_to_reason { i32 405, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str36, i32 0, i32 0) }, %struct.code_to_reason { i32 406, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str37, i32 0, i32 0) }, %struct.code_to_reason { i32 407, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str38, i32 0, i32 0) }, %struct.code_to_reason { i32 408, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str39, i32 0, i32 0) }, %struct.code_to_reason { i32 409, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str40, i32 0, i32 0) }, %struct.code_to_reason { i32 410, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str41, i32 0, i32 0) }, %struct.code_to_reason { i32 411, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str4270, i32 0, i32 0) }, %struct.code_to_reason { i32 412, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str43, i32 0, i32 0) }, %struct.code_to_reason { i32 413, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str44, i32 0, i32 0) }, %struct.code_to_reason { i32 414, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str45, i32 0, i32 0) }, %struct.code_to_reason { i32 415, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str46, i32 0, i32 0) }, %struct.code_to_reason { i32 416, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str47, i32 0, i32 0) }, %struct.code_to_reason { i32 420, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str4871, i32 0, i32 0) }, %struct.code_to_reason { i32 421, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str49, i32 0, i32 0) }, %struct.code_to_reason { i32 422, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str50, i32 0, i32 0) }, %struct.code_to_reason { i32 423, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str51, i32 0, i32 0) }, %struct.code_to_reason { i32 480, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str52, i32 0, i32 0) }, %struct.code_to_reason { i32 481, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str53, i32 0, i32 0) }, %struct.code_to_reason { i32 482, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str54, i32 0, i32 0) }, %struct.code_to_reason { i32 483, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str55, i32 0, i32 0) }, %struct.code_to_reason { i32 484, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str56, i32 0, i32 0) }, %struct.code_to_reason { i32 485, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str57, i32 0, i32 0) }, %struct.code_to_reason { i32 486, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str58, i32 0, i32 0) }, %struct.code_to_reason { i32 487, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str59, i32 0, i32 0) }, %struct.code_to_reason { i32 488, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str60, i32 0, i32 0) }, %struct.code_to_reason { i32 489, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str61, i32 0, i32 0) }, %struct.code_to_reason { i32 491, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str62, i32 0, i32 0) }, %struct.code_to_reason { i32 493, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str63, i32 0, i32 0) }], align 16
@.str31 = private unnamed_addr constant [12 x i8] c"Bad Request\00", align 1
@.str32 = private unnamed_addr constant [13 x i8] c"Unauthorized\00", align 1
@.str33 = private unnamed_addr constant [17 x i8] c"Payment Required\00", align 1
@.str34 = private unnamed_addr constant [10 x i8] c"Forbidden\00", align 1
@.str35 = private unnamed_addr constant [10 x i8] c"Not Found\00", align 1
@.str36 = private unnamed_addr constant [19 x i8] c"Method Not Allowed\00", align 1
@.str37 = private unnamed_addr constant [15 x i8] c"Not Acceptable\00", align 1
@.str38 = private unnamed_addr constant [30 x i8] c"Proxy Authentication Required\00", align 1
@.str39 = private unnamed_addr constant [16 x i8] c"Request Timeout\00", align 1
@.str40 = private unnamed_addr constant [9 x i8] c"Conflict\00", align 1
@.str41 = private unnamed_addr constant [5 x i8] c"Gone\00", align 1
@.str4270 = private unnamed_addr constant [16 x i8] c"Length Required\00", align 1
@.str43 = private unnamed_addr constant [27 x i8] c"Conditional Request Failed\00", align 1
@.str44 = private unnamed_addr constant [25 x i8] c"Request Entity Too Large\00", align 1
@.str45 = private unnamed_addr constant [22 x i8] c"Request-URI Too Large\00", align 1
@.str46 = private unnamed_addr constant [23 x i8] c"Unsupported Media Type\00", align 1
@.str47 = private unnamed_addr constant [23 x i8] c"Unsupported Uri Scheme\00", align 1
@.str4871 = private unnamed_addr constant [14 x i8] c"Bad Extension\00", align 1
@.str49 = private unnamed_addr constant [19 x i8] c"Extension Required\00", align 1
@.str50 = private unnamed_addr constant [27 x i8] c"Session Interval Too Small\00", align 1
@.str51 = private unnamed_addr constant [19 x i8] c"Interval Too Short\00", align 1
@.str52 = private unnamed_addr constant [26 x i8] c"Temporarily not available\00", align 1
@.str53 = private unnamed_addr constant [36 x i8] c"Call Leg/Transaction Does Not Exist\00", align 1
@.str54 = private unnamed_addr constant [14 x i8] c"Loop Detected\00", align 1
@.str55 = private unnamed_addr constant [14 x i8] c"Too Many Hops\00", align 1
@.str56 = private unnamed_addr constant [19 x i8] c"Address Incomplete\00", align 1
@.str57 = private unnamed_addr constant [10 x i8] c"Ambiguous\00", align 1
@.str58 = private unnamed_addr constant [10 x i8] c"Busy Here\00", align 1
@.str59 = private unnamed_addr constant [18 x i8] c"Request Cancelled\00", align 1
@.str60 = private unnamed_addr constant [20 x i8] c"Not Acceptable Here\00", align 1
@.str61 = private unnamed_addr constant [10 x i8] c"Bad Event\00", align 1
@.str62 = private unnamed_addr constant [16 x i8] c"Request Pending\00", align 1
@.str63 = private unnamed_addr constant [15 x i8] c"Undecipherable\00", align 1
@osip_message_get_reason.reasons5xx = internal constant [6 x %struct.code_to_reason] [%struct.code_to_reason { i32 500, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str64, i32 0, i32 0) }, %struct.code_to_reason { i32 501, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str65, i32 0, i32 0) }, %struct.code_to_reason { i32 502, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str66, i32 0, i32 0) }, %struct.code_to_reason { i32 503, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str67, i32 0, i32 0) }, %struct.code_to_reason { i32 504, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str68, i32 0, i32 0) }, %struct.code_to_reason { i32 505, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str69, i32 0, i32 0) }], align 16
@.str64 = private unnamed_addr constant [22 x i8] c"Internal Server Error\00", align 1
@.str65 = private unnamed_addr constant [16 x i8] c"Not Implemented\00", align 1
@.str66 = private unnamed_addr constant [12 x i8] c"Bad Gateway\00", align 1
@.str67 = private unnamed_addr constant [20 x i8] c"Service Unavailable\00", align 1
@.str68 = private unnamed_addr constant [17 x i8] c"Gateway Time-out\00", align 1
@.str69 = private unnamed_addr constant [26 x i8] c"SIP Version not supported\00", align 1
@osip_message_get_reason.reasons6xx = internal constant [4 x %struct.code_to_reason] [%struct.code_to_reason { i32 600, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str70, i32 0, i32 0) }, %struct.code_to_reason { i32 603, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str71, i32 0, i32 0) }, %struct.code_to_reason { i32 604, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str72, i32 0, i32 0) }, %struct.code_to_reason { i32 606, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str37, i32 0, i32 0) }], align 16
@.str70 = private unnamed_addr constant [16 x i8] c"Busy Everywhere\00", align 1
@.str71 = private unnamed_addr constant [8 x i8] c"Decline\00", align 1
@.str72 = private unnamed_addr constant [24 x i8] c"Does not exist anywhere\00", align 1
@.str73 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str74 = private unnamed_addr constant [10 x i8] c"multipart\00", align 1
@.str75 = private unnamed_addr constant [12 x i8] c"application\00", align 1
@.str76 = private unnamed_addr constant [4 x i8] c"sdp\00", align 1
@.str77 = private unnamed_addr constant [9 x i8] c"boundary\00", align 1
@.str78 = private unnamed_addr constant [4 x i8] c"\0A--\00", align 1
@.str79 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str80 = private unnamed_addr constant [5 x i8] c"SIP/\00", align 1
@.str81 = private unnamed_addr constant [8 x i8] c"SIP/2.0\00", align 1
@.str82 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str83 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str88 = private unnamed_addr constant [4 x i8] c"\0D\0A\00\00", align 1
@_osip_message_to_str.table = private unnamed_addr constant [25 x %struct.to_str_table] [%struct.to_str_table { [30 x i8] c"Via: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 5, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_via*, i8**)* @osip_via_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Record-Route: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 14, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, i8**)* @osip_record_route_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Route: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, i8**)* @osip_route_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"From: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 6, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, i8**)* @osip_from_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"To: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, i8**)* @osip_to_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Call-ID: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 9, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_call_id*, i8**)* @osip_call_id_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"CSeq: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 6, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_cseq*, i8**)* @osip_cseq_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Contact: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 9, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, i8**)* @osip_contact_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Authorization: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 15, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authorization*, i8**)* @osip_authorization_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"WWW-Authenticate: \00\00\00\00\00\00\00\00\00\00\00\00", i32 18, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_www_authenticate*, i8**)* @osip_www_authenticate_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Proxy-Authenticate: \00\00\00\00\00\00\00\00\00\00", i32 20, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_www_authenticate*, i8**)* @osip_www_authenticate_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Proxy-Authorization: \00\00\00\00\00\00\00\00\00", i32 21, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authorization*, i8**)* @osip_authorization_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Content-Type: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 14, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_content_type*, i8**)* @osip_content_type_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Mime-Version: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 14, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_content_length*, i8**)* @osip_content_length_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Allow: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_content_length*, i8**)* @osip_content_length_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Content-Encoding: \00\00\00\00\00\00\00\00\00\00\00\00", i32 18, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_content_length*, i8**)* @osip_content_length_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Call-Info: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 11, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_call_info*, i8**)* @osip_call_info_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Alert-Info: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 12, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_call_info*, i8**)* @osip_call_info_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Error-Info: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 12, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_call_info*, i8**)* @osip_call_info_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Accept: \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 8, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_content_type*, i8**)* @osip_accept_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Accept-Encoding: \00\00\00\00\00\00\00\00\00\00\00\00\00", i32 17, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_accept_encoding*, i8**)* @osip_accept_encoding_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Accept-Language: \00\00\00\00\00\00\00\00\00\00\00\00\00", i32 17, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_accept_encoding*, i8**)* @osip_accept_encoding_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Authentication-Info: \00\00\00\00\00\00\00\00\00", i32 21, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authentication_info*, i8**)* @osip_authentication_info_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table { [30 x i8] c"Proxy-Authentication-Info: \00\00\00", i32 27, %struct.osip_list* null, i8* null, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authentication_info*, i8**)* @osip_authentication_info_to_str to i32 (i8*, i8**)*) }, %struct.to_str_table zeroinitializer], align 16
@.str189 = private unnamed_addr constant [17 x i8] c"Content-Length: \00", align 1
@.str290 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str391 = private unnamed_addr constant [6 x i8] c"     \00", align 1
@.str492 = private unnamed_addr constant [10 x i8] c"multipart\00", align 1
@.str593 = private unnamed_addr constant [9 x i8] c"boundary\00", align 1
@.str694 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str795 = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@.str896 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str109 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@pconfig = internal global [33 x %struct.___osip_message_config_t] zeroinitializer, align 16
@.str1110 = private unnamed_addr constant [16 x i8] c"accept-encoding\00", align 1
@.str2111 = private unnamed_addr constant [16 x i8] c"accept-language\00", align 1
@.str3112 = private unnamed_addr constant [11 x i8] c"alert-info\00", align 1
@.str4113 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str5114 = private unnamed_addr constant [20 x i8] c"authentication-info\00", align 1
@.str6115 = private unnamed_addr constant [14 x i8] c"authorization\00", align 1
@.str7116 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str8117 = private unnamed_addr constant [8 x i8] c"call-id\00", align 1
@.str9118 = private unnamed_addr constant [10 x i8] c"call-info\00", align 1
@.str10119 = private unnamed_addr constant [8 x i8] c"contact\00", align 1
@.str11120 = private unnamed_addr constant [17 x i8] c"content-encoding\00", align 1
@.str12121 = private unnamed_addr constant [15 x i8] c"content-length\00", align 1
@.str13122 = private unnamed_addr constant [13 x i8] c"content-type\00", align 1
@.str14123 = private unnamed_addr constant [5 x i8] c"cseq\00", align 1
@.str15124 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str16125 = private unnamed_addr constant [11 x i8] c"error-info\00", align 1
@.str17126 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str18127 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str19128 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str20129 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str21130 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str22131 = private unnamed_addr constant [13 x i8] c"mime-version\00", align 1
@.str23132 = private unnamed_addr constant [19 x i8] c"proxy-authenticate\00", align 1
@.str24133 = private unnamed_addr constant [26 x i8] c"proxy-authentication-info\00", align 1
@.str25134 = private unnamed_addr constant [20 x i8] c"proxy-authorization\00", align 1
@.str26135 = private unnamed_addr constant [13 x i8] c"record-route\00", align 1
@.str27136 = private unnamed_addr constant [6 x i8] c"route\00", align 1
@.str28137 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str29138 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str30139 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str31140 = private unnamed_addr constant [4 x i8] c"via\00", align 1
@.str32141 = private unnamed_addr constant [17 x i8] c"www-authenticate\00", align 1
@hdr_ref_table = internal global [150 x i32] zeroinitializer, align 16
@.str148 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str1149 = private unnamed_addr constant [8 x i8] c"; %s=%s\00", align 1
@logfile = global %struct._IO_FILE* null, align 8
@osip_malloc_func = global i8* (i64)* null, align 8
@osip_realloc_func = global i8* (i8*, i64)* null, align 8
@osip_free_func = global void (i8*)* null, align 8
@.str168 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str1169 = private unnamed_addr constant [16 x i8] c"undefined error\00", align 1
@.str2170 = private unnamed_addr constant [14 x i8] c"bad parameter\00", align 1
@.str3171 = private unnamed_addr constant [12 x i8] c"wrong state\00", align 1
@.str4172 = private unnamed_addr constant [19 x i8] c"allocation failure\00", align 1
@.str5173 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str6174 = private unnamed_addr constant [10 x i8] c"not found\00", align 1
@.str7175 = private unnamed_addr constant [20 x i8] c"api not initialized\00", align 1
@.str8176 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str9177 = private unnamed_addr constant [11 x i8] c"no network\00", align 1
@.str10178 = private unnamed_addr constant [10 x i8] c"busy port\00", align 1
@.str11179 = private unnamed_addr constant [13 x i8] c"unknown host\00", align 1
@.str12180 = private unnamed_addr constant [10 x i8] c"disk full\00", align 1
@.str13181 = private unnamed_addr constant [10 x i8] c"no rights\00", align 1
@.str14182 = private unnamed_addr constant [15 x i8] c"file not found\00", align 1
@.str15183 = private unnamed_addr constant [9 x i8] c"time out\00", align 1
@.str16184 = private unnamed_addr constant [14 x i8] c"too much call\00", align 1
@.str17185 = private unnamed_addr constant [13 x i8] c"wrong format\00", align 1
@.str18186 = private unnamed_addr constant [16 x i8] c"no common codec\00", align 1
@osip_error_table = global [61 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str168, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str1169, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str2170, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str3171, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str4172, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str5173, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str6174, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str7175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str9177, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str10178, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str11179, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str12180, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str13181, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str14182, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str15183, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str16184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str17185, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str18186, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8176, i32 0, i32 0)], align 16
@random_seed_set = internal global i32 0, align 4
@.str19187 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str20188 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str21189 = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@tracing_table = common global [8 x i32] zeroinitializer, align 16
@.str212 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str1213 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str2214 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str225 = private unnamed_addr constant [10 x i8] c"nextnonce\00", align 1
@.str1226 = private unnamed_addr constant [7 x i8] c"cnonce\00", align 1
@.str2227 = private unnamed_addr constant [8 x i8] c"rspauth\00", align 1
@.str3228 = private unnamed_addr constant [3 x i8] c"nc\00", align 1
@.str4229 = private unnamed_addr constant [4 x i8] c"qop\00", align 1
@.str5230 = private unnamed_addr constant [5 x i8] c"qop=\00", align 1
@.str6231 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str7232 = private unnamed_addr constant [11 x i8] c"nextnonce=\00", align 1
@.str8233 = private unnamed_addr constant [9 x i8] c"rspauth=\00", align 1
@.str9234 = private unnamed_addr constant [8 x i8] c"cnonce=\00", align 1
@.str10235 = private unnamed_addr constant [4 x i8] c"nc=\00", align 1
@.str248 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str1249 = private unnamed_addr constant [8 x i8] c"; %s=%s\00", align 1
@.str260 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str1261 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str2262 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str277 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str1278 = private unnamed_addr constant [7 x i8] c"INVITE\00", align 1
@.str2279 = private unnamed_addr constant [4 x i8] c"ACK\00", align 1
@.str288 = private unnamed_addr constant [8 x i8] c"%s <%s>\00", align 1
@.str1289 = private unnamed_addr constant [5 x i8] c"<%s>\00", align 1
@.str2290 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str3291 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str312 = private unnamed_addr constant [8 x i8] c"%s <%s>\00", align 1
@.str1313 = private unnamed_addr constant [5 x i8] c"<%s>\00", align 1
@.str2314 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str3315 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str4316 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str333 = private unnamed_addr constant [4 x i8] c"sip\00", align 1
@.str1334 = private unnamed_addr constant [5 x i8] c"sips\00", align 1
@.str2335 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str3336 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str4337 = private unnamed_addr constant [4 x i8] c":%s\00", align 1
@.str5338 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str6339 = private unnamed_addr constant [5 x i8] c"[%s]\00", align 1
@.str7340 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str8341 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str9342 = private unnamed_addr constant [7 x i8] c"?%s=%s\00", align 1
@.str10343 = private unnamed_addr constant [7 x i8] c"&%s=%s\00", align 1
@.str11344 = private unnamed_addr constant [7 x i8] c"%%%02X\00", align 1
@.str12345 = private unnamed_addr constant [19 x i8] c"-_.!~*'()&=+$,;?/\00\00", align 1
@userinfo_def = global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str12345, i32 0, i32 0), align 8
@.str13346 = private unnamed_addr constant [16 x i8] c"-_.!~*'()&=+$,\00\00", align 1
@password_def = global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str13346, i32 0, i32 0), align 8
@.str14347 = private unnamed_addr constant [18 x i8] c"-_.!~*'()[]/:&+$\00\00", align 1
@uri_param_def = global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str14347, i32 0, i32 0), align 8
@.str15348 = private unnamed_addr constant [18 x i8] c"-_.!~*'()[]/?:+$\00\00", align 1
@header_param_def = global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str15348, i32 0, i32 0), align 8
@.str16349 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str370 = private unnamed_addr constant [9 x i8] c"username\00", align 1
@.str1371 = private unnamed_addr constant [6 x i8] c"realm\00", align 1
@.str2372 = private unnamed_addr constant [6 x i8] c"nonce\00", align 1
@.str3373 = private unnamed_addr constant [4 x i8] c"uri\00", align 1
@.str4374 = private unnamed_addr constant [9 x i8] c"response\00", align 1
@.str5375 = private unnamed_addr constant [7 x i8] c"digest\00", align 1
@.str6376 = private unnamed_addr constant [10 x i8] c"algorithm\00", align 1
@.str7377 = private unnamed_addr constant [7 x i8] c"cnonce\00", align 1
@.str8378 = private unnamed_addr constant [7 x i8] c"opaque\00", align 1
@.str9379 = private unnamed_addr constant [4 x i8] c"qop\00", align 1
@.str10380 = private unnamed_addr constant [3 x i8] c"nc\00", align 1
@.str11381 = private unnamed_addr constant [11 x i8] c" username=\00", align 1
@.str12382 = private unnamed_addr constant [9 x i8] c", realm=\00", align 1
@.str13383 = private unnamed_addr constant [9 x i8] c", nonce=\00", align 1
@.str14384 = private unnamed_addr constant [7 x i8] c", uri=\00", align 1
@.str15385 = private unnamed_addr constant [12 x i8] c", response=\00", align 1
@.str16386 = private unnamed_addr constant [10 x i8] c", digest=\00", align 1
@.str17387 = private unnamed_addr constant [13 x i8] c", algorithm=\00", align 1
@.str18388 = private unnamed_addr constant [10 x i8] c", cnonce=\00", align 1
@.str19389 = private unnamed_addr constant [10 x i8] c", opaque=\00", align 1
@.str20390 = private unnamed_addr constant [7 x i8] c", qop=\00", align 1
@.str21391 = private unnamed_addr constant [6 x i8] c", nc=\00", align 1
@.str404 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str1405 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str414 = private unnamed_addr constant [6 x i8] c"realm\00", align 1
@.str1415 = private unnamed_addr constant [7 x i8] c"domain\00", align 1
@.str2416 = private unnamed_addr constant [6 x i8] c"nonce\00", align 1
@.str3417 = private unnamed_addr constant [7 x i8] c"opaque\00", align 1
@.str4418 = private unnamed_addr constant [6 x i8] c"stale\00", align 1
@.str5419 = private unnamed_addr constant [10 x i8] c"algorithm\00", align 1
@.str6420 = private unnamed_addr constant [4 x i8] c"qop\00", align 1
@.str7421 = private unnamed_addr constant [8 x i8] c" realm=\00", align 1
@.str8422 = private unnamed_addr constant [10 x i8] c", domain=\00", align 1
@.str9423 = private unnamed_addr constant [9 x i8] c", nonce=\00", align 1
@.str10424 = private unnamed_addr constant [10 x i8] c", opaque=\00", align 1
@.str11425 = private unnamed_addr constant [9 x i8] c", stale=\00", align 1
@.str12426 = private unnamed_addr constant [13 x i8] c", algorithm=\00", align 1
@.str13427 = private unnamed_addr constant [7 x i8] c", qop=\00", align 1
@.str444 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str1445 = private unnamed_addr constant [15 x i8] c"SIP/%s/%s [%s]\00", align 1
@.str2446 = private unnamed_addr constant [18 x i8] c"SIP/%s/%s [%s]:%s\00", align 1
@.str3447 = private unnamed_addr constant [13 x i8] c"SIP/%s/%s %s\00", align 1
@.str4448 = private unnamed_addr constant [16 x i8] c"SIP/%s/%s %s:%s\00", align 1
@.str5449 = private unnamed_addr constant [4 x i8] c";%s\00", align 1
@.str6450 = private unnamed_addr constant [7 x i8] c";%s=%s\00", align 1
@.str7451 = private unnamed_addr constant [6 x i8] c" (%s)\00", align 1
@.str460 = private unnamed_addr constant [4 x i8] c"\0D\0A\00\00", align 1
@.str1461 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str2462 = private unnamed_addr constant [2 x i8] c"\0D\00", align 1
@.str3463 = private unnamed_addr constant [15 x i8] c"content-type: \00", align 1
@.str4464 = private unnamed_addr constant [13 x i8] c"content-type\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %success = alloca i32, align 4
  %verbose = alloca i32, align 4
  %clone = alloca i32, align 4
  %binary = alloca i32, align 4
  %torture_file = alloca %struct._IO_FILE*, align 8
  %msg = alloca i8*, align 8
  %pos = alloca i32, align 4
  %len = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i32 1, i32* %success, align 4
  store i32 0, i32* %verbose, align 4
  store i32 0, i32* %clone, align 4
  store i32 0, i32* %binary, align 4
  store i32 3, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tmp = load i32, i32* %pos, align 4
  %tmp1 = load i32, i32* %argc.addr, align 4
  %cmp = icmp slt i32 %tmp, %tmp1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp2 = load i32, i32* %pos, align 4
  %idxprom = sext i32 %tmp2 to i64
  %tmp3 = load i8**, i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %tmp3, i64 %idxprom
  %tmp4 = load i8*, i8** %arrayidx, align 8
  %call = call i32 @strncmp(i8* %tmp4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i64 2) #7
  %cmp1 = icmp eq i32 0, %call
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  store i32 1, i32* %verbose, align 4
  br label %if.end15

if.else:                                          ; preds = %for.body
  %tmp5 = load i32, i32* %pos, align 4
  %idxprom2 = sext i32 %tmp5 to i64
  %tmp6 = load i8**, i8*** %argv.addr, align 8
  %arrayidx3 = getelementptr inbounds i8*, i8** %tmp6, i64 %idxprom2
  %tmp7 = load i8*, i8** %arrayidx3, align 8
  %call4 = call i32 @strncmp(i8* %tmp7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str1, i32 0, i32 0), i64 2) #7
  %cmp5 = icmp eq i32 0, %call4
  br i1 %cmp5, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %clone, align 4
  br label %if.end14

if.else7:                                         ; preds = %if.else
  %tmp8 = load i32, i32* %pos, align 4
  %idxprom8 = sext i32 %tmp8 to i64
  %tmp9 = load i8**, i8*** %argv.addr, align 8
  %arrayidx9 = getelementptr inbounds i8*, i8** %tmp9, i64 %idxprom8
  %tmp10 = load i8*, i8** %arrayidx9, align 8
  %call10 = call i32 @strncmp(i8* %tmp10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str2, i32 0, i32 0), i64 2) #7
  %cmp11 = icmp eq i32 0, %call10
  br i1 %cmp11, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else7
  store i32 1, i32* %binary, align 4
  br label %if.end

if.else13:                                        ; preds = %if.else7
  call void @usage()
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then12
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then6
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end15
  %tmp11 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp11, 1
  store i32 %inc, i32* %pos, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tmp12 = load i32, i32* %argc.addr, align 4
  %cmp16 = icmp slt i32 %tmp12, 3
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %for.end
  call void @usage()
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %for.end
  %tmp13 = load i8**, i8*** %argv.addr, align 8
  %arrayidx19 = getelementptr inbounds i8*, i8** %tmp13, i64 1
  %tmp14 = load i8*, i8** %arrayidx19, align 8
  %call20 = call %struct._IO_FILE* @fopen(i8* %tmp14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str3, i32 0, i32 0))
  store %struct._IO_FILE* %call20, %struct._IO_FILE** %torture_file, align 8
  %tmp15 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file, align 8
  %cmp21 = icmp eq %struct._IO_FILE* %tmp15, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end18
  call void @usage()
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.end18
  %call24 = call i32 @parser_init()
  %tmp16 = load i32, i32* %binary, align 4
  %tobool = icmp ne i32 %tmp16, 0
  br i1 %tobool, label %if.then25, label %if.else30

if.then25:                                        ; preds = %if.end23
  %tmp17 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file, align 8
  %call26 = call i32 @read_binary(i8** %msg, i32* %len, %struct._IO_FILE* %tmp17)
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then25
  store i32 -1, i32* %retval
  br label %return

if.end29:                                         ; preds = %if.then25
  br label %if.end38

if.else30:                                        ; preds = %if.end23
  %tmp18 = load i8**, i8*** %argv.addr, align 8
  %arrayidx31 = getelementptr inbounds i8*, i8** %tmp18, i64 2
  %tmp19 = load i8*, i8** %arrayidx31, align 8
  %call32 = call i32 @atoi(i8* %tmp19) #7
  %tmp20 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file, align 8
  %call33 = call i8* @read_text(i32 %call32, %struct._IO_FILE* %tmp20)
  store i8* %call33, i8** %msg, align 8
  %tmp21 = load i8*, i8** %msg, align 8
  %tobool34 = icmp ne i8* %tmp21, null
  br i1 %tobool34, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.else30
  store i32 -1, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.else30
  %tmp22 = load i8*, i8** %msg, align 8
  %call37 = call i64 @strlen(i8* %tmp22) #7
  %conv = trunc i64 %call37 to i32
  store i32 %conv, i32* %len, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.end29
  %tmp23 = load i8*, i8** %msg, align 8
  %tmp24 = load i32, i32* %len, align 4
  %conv39 = sext i32 %tmp24 to i64
  %tmp25 = load i32, i32* %verbose, align 4
  %tmp26 = load i32, i32* %clone, align 4
  %call40 = call i32 @test_message(i8* %tmp23, i64 %conv39, i32 %tmp25, i32 %tmp26)
  store i32 %call40, i32* %success, align 4
  %tmp27 = load i32, i32* %verbose, align 4
  %tobool41 = icmp ne i32 %tmp27, 0
  br i1 %tobool41, label %if.then42, label %if.end56

if.then42:                                        ; preds = %if.end38
  %tmp28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %tmp29 = load i8**, i8*** %argv.addr, align 8
  %arrayidx43 = getelementptr inbounds i8*, i8** %tmp29, i64 2
  %tmp30 = load i8*, i8** %arrayidx43, align 8
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp28, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str4, i32 0, i32 0), i8* %tmp30)
  %tmp31 = load i8*, i8** %msg, align 8
  %tmp32 = load i32, i32* %len, align 4
  %conv45 = sext i32 %tmp32 to i64
  %tmp33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call46 = call i64 @fwrite(i8* %tmp31, i64 1, i64 %conv45, %struct._IO_FILE* %tmp33)
  %tmp34 = load i32, i32* %success, align 4
  %cmp47 = icmp eq i32 0, %tmp34
  br i1 %cmp47, label %if.then49, label %if.else52

if.then49:                                        ; preds = %if.then42
  %tmp35 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %tmp36 = load i8**, i8*** %argv.addr, align 8
  %arrayidx50 = getelementptr inbounds i8*, i8** %tmp36, i64 2
  %tmp37 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp35, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str5, i32 0, i32 0), i8* %tmp37)
  br label %if.end55

if.else52:                                        ; preds = %if.then42
  %tmp38 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %tmp39 = load i8**, i8*** %argv.addr, align 8
  %arrayidx53 = getelementptr inbounds i8*, i8** %tmp39, i64 2
  %tmp40 = load i8*, i8** %arrayidx53, align 8
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp38, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str6, i32 0, i32 0), i8* %tmp40)
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end38
  %tmp41 = load i8*, i8** %msg, align 8
  %cmp57 = icmp ne i8* %tmp41, null
  br i1 %cmp57, label %if.then59, label %if.end64

if.then59:                                        ; preds = %if.end56
  %tmp42 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool60 = icmp ne void (i8*)* %tmp42, null
  br i1 %tobool60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.then59
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp44 = load i8*, i8** %msg, align 8
  call void %tmp43(i8* %tmp44)
  br label %if.end63

if.else62:                                        ; preds = %if.then59
  %tmp45 = load i8*, i8** %msg, align 8
  call void @free(i8* %tmp45) #8
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end56
  %tmp46 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file, align 8
  %call65 = call i32 @fclose(%struct._IO_FILE* %tmp46)
  %tmp47 = load i32, i32* %success, align 4
  %tobool66 = icmp ne i32 %tmp47, 0
  br i1 %tobool66, label %if.then67, label %if.else68

if.then67:                                        ; preds = %if.end64
  call void @exit(i32 1) #9
  unreachable

if.else68:                                        ; preds = %if.end64
  call void @exit(i32 0) #9
  unreachable

return:                                           ; preds = %if.then35, %if.then28
  %tmp48 = load i32, i32* %retval
  ret i32 %tmp48
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal void @usage() #0 {
entry:
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str20, i32 0, i32 0))
  call void @exit(i32 1) #9
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_binary(i8** %msg, i32* %len, %struct._IO_FILE* %torture_file) #0 {
entry:
  %msg.addr = alloca i8**, align 8
  %len.addr = alloca i32*, align 8
  %torture_file.addr = alloca %struct._IO_FILE*, align 8
  store i8** %msg, i8*** %msg.addr, align 8
  store i32* %len, i32** %len.addr, align 8
  store %struct._IO_FILE* %torture_file, %struct._IO_FILE** %torture_file.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 100000)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 100000) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = load i8**, i8*** %msg.addr, align 8
  store i8* %cond, i8** %tmp2, align 8
  %tmp3 = load i8**, i8*** %msg.addr, align 8
  %tmp4 = load i8*, i8** %tmp3, align 8
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file.addr, align 8
  %call2 = call i64 @fread(i8* %tmp4, i64 1, i64 100000, %struct._IO_FILE* %tmp5)
  %conv = trunc i64 %call2 to i32
  %tmp6 = load i32*, i32** %len.addr, align 8
  store i32 %conv, i32* %tmp6, align 4
  %tmp7 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file.addr, align 8
  %call3 = call i32 @ferror(%struct._IO_FILE* %tmp7) #8
  %tobool4 = icmp ne i32 %call3, 0
  %cond5 = select i1 %tobool4, i32 -1, i32 0
  ret i32 %cond5
}

; Function Attrs: nounwind uwtable
define internal i8* @read_text(i32 %num, %struct._IO_FILE* %torture_file) #0 {
entry:
  %retval = alloca i8*, align 8
  %num.addr = alloca i32, align 4
  %torture_file.addr = alloca %struct._IO_FILE*, align 8
  %marker = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %tmpmsg = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %i = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4
  store %struct._IO_FILE* %torture_file, %struct._IO_FILE** %torture_file.addr, align 8
  store i32 0, i32* %i, align 4
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp2 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp2(i64 500)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call4 = call noalias i8* @malloc(i64 500) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call4, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp3 = load i8*, i8** %tmp, align 8
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file.addr, align 8
  %call5 = call i8* @fgets(i8* %tmp3, i32 500, %struct._IO_FILE* %tmp4)
  store i8* %call5, i8** %marker, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %cond.end
  %tmp5 = load i8*, i8** %marker, align 8
  %cmp = icmp ne i8* %tmp5, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %tmp6 = load i32, i32* %i, align 4
  %tmp7 = load i32, i32* %num.addr, align 4
  %cmp6 = icmp slt i32 %tmp6, %tmp7
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp8 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %tmp8, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp9 = load i8*, i8** %tmp, align 8
  %call7 = call i32 @strncmp(i8* %tmp9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str17, i32 0, i32 0), i64 1) #7
  %cmp8 = icmp eq i32 0, %call7
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %tmp10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp10, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %tmp11 = load i8*, i8** %tmp, align 8
  %tmp12 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file.addr, align 8
  %call9 = call i8* @fgets(i8* %tmp11, i32 500, %struct._IO_FILE* %tmp12)
  store i8* %call9, i8** %marker, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp13 = load i32, i32* @read_text.num_test, align 4
  %inc10 = add nsw i32 %tmp13, 1
  store i32 %inc10, i32* @read_text.num_test, align 4
  %tmp14 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool11 = icmp ne i8* (i64)* %tmp14, null
  br i1 %tobool11, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %while.end
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call13 = call i8* %tmp15(i64 100000)
  br label %cond.end16

cond.false14:                                     ; preds = %while.end
  %call15 = call noalias i8* @malloc(i64 100000) #8
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false14, %cond.true12
  %cond17 = phi i8* [ %call13, %cond.true12 ], [ %call15, %cond.false14 ]
  store i8* %cond17, i8** %msg, align 8
  %tmp16 = load i8*, i8** %msg, align 8
  %cmp18 = icmp eq i8* %tmp16, null
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %cond.end16
  %tmp17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str18, i32 0, i32 0))
  store i8* null, i8** %retval
  br label %return

if.end21:                                         ; preds = %cond.end16
  %tmp18 = load i8*, i8** %msg, align 8
  store i8* %tmp18, i8** %tmpmsg, align 8
  %tmp19 = load i8*, i8** %marker, align 8
  %cmp22 = icmp eq i8* %tmp19, null
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end21
  %tmp20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp20, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str19, i32 0, i32 0))
  store i8* null, i8** %retval
  br label %return

if.end25:                                         ; preds = %if.end21
  br label %while.cond26

while.cond26:                                     ; preds = %while.body32, %if.end25
  %tmp21 = load i8*, i8** %marker, align 8
  %cmp27 = icmp ne i8* %tmp21, null
  br i1 %cmp27, label %land.rhs28, label %land.end31

land.rhs28:                                       ; preds = %while.cond26
  %tmp22 = load i8*, i8** %tmp, align 8
  %call29 = call i32 @strncmp(i8* %tmp22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str17, i32 0, i32 0), i64 1) #7
  %tobool30 = icmp ne i32 %call29, 0
  br label %land.end31

land.end31:                                       ; preds = %land.rhs28, %while.cond26
  %tmp23 = phi i1 [ false, %while.cond26 ], [ %tobool30, %land.rhs28 ]
  br i1 %tmp23, label %while.body32, label %while.end37

while.body32:                                     ; preds = %land.end31
  %tmp24 = load i8*, i8** %tmpmsg, align 8
  %tmp25 = load i8*, i8** %tmp, align 8
  %tmp26 = load i8*, i8** %tmp, align 8
  %call33 = call i64 @strlen(i8* %tmp26) #7
  %call34 = call i8* @osip_strncpy(i8* %tmp24, i8* %tmp25, i64 %call33)
  %tmp27 = load i8*, i8** %tmpmsg, align 8
  %tmp28 = load i8*, i8** %tmp, align 8
  %call35 = call i64 @strlen(i8* %tmp28) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp27, i64 %call35
  store i8* %add.ptr, i8** %tmpmsg, align 8
  %tmp29 = load i8*, i8** %tmp, align 8
  %tmp30 = load %struct._IO_FILE*, %struct._IO_FILE** %torture_file.addr, align 8
  %call36 = call i8* @fgets(i8* %tmp29, i32 500, %struct._IO_FILE* %tmp30)
  store i8* %call36, i8** %marker, align 8
  br label %while.cond26

while.end37:                                      ; preds = %land.end31
  %tmp31 = load i8*, i8** %tmp, align 8
  %cmp38 = icmp ne i8* %tmp31, null
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %while.end37
  %tmp32 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool40 = icmp ne void (i8*)* %tmp32, null
  br i1 %tobool40, label %if.then41, label %if.else

if.then41:                                        ; preds = %if.then39
  %tmp33 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp34 = load i8*, i8** %tmp, align 8
  call void %tmp33(i8* %tmp34)
  br label %if.end42

if.else:                                          ; preds = %if.then39
  %tmp35 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp35) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then41
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %while.end37
  %tmp36 = load i8*, i8** %msg, align 8
  store i8* %tmp36, i8** %retval
  br label %return

return:                                           ; preds = %if.end43, %if.then23, %if.then19
  %tmp37 = load i8*, i8** %retval
  ret i8* %tmp37
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #1

; Function Attrs: nounwind uwtable
define i32 @test_message(i8* %msg, i64 %len, i32 %verbose, i32 %clone) #0 {
entry:
  %retval = alloca i32, align 4
  %msg.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %verbose.addr = alloca i32, align 4
  %clone.addr = alloca i32, align 4
  %sip = alloca %struct.osip_message*, align 8
  %result = alloca i8*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i64, align 8
  %j24 = alloca i32, align 4
  %copy = alloca %struct.osip_message*, align 8
  %tmp = alloca i8*, align 8
  %length39 = alloca i64, align 8
  store i8* %msg, i8** %msg.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %verbose, i32* %verbose.addr, align 4
  store i32 %clone, i32* %clone.addr, align 4
  store i32 1, i32* %j, align 4
  %tmp1 = load i32, i32* %verbose.addr, align 4
  %tobool = icmp ne i32 %tmp1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %tmp3 = load i32, i32* %j, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp2, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str7, i32 0, i32 0), i32 %tmp3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end6, %if.end
  %tmp4 = load i32, i32* %j, align 4
  %cmp = icmp ne i32 %tmp4, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp5 = load i32, i32* %j, align 4
  %dec = add nsw i32 %tmp5, -1
  store i32 %dec, i32* %j, align 4
  %call1 = call i32 @osip_message_init(%struct.osip_message** %sip)
  %tmp6 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  %tmp7 = load i8*, i8** %msg.addr, align 8
  %tmp8 = load i64, i64* %len.addr, align 8
  %call2 = call i32 @osip_message_parse(%struct.osip_message* %tmp6, i8* %tmp7, i64 %tmp8)
  %cmp3 = icmp ne i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %while.body
  %tmp9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str8, i32 0, i32 0))
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  call void @osip_message_free(%struct.osip_message* %tmp10)
  store i32 -1, i32* %retval
  br label %return

if.end6:                                          ; preds = %while.body
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  call void @osip_message_free(%struct.osip_message* %tmp11)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %call7 = call i32 @osip_message_init(%struct.osip_message** %sip)
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  %tmp13 = load i8*, i8** %msg.addr, align 8
  %tmp14 = load i64, i64* %len.addr, align 8
  %call8 = call i32 @osip_message_parse(%struct.osip_message* %tmp12, i8* %tmp13, i64 %tmp14)
  %cmp9 = icmp ne i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %while.end
  %tmp15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp15, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str8, i32 0, i32 0))
  %tmp16 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  call void @osip_message_free(%struct.osip_message* %tmp16)
  store i32 -1, i32* %retval
  br label %return

if.else:                                          ; preds = %while.end
  %tmp17 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  %call12 = call i32 @osip_message_force_update(%struct.osip_message* %tmp17)
  %tmp18 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  %call13 = call i32 @osip_message_to_str(%struct.osip_message* %tmp18, i8** %result, i64* %length)
  store i32 %call13, i32* %i, align 4
  %tmp19 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %tmp19, -1
  br i1 %cmp14, label %if.then15, label %if.else17

if.then15:                                        ; preds = %if.else
  %tmp20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp20, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str9, i32 0, i32 0))
  %tmp21 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  call void @osip_message_free(%struct.osip_message* %tmp21)
  store i32 -1, i32* %retval
  br label %return

if.else17:                                        ; preds = %if.else
  %tmp22 = load i32, i32* %verbose.addr, align 4
  %tobool18 = icmp ne i32 %tmp22, 0
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.else17
  %tmp23 = load i8*, i8** %result, align 8
  %tmp24 = load i64, i64* %length, align 8
  %tmp25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call20 = call i64 @fwrite(i8* %tmp23, i64 1, i64 %tmp24, %struct._IO_FILE* %tmp25)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.else17
  %tmp26 = load i32, i32* %clone.addr, align 4
  %tobool22 = icmp ne i32 %tmp26, 0
  br i1 %tobool22, label %if.then23, label %if.end76

if.then23:                                        ; preds = %if.end21
  store i32 1, i32* %j24, align 4
  %tmp27 = load i32, i32* %verbose.addr, align 4
  %tobool25 = icmp ne i32 %tmp27, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.then23
  %tmp28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %tmp29 = load i32, i32* %j24, align 4
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp28, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str10, i32 0, i32 0), i32 %tmp29)
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.then23
  br label %while.cond29

while.cond29:                                     ; preds = %if.end70, %if.end28
  %tmp30 = load i32, i32* %j24, align 4
  %cmp30 = icmp ne i32 %tmp30, 0
  br i1 %cmp30, label %while.body31, label %while.end71

while.body31:                                     ; preds = %while.cond29
  %tmp31 = load i32, i32* %j24, align 4
  %dec32 = add nsw i32 %tmp31, -1
  store i32 %dec32, i32* %j24, align 4
  %tmp32 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  %call33 = call i32 @osip_message_clone(%struct.osip_message* %tmp32, %struct.osip_message** %copy)
  store i32 %call33, i32* %i, align 4
  %tmp33 = load i32, i32* %i, align 4
  %cmp34 = icmp ne i32 %tmp33, 0
  br i1 %cmp34, label %if.then35, label %if.else37

if.then35:                                        ; preds = %while.body31
  %tmp34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp34, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str11, i32 0, i32 0))
  br label %if.end70

if.else37:                                        ; preds = %while.body31
  %tmp35 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %call40 = call i32 @osip_message_force_update(%struct.osip_message* %tmp35)
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %call41 = call i32 @osip_message_to_str(%struct.osip_message* %tmp36, i8** %tmp, i64* %length39)
  store i32 %call41, i32* %i, align 4
  %tmp37 = load i32, i32* %i, align 4
  %cmp42 = icmp ne i32 %tmp37, 0
  br i1 %cmp42, label %if.then43, label %if.else45

if.then43:                                        ; preds = %if.else37
  %tmp38 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp38, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str9, i32 0, i32 0))
  br label %if.end69

if.else45:                                        ; preds = %if.else37
  %tmp39 = load i8*, i8** %result, align 8
  %tmp40 = load i8*, i8** %tmp, align 8
  %call46 = call i32 @strcmp(i8* %tmp39, i8* %tmp40) #7
  %cmp47 = icmp eq i32 0, %call46
  br i1 %cmp47, label %if.then48, label %if.else53

if.then48:                                        ; preds = %if.else45
  %tmp41 = load i32, i32* %verbose.addr, align 4
  %tobool49 = icmp ne i32 %tmp41, 0
  br i1 %tobool49, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.then48
  %call51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str12, i32 0, i32 0))
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.then48
  br label %if.end55

if.else53:                                        ; preds = %if.else45
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str13, i32 0, i32 0))
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.end52
  %tmp42 = load i32, i32* %verbose.addr, align 4
  %tobool56 = icmp ne i32 %tmp42, 0
  br i1 %tobool56, label %if.then57, label %if.end61

if.then57:                                        ; preds = %if.end55
  %call58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str14, i32 0, i32 0))
  %tmp43 = load i8*, i8** %tmp, align 8
  %tmp44 = load i64, i64* %length39, align 8
  %tmp45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call59 = call i64 @fwrite(i8* %tmp43, i64 1, i64 %tmp44, %struct._IO_FILE* %tmp45)
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str15, i32 0, i32 0))
  br label %if.end61

if.end61:                                         ; preds = %if.then57, %if.end55
  %tmp46 = load i8*, i8** %tmp, align 8
  %cmp62 = icmp ne i8* %tmp46, null
  br i1 %cmp62, label %if.then63, label %if.end68

if.then63:                                        ; preds = %if.end61
  %tmp47 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool64 = icmp ne void (i8*)* %tmp47, null
  br i1 %tobool64, label %if.then65, label %if.else66

if.then65:                                        ; preds = %if.then63
  %tmp48 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp49 = load i8*, i8** %tmp, align 8
  call void %tmp48(i8* %tmp49)
  br label %if.end67

if.else66:                                        ; preds = %if.then63
  %tmp50 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp50) #8
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end61
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then43
  %tmp51 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp51)
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then35
  br label %while.cond29

while.end71:                                      ; preds = %while.cond29
  %tmp52 = load i32, i32* %verbose.addr, align 4
  %tobool72 = icmp ne i32 %tmp52, 0
  br i1 %tobool72, label %if.then73, label %if.end75

if.then73:                                        ; preds = %while.end71
  %tmp53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp53, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str16, i32 0, i32 0))
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %while.end71
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end21
  %tmp54 = load i8*, i8** %result, align 8
  %cmp77 = icmp ne i8* %tmp54, null
  br i1 %cmp77, label %if.then78, label %if.end83

if.then78:                                        ; preds = %if.end76
  %tmp55 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool79 = icmp ne void (i8*)* %tmp55, null
  br i1 %tobool79, label %if.then80, label %if.else81

if.then80:                                        ; preds = %if.then78
  %tmp56 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp57 = load i8*, i8** %result, align 8
  call void %tmp56(i8* %tmp57)
  br label %if.end82

if.else81:                                        ; preds = %if.then78
  %tmp58 = load i8*, i8** %result, align 8
  call void @free(i8* %tmp58) #8
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then80
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end76
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  %tmp59 = load %struct.osip_message*, %struct.osip_message** %sip, align 8
  call void @osip_message_free(%struct.osip_message* %tmp59)
  br label %if.end85

if.end85:                                         ; preds = %if.end84
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end85, %if.then15, %if.then10, %if.then4
  %tmp60 = load i32, i32* %retval
  ret i32 %tmp60
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare void @free(i8*) #3

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #2

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @ferror(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define i32 @osip_message_init(%struct.osip_message** %sip) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message**, align 8
  store %struct.osip_message** %sip, %struct.osip_message*** %sip.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 448)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 448) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_message*
  %tmp3 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  store %struct.osip_message* %tmp2, %struct.osip_message** %tmp3, align 8
  %tmp4 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %tmp4, align 8
  %cmp = icmp eq %struct.osip_message* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %tmp6, align 8
  %tmp8 = bitcast %struct.osip_message* %tmp7 to i8*
  call void @llvm.memset.p0i8.i64(i8* %tmp8, i8 0, i64 448, i32 8, i1 false)
  %tmp9 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %tmp9, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 5
  %call2 = call i32 @osip_list_init(%struct.osip_list* %accepts)
  %tmp11 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %tmp11, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 6
  %call3 = call i32 @osip_list_init(%struct.osip_list* %accept_encodings)
  %tmp13 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp14 = load %struct.osip_message*, %struct.osip_message** %tmp13, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp14, i32 0, i32 7
  %call4 = call i32 @osip_list_init(%struct.osip_list* %accept_languages)
  %tmp15 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp16 = load %struct.osip_message*, %struct.osip_message** %tmp15, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp16, i32 0, i32 8
  %call5 = call i32 @osip_list_init(%struct.osip_list* %alert_infos)
  %tmp17 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp18 = load %struct.osip_message*, %struct.osip_message** %tmp17, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp18, i32 0, i32 9
  %call6 = call i32 @osip_list_init(%struct.osip_list* %allows)
  %tmp19 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp20 = load %struct.osip_message*, %struct.osip_message** %tmp19, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp20, i32 0, i32 10
  %call7 = call i32 @osip_list_init(%struct.osip_list* %authentication_infos)
  %tmp21 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp22 = load %struct.osip_message*, %struct.osip_message** %tmp21, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp22, i32 0, i32 11
  %call8 = call i32 @osip_list_init(%struct.osip_list* %authorizations)
  %tmp23 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp24 = load %struct.osip_message*, %struct.osip_message** %tmp23, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp24, i32 0, i32 12
  store %struct.osip_call_id* null, %struct.osip_call_id** %call_id, align 8
  %tmp25 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp26 = load %struct.osip_message*, %struct.osip_message** %tmp25, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp26, i32 0, i32 13
  %call9 = call i32 @osip_list_init(%struct.osip_list* %call_infos)
  %tmp27 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp28 = load %struct.osip_message*, %struct.osip_message** %tmp27, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp28, i32 0, i32 14
  %call10 = call i32 @osip_list_init(%struct.osip_list* %contacts)
  %tmp29 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %tmp29, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp30, i32 0, i32 15
  %call11 = call i32 @osip_list_init(%struct.osip_list* %content_encodings)
  %tmp31 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp32 = load %struct.osip_message*, %struct.osip_message** %tmp31, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp32, i32 0, i32 16
  store %struct.osip_content_length* null, %struct.osip_content_length** %content_length, align 8
  %tmp33 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp34 = load %struct.osip_message*, %struct.osip_message** %tmp33, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp34, i32 0, i32 17
  store %struct.osip_content_type* null, %struct.osip_content_type** %content_type, align 8
  %tmp35 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %tmp35, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp36, i32 0, i32 18
  store %struct.osip_cseq* null, %struct.osip_cseq** %cseq, align 8
  %tmp37 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp38 = load %struct.osip_message*, %struct.osip_message** %tmp37, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp38, i32 0, i32 19
  %call12 = call i32 @osip_list_init(%struct.osip_list* %error_infos)
  %tmp39 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp40 = load %struct.osip_message*, %struct.osip_message** %tmp39, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp40, i32 0, i32 20
  store %struct.osip_from* null, %struct.osip_from** %from, align 8
  %tmp41 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp42 = load %struct.osip_message*, %struct.osip_message** %tmp41, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp42, i32 0, i32 21
  store %struct.osip_content_length* null, %struct.osip_content_length** %mime_version, align 8
  %tmp43 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp44 = load %struct.osip_message*, %struct.osip_message** %tmp43, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp44, i32 0, i32 22
  %call13 = call i32 @osip_list_init(%struct.osip_list* %proxy_authenticates)
  %tmp45 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp46 = load %struct.osip_message*, %struct.osip_message** %tmp45, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp46, i32 0, i32 23
  %call14 = call i32 @osip_list_init(%struct.osip_list* %proxy_authentication_infos)
  %tmp47 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp48 = load %struct.osip_message*, %struct.osip_message** %tmp47, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp48, i32 0, i32 24
  %call15 = call i32 @osip_list_init(%struct.osip_list* %proxy_authorizations)
  %tmp49 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp50 = load %struct.osip_message*, %struct.osip_message** %tmp49, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp50, i32 0, i32 25
  %call16 = call i32 @osip_list_init(%struct.osip_list* %record_routes)
  %tmp51 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp52 = load %struct.osip_message*, %struct.osip_message** %tmp51, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp52, i32 0, i32 26
  %call17 = call i32 @osip_list_init(%struct.osip_list* %routes)
  %tmp53 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp54 = load %struct.osip_message*, %struct.osip_message** %tmp53, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp54, i32 0, i32 27
  store %struct.osip_from* null, %struct.osip_from** %to, align 8
  %tmp55 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp56 = load %struct.osip_message*, %struct.osip_message** %tmp55, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp56, i32 0, i32 28
  %call18 = call i32 @osip_list_init(%struct.osip_list* %vias)
  %tmp57 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp58 = load %struct.osip_message*, %struct.osip_message** %tmp57, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp58, i32 0, i32 29
  %call19 = call i32 @osip_list_init(%struct.osip_list* %www_authenticates)
  %tmp59 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp60 = load %struct.osip_message*, %struct.osip_message** %tmp59, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp60, i32 0, i32 31
  %call20 = call i32 @osip_list_init(%struct.osip_list* %bodies)
  %tmp61 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp62 = load %struct.osip_message*, %struct.osip_message** %tmp61, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp62, i32 0, i32 30
  %call21 = call i32 @osip_list_init(%struct.osip_list* %headers)
  %tmp63 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp64 = load %struct.osip_message*, %struct.osip_message** %tmp63, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp64, i32 0, i32 32
  store i32 3, i32* %message_property, align 4
  %tmp65 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp66 = load %struct.osip_message*, %struct.osip_message** %tmp65, align 8
  %message = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp66, i32 0, i32 33
  store i8* null, i8** %message, align 8
  %tmp67 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp68 = load %struct.osip_message*, %struct.osip_message** %tmp67, align 8
  %message_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp68, i32 0, i32 34
  store i64 0, i64* %message_length, align 8
  %tmp69 = load %struct.osip_message**, %struct.osip_message*** %sip.addr, align 8
  %tmp70 = load %struct.osip_message*, %struct.osip_message** %tmp69, align 8
  %application_data = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp70, i32 0, i32 35
  store i8* null, i8** %application_data, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp71 = load i32, i32* %retval
  ret i32 %tmp71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define void @osip_message_set_reason_phrase(%struct.osip_message* %sip, i8* %reason) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %reason.addr = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %reason, i8** %reason.addr, align 8
  %tmp = load i8*, i8** %reason.addr, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 4
  store i8* %tmp, i8** %reason_phrase, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_message_set_status_code(%struct.osip_message* %sip, i32 %status_code) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %status_code.addr = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %status_code, i32* %status_code.addr, align 4
  %tmp = load i32, i32* %status_code.addr, align 4
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 3
  store i32 %tmp, i32* %status_code1, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_message_set_method(%struct.osip_message* %sip, i8* %sip_method) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %sip_method.addr = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %sip_method, i8** %sip_method.addr, align 8
  %tmp = load i8*, i8** %sip_method.addr, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 2
  store i8* %tmp, i8** %sip_method1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_message_set_version(%struct.osip_message* %sip, i8* %sip_version) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %sip_version.addr = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %sip_version, i8** %sip_version.addr, align 8
  %tmp = load i8*, i8** %sip_version.addr, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %sip_version1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_message_set_uri(%struct.osip_message* %sip, %struct.osip_uri* %url) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 1
  store %struct.osip_uri* %tmp, %struct.osip_uri** %req_uri, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_message_free(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end73

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 2
  %tmp2 = load i8*, i8** %sip_method, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method4 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 2
  %tmp6 = load i8*, i8** %sip_method4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method5 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 2
  %tmp8 = load i8*, i8** %sip_method5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %sip_version, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %sip_version12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version14 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %sip_version14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp17, i32 0, i32 1
  %tmp18 = load %struct.osip_uri*, %struct.osip_uri** %req_uri, align 8
  %cmp17 = icmp ne %struct.osip_uri* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end16
  %tmp19 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri19 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp19, i32 0, i32 1
  %tmp20 = load %struct.osip_uri*, %struct.osip_uri** %req_uri19, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp20)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %tmp21 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp21, i32 0, i32 4
  %tmp22 = load i8*, i8** %reason_phrase, align 8
  %cmp21 = icmp ne i8* %tmp22, null
  br i1 %cmp21, label %if.then22, label %if.end29

if.then22:                                        ; preds = %if.end20
  %tmp23 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool23 = icmp ne void (i8*)* %tmp23, null
  br i1 %tobool23, label %if.then24, label %if.else26

if.then24:                                        ; preds = %if.then22
  %tmp24 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp25 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase25 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp25, i32 0, i32 4
  %tmp26 = load i8*, i8** %reason_phrase25, align 8
  call void %tmp24(i8* %tmp26)
  br label %if.end28

if.else26:                                        ; preds = %if.then22
  %tmp27 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase27 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp27, i32 0, i32 4
  %tmp28 = load i8*, i8** %reason_phrase27, align 8
  call void @free(i8* %tmp28) #8
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end20
  %tmp29 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp29, i32 0, i32 5
  call void @osip_list_special_free(%struct.osip_list* %accepts, void (i8*)* bitcast (void (%struct.osip_content_type*)* @osip_content_type_free to void (i8*)*))
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp30, i32 0, i32 11
  call void @osip_list_special_free(%struct.osip_list* %authorizations, void (i8*)* bitcast (void (%struct.osip_authorization*)* @osip_authorization_free to void (i8*)*))
  %tmp31 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp31, i32 0, i32 12
  %tmp32 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id, align 8
  %cmp30 = icmp ne %struct.osip_call_id* %tmp32, null
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end29
  %tmp33 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id32 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp33, i32 0, i32 12
  %tmp34 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id32, align 8
  call void @osip_call_id_free(%struct.osip_call_id* %tmp34)
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29
  %tmp35 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp35, i32 0, i32 6
  call void @osip_list_special_free(%struct.osip_list* %accept_encodings, void (i8*)* bitcast (void (%struct.osip_accept_encoding*)* @osip_accept_encoding_free to void (i8*)*))
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp36, i32 0, i32 7
  call void @osip_list_special_free(%struct.osip_list* %accept_languages, void (i8*)* bitcast (void (%struct.osip_accept_encoding*)* @osip_accept_encoding_free to void (i8*)*))
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 8
  call void @osip_list_special_free(%struct.osip_list* %alert_infos, void (i8*)* bitcast (void (%struct.osip_call_info*)* @osip_call_info_free to void (i8*)*))
  %tmp38 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp38, i32 0, i32 9
  call void @osip_list_special_free(%struct.osip_list* %allows, void (i8*)* bitcast (void (%struct.osip_content_length*)* @osip_content_length_free to void (i8*)*))
  %tmp39 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp39, i32 0, i32 10
  call void @osip_list_special_free(%struct.osip_list* %authentication_infos, void (i8*)* bitcast (void (%struct.osip_authentication_info*)* @osip_authentication_info_free to void (i8*)*))
  %tmp40 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp40, i32 0, i32 13
  call void @osip_list_special_free(%struct.osip_list* %call_infos, void (i8*)* bitcast (void (%struct.osip_call_info*)* @osip_call_info_free to void (i8*)*))
  %tmp41 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp41, i32 0, i32 15
  call void @osip_list_special_free(%struct.osip_list* %content_encodings, void (i8*)* bitcast (void (%struct.osip_content_length*)* @osip_content_length_free to void (i8*)*))
  %tmp42 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp42, i32 0, i32 19
  call void @osip_list_special_free(%struct.osip_list* %error_infos, void (i8*)* bitcast (void (%struct.osip_call_info*)* @osip_call_info_free to void (i8*)*))
  %tmp43 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp43, i32 0, i32 23
  call void @osip_list_special_free(%struct.osip_list* %proxy_authentication_infos, void (i8*)* bitcast (void (%struct.osip_authentication_info*)* @osip_authentication_info_free to void (i8*)*))
  %tmp44 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp44, i32 0, i32 14
  call void @osip_list_special_free(%struct.osip_list* %contacts, void (i8*)* bitcast (void (%struct.osip_from*)* @osip_contact_free to void (i8*)*))
  %tmp45 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp45, i32 0, i32 16
  %tmp46 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  %cmp34 = icmp ne %struct.osip_content_length* %tmp46, null
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end33
  %tmp47 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length36 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp47, i32 0, i32 16
  %tmp48 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length36, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp48)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end33
  %tmp49 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp49, i32 0, i32 17
  %tmp50 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp38 = icmp ne %struct.osip_content_type* %tmp50, null
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end37
  %tmp51 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type40 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp51, i32 0, i32 17
  %tmp52 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type40, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp52)
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end37
  %tmp53 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp53, i32 0, i32 18
  %tmp54 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq, align 8
  %cmp42 = icmp ne %struct.osip_cseq* %tmp54, null
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end41
  %tmp55 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq44 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp55, i32 0, i32 18
  %tmp56 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq44, align 8
  call void @osip_cseq_free(%struct.osip_cseq* %tmp56)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41
  %tmp57 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp57, i32 0, i32 20
  %tmp58 = load %struct.osip_from*, %struct.osip_from** %from, align 8
  %cmp46 = icmp ne %struct.osip_from* %tmp58, null
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end45
  %tmp59 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from48 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp59, i32 0, i32 20
  %tmp60 = load %struct.osip_from*, %struct.osip_from** %from48, align 8
  call void @osip_from_free(%struct.osip_from* %tmp60)
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end45
  %tmp61 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp61, i32 0, i32 21
  %tmp62 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version, align 8
  %cmp50 = icmp ne %struct.osip_content_length* %tmp62, null
  br i1 %cmp50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.end49
  %tmp63 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version52 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp63, i32 0, i32 21
  %tmp64 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version52, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp64)
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.end49
  %tmp65 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp65, i32 0, i32 22
  call void @osip_list_special_free(%struct.osip_list* %proxy_authenticates, void (i8*)* bitcast (void (%struct.osip_www_authenticate*)* @osip_www_authenticate_free to void (i8*)*))
  %tmp66 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp66, i32 0, i32 24
  call void @osip_list_special_free(%struct.osip_list* %proxy_authorizations, void (i8*)* bitcast (void (%struct.osip_authorization*)* @osip_authorization_free to void (i8*)*))
  %tmp67 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp67, i32 0, i32 25
  call void @osip_list_special_free(%struct.osip_list* %record_routes, void (i8*)* bitcast (void (%struct.osip_from*)* @osip_record_route_free to void (i8*)*))
  %tmp68 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp68, i32 0, i32 26
  call void @osip_list_special_free(%struct.osip_list* %routes, void (i8*)* bitcast (void (%struct.osip_from*)* @osip_route_free to void (i8*)*))
  %tmp69 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp69, i32 0, i32 27
  %tmp70 = load %struct.osip_from*, %struct.osip_from** %to, align 8
  %cmp54 = icmp ne %struct.osip_from* %tmp70, null
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end53
  %tmp71 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to56 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp71, i32 0, i32 27
  %tmp72 = load %struct.osip_from*, %struct.osip_from** %to56, align 8
  call void @osip_to_free(%struct.osip_from* %tmp72)
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end53
  %tmp73 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp73, i32 0, i32 28
  call void @osip_list_special_free(%struct.osip_list* %vias, void (i8*)* bitcast (void (%struct.osip_via*)* @osip_via_free to void (i8*)*))
  %tmp74 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp74, i32 0, i32 29
  call void @osip_list_special_free(%struct.osip_list* %www_authenticates, void (i8*)* bitcast (void (%struct.osip_www_authenticate*)* @osip_www_authenticate_free to void (i8*)*))
  %tmp75 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp75, i32 0, i32 30
  call void @osip_list_special_free(%struct.osip_list* %headers, void (i8*)* bitcast (void (%struct.osip_header*)* @osip_header_free to void (i8*)*))
  %tmp76 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp76, i32 0, i32 31
  call void @osip_list_special_free(%struct.osip_list* %bodies, void (i8*)* bitcast (void (%struct.osip_body*)* @osip_body_free to void (i8*)*))
  %tmp77 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp77, i32 0, i32 33
  %tmp78 = load i8*, i8** %message, align 8
  %cmp58 = icmp ne i8* %tmp78, null
  br i1 %cmp58, label %if.then59, label %if.end66

if.then59:                                        ; preds = %if.end57
  %tmp79 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool60 = icmp ne void (i8*)* %tmp79, null
  br i1 %tobool60, label %if.then61, label %if.else63

if.then61:                                        ; preds = %if.then59
  %tmp80 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp81 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message62 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp81, i32 0, i32 33
  %tmp82 = load i8*, i8** %message62, align 8
  call void %tmp80(i8* %tmp82)
  br label %if.end65

if.else63:                                        ; preds = %if.then59
  %tmp83 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message64 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp83, i32 0, i32 33
  %tmp84 = load i8*, i8** %message64, align 8
  call void @free(i8* %tmp84) #8
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end57
  %tmp85 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp67 = icmp ne %struct.osip_message* %tmp85, null
  br i1 %cmp67, label %if.then68, label %if.end73

if.then68:                                        ; preds = %if.end66
  %tmp86 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool69 = icmp ne void (i8*)* %tmp86, null
  br i1 %tobool69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.then68
  %tmp87 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp88 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp89 = bitcast %struct.osip_message* %tmp88 to i8*
  call void %tmp87(i8* %tmp89)
  br label %if.end72

if.else71:                                        ; preds = %if.then68
  %tmp90 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp91 = bitcast %struct.osip_message* %tmp90 to i8*
  call void @free(i8* %tmp91) #8
  br label %if.end72

if.end72:                                         ; preds = %if.else71, %if.then70
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end66, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_clone(%struct.osip_message* %sip, %struct.osip_message** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca %struct.osip_message**, align 8
  %copy = alloca %struct.osip_message*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %accept = alloca %struct.osip_content_type*, align 8
  %accept2 = alloca %struct.osip_content_type*, align 8
  %accept_encoding = alloca %struct.osip_accept_encoding*, align 8
  %accept_encoding2 = alloca %struct.osip_accept_encoding*, align 8
  %accept_language = alloca %struct.osip_accept_encoding*, align 8
  %accept_language2 = alloca %struct.osip_accept_encoding*, align 8
  %alert_info = alloca %struct.osip_call_info*, align 8
  %alert_info2 = alloca %struct.osip_call_info*, align 8
  %allow = alloca %struct.osip_content_length*, align 8
  %allow2 = alloca %struct.osip_content_length*, align 8
  %authentication_info = alloca %struct.osip_authentication_info*, align 8
  %authentication_info2 = alloca %struct.osip_authentication_info*, align 8
  %call_info = alloca %struct.osip_call_info*, align 8
  %call_info2 = alloca %struct.osip_call_info*, align 8
  %content_encoding = alloca %struct.osip_content_length*, align 8
  %content_encoding2 = alloca %struct.osip_content_length*, align 8
  %error_info = alloca %struct.osip_call_info*, align 8
  %error_info2 = alloca %struct.osip_call_info*, align 8
  %proxy_authentication_info = alloca %struct.osip_authentication_info*, align 8
  %proxy_authentication_info2 = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store %struct.osip_message** %dest, %struct.osip_message*** %dest.addr, align 8
  store i32 0, i32* %pos, align 4
  %tmp = load %struct.osip_message**, %struct.osip_message*** %dest.addr, align 8
  store %struct.osip_message* null, %struct.osip_message** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_message_init(%struct.osip_message** %copy)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp4, i32 0, i32 2
  %tmp5 = load i8*, i8** %sip_method, align 8
  %call4 = call i8* @osip_strdup(i8* %tmp5)
  %tmp6 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %sip_method5 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp6, i32 0, i32 2
  store i8* %call4, i8** %sip_method5, align 8
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method6 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 2
  %tmp8 = load i8*, i8** %sip_method6, align 8
  %cmp7 = icmp ne i8* %tmp8, null
  br i1 %cmp7, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %if.end3
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %sip_method8 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 2
  %tmp10 = load i8*, i8** %sip_method8, align 8
  %cmp9 = icmp eq i8* %tmp10, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %land.lhs.true
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end11:                                         ; preds = %land.lhs.true, %if.end3
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %sip_version, align 8
  %call12 = call i8* @osip_strdup(i8* %tmp13)
  %tmp14 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %sip_version13 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp14, i32 0, i32 0
  store i8* %call12, i8** %sip_version13, align 8
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version14 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %sip_version14, align 8
  %cmp15 = icmp ne i8* %tmp16, null
  br i1 %cmp15, label %land.lhs.true16, label %if.end20

land.lhs.true16:                                  ; preds = %if.end11
  %tmp17 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %sip_version17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %sip_version17, align 8
  %cmp18 = icmp eq i8* %tmp18, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %land.lhs.true16
  %tmp19 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp19)
  store i32 -4, i32* %retval
  br label %return

if.end20:                                         ; preds = %land.lhs.true16, %if.end11
  %tmp20 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp20, i32 0, i32 3
  %tmp21 = load i32, i32* %status_code, align 4
  %tmp22 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %status_code21 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp22, i32 0, i32 3
  store i32 %tmp21, i32* %status_code21, align 4
  %tmp23 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp23, i32 0, i32 4
  %tmp24 = load i8*, i8** %reason_phrase, align 8
  %call22 = call i8* @osip_strdup(i8* %tmp24)
  %tmp25 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %reason_phrase23 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp25, i32 0, i32 4
  store i8* %call22, i8** %reason_phrase23, align 8
  %tmp26 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase24 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp26, i32 0, i32 4
  %tmp27 = load i8*, i8** %reason_phrase24, align 8
  %cmp25 = icmp ne i8* %tmp27, null
  br i1 %cmp25, label %land.lhs.true26, label %if.end30

land.lhs.true26:                                  ; preds = %if.end20
  %tmp28 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %reason_phrase27 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp28, i32 0, i32 4
  %tmp29 = load i8*, i8** %reason_phrase27, align 8
  %cmp28 = icmp eq i8* %tmp29, null
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %land.lhs.true26
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp30)
  store i32 -4, i32* %retval
  br label %return

if.end30:                                         ; preds = %land.lhs.true26, %if.end20
  %tmp31 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp31, i32 0, i32 1
  %tmp32 = load %struct.osip_uri*, %struct.osip_uri** %req_uri, align 8
  %cmp31 = icmp ne %struct.osip_uri* %tmp32, null
  br i1 %cmp31, label %if.then32, label %if.end39

if.then32:                                        ; preds = %if.end30
  %tmp33 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri33 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp33, i32 0, i32 1
  %tmp34 = load %struct.osip_uri*, %struct.osip_uri** %req_uri33, align 8
  %tmp35 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %req_uri34 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp35, i32 0, i32 1
  %call35 = call i32 @osip_uri_clone(%struct.osip_uri* %tmp34, %struct.osip_uri** %req_uri34)
  store i32 %call35, i32* %i, align 4
  %tmp36 = load i32, i32* %i, align 4
  %cmp36 = icmp ne i32 %tmp36, 0
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.then32
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp37)
  %tmp38 = load i32, i32* %i, align 4
  store i32 %tmp38, i32* %retval
  br label %return

if.end38:                                         ; preds = %if.then32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end30
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end46, %if.end39
  %tmp39 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp39, i32 0, i32 5
  %tmp40 = load i32, i32* %pos, align 4
  %call40 = call i32 @osip_list_eol(%struct.osip_list* %accepts, i32 %tmp40)
  %tobool = icmp ne i32 %call40, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp41 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts41 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp41, i32 0, i32 5
  %tmp42 = load i32, i32* %pos, align 4
  %call42 = call i8* @osip_list_get(%struct.osip_list* %accepts41, i32 %tmp42)
  %tmp43 = bitcast i8* %call42 to %struct.osip_content_type*
  store %struct.osip_content_type* %tmp43, %struct.osip_content_type** %accept, align 8
  %tmp44 = load %struct.osip_content_type*, %struct.osip_content_type** %accept, align 8
  %call43 = call i32 @osip_content_type_clone(%struct.osip_content_type* %tmp44, %struct.osip_content_type** %accept2)
  store i32 %call43, i32* %i, align 4
  %tmp45 = load i32, i32* %i, align 4
  %cmp44 = icmp ne i32 %tmp45, 0
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %while.body
  %tmp46 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp46)
  %tmp47 = load i32, i32* %i, align 4
  store i32 %tmp47, i32* %retval
  br label %return

if.end46:                                         ; preds = %while.body
  %tmp48 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %accepts47 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp48, i32 0, i32 5
  %tmp49 = load %struct.osip_content_type*, %struct.osip_content_type** %accept2, align 8
  %tmp50 = bitcast %struct.osip_content_type* %tmp49 to i8*
  %call48 = call i32 @osip_list_add(%struct.osip_list* %accepts47, i8* %tmp50, i32 -1)
  %tmp51 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp51, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %pos, align 4
  br label %while.cond49

while.cond49:                                     ; preds = %if.end59, %while.end
  %tmp52 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp52, i32 0, i32 6
  %tmp53 = load i32, i32* %pos, align 4
  %call50 = call i32 @osip_list_eol(%struct.osip_list* %accept_encodings, i32 %tmp53)
  %tobool51 = icmp ne i32 %call50, 0
  %lnot52 = xor i1 %tobool51, true
  br i1 %lnot52, label %while.body53, label %while.end63

while.body53:                                     ; preds = %while.cond49
  %tmp54 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings54 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp54, i32 0, i32 6
  %tmp55 = load i32, i32* %pos, align 4
  %call55 = call i8* @osip_list_get(%struct.osip_list* %accept_encodings54, i32 %tmp55)
  %tmp56 = bitcast i8* %call55 to %struct.osip_accept_encoding*
  store %struct.osip_accept_encoding* %tmp56, %struct.osip_accept_encoding** %accept_encoding, align 8
  %tmp57 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding, align 8
  %call56 = call i32 @osip_accept_encoding_clone(%struct.osip_accept_encoding* %tmp57, %struct.osip_accept_encoding** %accept_encoding2)
  store i32 %call56, i32* %i, align 4
  %tmp58 = load i32, i32* %i, align 4
  %cmp57 = icmp ne i32 %tmp58, 0
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %while.body53
  %tmp59 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp59)
  %tmp60 = load i32, i32* %i, align 4
  store i32 %tmp60, i32* %retval
  br label %return

if.end59:                                         ; preds = %while.body53
  %tmp61 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %accept_encodings60 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp61, i32 0, i32 6
  %tmp62 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding2, align 8
  %tmp63 = bitcast %struct.osip_accept_encoding* %tmp62 to i8*
  %call61 = call i32 @osip_list_add(%struct.osip_list* %accept_encodings60, i8* %tmp63, i32 -1)
  %tmp64 = load i32, i32* %pos, align 4
  %inc62 = add nsw i32 %tmp64, 1
  store i32 %inc62, i32* %pos, align 4
  br label %while.cond49

while.end63:                                      ; preds = %while.cond49
  store i32 0, i32* %pos, align 4
  br label %while.cond64

while.cond64:                                     ; preds = %if.end74, %while.end63
  %tmp65 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp65, i32 0, i32 7
  %tmp66 = load i32, i32* %pos, align 4
  %call65 = call i32 @osip_list_eol(%struct.osip_list* %accept_languages, i32 %tmp66)
  %tobool66 = icmp ne i32 %call65, 0
  %lnot67 = xor i1 %tobool66, true
  br i1 %lnot67, label %while.body68, label %while.end78

while.body68:                                     ; preds = %while.cond64
  %tmp67 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages69 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp67, i32 0, i32 7
  %tmp68 = load i32, i32* %pos, align 4
  %call70 = call i8* @osip_list_get(%struct.osip_list* %accept_languages69, i32 %tmp68)
  %tmp69 = bitcast i8* %call70 to %struct.osip_accept_encoding*
  store %struct.osip_accept_encoding* %tmp69, %struct.osip_accept_encoding** %accept_language, align 8
  %tmp70 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language, align 8
  %call71 = call i32 @osip_accept_encoding_clone(%struct.osip_accept_encoding* %tmp70, %struct.osip_accept_encoding** %accept_language2)
  store i32 %call71, i32* %i, align 4
  %tmp71 = load i32, i32* %i, align 4
  %cmp72 = icmp ne i32 %tmp71, 0
  br i1 %cmp72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %while.body68
  %tmp72 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp72)
  %tmp73 = load i32, i32* %i, align 4
  store i32 %tmp73, i32* %retval
  br label %return

if.end74:                                         ; preds = %while.body68
  %tmp74 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %accept_languages75 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp74, i32 0, i32 7
  %tmp75 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language2, align 8
  %tmp76 = bitcast %struct.osip_accept_encoding* %tmp75 to i8*
  %call76 = call i32 @osip_list_add(%struct.osip_list* %accept_languages75, i8* %tmp76, i32 -1)
  %tmp77 = load i32, i32* %pos, align 4
  %inc77 = add nsw i32 %tmp77, 1
  store i32 %inc77, i32* %pos, align 4
  br label %while.cond64

while.end78:                                      ; preds = %while.cond64
  store i32 0, i32* %pos, align 4
  br label %while.cond79

while.cond79:                                     ; preds = %if.end89, %while.end78
  %tmp78 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp78, i32 0, i32 8
  %tmp79 = load i32, i32* %pos, align 4
  %call80 = call i32 @osip_list_eol(%struct.osip_list* %alert_infos, i32 %tmp79)
  %tobool81 = icmp ne i32 %call80, 0
  %lnot82 = xor i1 %tobool81, true
  br i1 %lnot82, label %while.body83, label %while.end93

while.body83:                                     ; preds = %while.cond79
  %tmp80 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos84 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp80, i32 0, i32 8
  %tmp81 = load i32, i32* %pos, align 4
  %call85 = call i8* @osip_list_get(%struct.osip_list* %alert_infos84, i32 %tmp81)
  %tmp82 = bitcast i8* %call85 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp82, %struct.osip_call_info** %alert_info, align 8
  %tmp83 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info, align 8
  %call86 = call i32 @osip_call_info_clone(%struct.osip_call_info* %tmp83, %struct.osip_call_info** %alert_info2)
  store i32 %call86, i32* %i, align 4
  %tmp84 = load i32, i32* %i, align 4
  %cmp87 = icmp ne i32 %tmp84, 0
  br i1 %cmp87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %while.body83
  %tmp85 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp85)
  %tmp86 = load i32, i32* %i, align 4
  store i32 %tmp86, i32* %retval
  br label %return

if.end89:                                         ; preds = %while.body83
  %tmp87 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %alert_infos90 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp87, i32 0, i32 8
  %tmp88 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info2, align 8
  %tmp89 = bitcast %struct.osip_call_info* %tmp88 to i8*
  %call91 = call i32 @osip_list_add(%struct.osip_list* %alert_infos90, i8* %tmp89, i32 -1)
  %tmp90 = load i32, i32* %pos, align 4
  %inc92 = add nsw i32 %tmp90, 1
  store i32 %inc92, i32* %pos, align 4
  br label %while.cond79

while.end93:                                      ; preds = %while.cond79
  store i32 0, i32* %pos, align 4
  br label %while.cond94

while.cond94:                                     ; preds = %if.end104, %while.end93
  %tmp91 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp91, i32 0, i32 9
  %tmp92 = load i32, i32* %pos, align 4
  %call95 = call i32 @osip_list_eol(%struct.osip_list* %allows, i32 %tmp92)
  %tobool96 = icmp ne i32 %call95, 0
  %lnot97 = xor i1 %tobool96, true
  br i1 %lnot97, label %while.body98, label %while.end108

while.body98:                                     ; preds = %while.cond94
  %tmp93 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows99 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp93, i32 0, i32 9
  %tmp94 = load i32, i32* %pos, align 4
  %call100 = call i8* @osip_list_get(%struct.osip_list* %allows99, i32 %tmp94)
  %tmp95 = bitcast i8* %call100 to %struct.osip_content_length*
  store %struct.osip_content_length* %tmp95, %struct.osip_content_length** %allow, align 8
  %tmp96 = load %struct.osip_content_length*, %struct.osip_content_length** %allow, align 8
  %call101 = call i32 @osip_content_length_clone(%struct.osip_content_length* %tmp96, %struct.osip_content_length** %allow2)
  store i32 %call101, i32* %i, align 4
  %tmp97 = load i32, i32* %i, align 4
  %cmp102 = icmp ne i32 %tmp97, 0
  br i1 %cmp102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %while.body98
  %tmp98 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp98)
  %tmp99 = load i32, i32* %i, align 4
  store i32 %tmp99, i32* %retval
  br label %return

if.end104:                                        ; preds = %while.body98
  %tmp100 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %allows105 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp100, i32 0, i32 9
  %tmp101 = load %struct.osip_content_length*, %struct.osip_content_length** %allow2, align 8
  %tmp102 = bitcast %struct.osip_content_length* %tmp101 to i8*
  %call106 = call i32 @osip_list_add(%struct.osip_list* %allows105, i8* %tmp102, i32 -1)
  %tmp103 = load i32, i32* %pos, align 4
  %inc107 = add nsw i32 %tmp103, 1
  store i32 %inc107, i32* %pos, align 4
  br label %while.cond94

while.end108:                                     ; preds = %while.cond94
  store i32 0, i32* %pos, align 4
  br label %while.cond109

while.cond109:                                    ; preds = %if.end119, %while.end108
  %tmp104 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp104, i32 0, i32 10
  %tmp105 = load i32, i32* %pos, align 4
  %call110 = call i32 @osip_list_eol(%struct.osip_list* %authentication_infos, i32 %tmp105)
  %tobool111 = icmp ne i32 %call110, 0
  %lnot112 = xor i1 %tobool111, true
  br i1 %lnot112, label %while.body113, label %while.end123

while.body113:                                    ; preds = %while.cond109
  %tmp106 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos114 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp106, i32 0, i32 10
  %tmp107 = load i32, i32* %pos, align 4
  %call115 = call i8* @osip_list_get(%struct.osip_list* %authentication_infos114, i32 %tmp107)
  %tmp108 = bitcast i8* %call115 to %struct.osip_authentication_info*
  store %struct.osip_authentication_info* %tmp108, %struct.osip_authentication_info** %authentication_info, align 8
  %tmp109 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info, align 8
  %call116 = call i32 @osip_authentication_info_clone(%struct.osip_authentication_info* %tmp109, %struct.osip_authentication_info** %authentication_info2)
  store i32 %call116, i32* %i, align 4
  %tmp110 = load i32, i32* %i, align 4
  %cmp117 = icmp ne i32 %tmp110, 0
  br i1 %cmp117, label %if.then118, label %if.end119

if.then118:                                       ; preds = %while.body113
  %tmp111 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp111)
  %tmp112 = load i32, i32* %i, align 4
  store i32 %tmp112, i32* %retval
  br label %return

if.end119:                                        ; preds = %while.body113
  %tmp113 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %authentication_infos120 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp113, i32 0, i32 10
  %tmp114 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info2, align 8
  %tmp115 = bitcast %struct.osip_authentication_info* %tmp114 to i8*
  %call121 = call i32 @osip_list_add(%struct.osip_list* %authentication_infos120, i8* %tmp115, i32 -1)
  %tmp116 = load i32, i32* %pos, align 4
  %inc122 = add nsw i32 %tmp116, 1
  store i32 %inc122, i32* %pos, align 4
  br label %while.cond109

while.end123:                                     ; preds = %while.cond109
  store i32 0, i32* %pos, align 4
  br label %while.cond124

while.cond124:                                    ; preds = %if.end134, %while.end123
  %tmp117 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp117, i32 0, i32 13
  %tmp118 = load i32, i32* %pos, align 4
  %call125 = call i32 @osip_list_eol(%struct.osip_list* %call_infos, i32 %tmp118)
  %tobool126 = icmp ne i32 %call125, 0
  %lnot127 = xor i1 %tobool126, true
  br i1 %lnot127, label %while.body128, label %while.end138

while.body128:                                    ; preds = %while.cond124
  %tmp119 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos129 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp119, i32 0, i32 13
  %tmp120 = load i32, i32* %pos, align 4
  %call130 = call i8* @osip_list_get(%struct.osip_list* %call_infos129, i32 %tmp120)
  %tmp121 = bitcast i8* %call130 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp121, %struct.osip_call_info** %call_info, align 8
  %tmp122 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info, align 8
  %call131 = call i32 @osip_call_info_clone(%struct.osip_call_info* %tmp122, %struct.osip_call_info** %call_info2)
  store i32 %call131, i32* %i, align 4
  %tmp123 = load i32, i32* %i, align 4
  %cmp132 = icmp ne i32 %tmp123, 0
  br i1 %cmp132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %while.body128
  %tmp124 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp124)
  %tmp125 = load i32, i32* %i, align 4
  store i32 %tmp125, i32* %retval
  br label %return

if.end134:                                        ; preds = %while.body128
  %tmp126 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %call_infos135 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp126, i32 0, i32 13
  %tmp127 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info2, align 8
  %tmp128 = bitcast %struct.osip_call_info* %tmp127 to i8*
  %call136 = call i32 @osip_list_add(%struct.osip_list* %call_infos135, i8* %tmp128, i32 -1)
  %tmp129 = load i32, i32* %pos, align 4
  %inc137 = add nsw i32 %tmp129, 1
  store i32 %inc137, i32* %pos, align 4
  br label %while.cond124

while.end138:                                     ; preds = %while.cond124
  store i32 0, i32* %pos, align 4
  br label %while.cond139

while.cond139:                                    ; preds = %if.end149, %while.end138
  %tmp130 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp130, i32 0, i32 15
  %tmp131 = load i32, i32* %pos, align 4
  %call140 = call i32 @osip_list_eol(%struct.osip_list* %content_encodings, i32 %tmp131)
  %tobool141 = icmp ne i32 %call140, 0
  %lnot142 = xor i1 %tobool141, true
  br i1 %lnot142, label %while.body143, label %while.end153

while.body143:                                    ; preds = %while.cond139
  %tmp132 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings144 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp132, i32 0, i32 15
  %tmp133 = load i32, i32* %pos, align 4
  %call145 = call i8* @osip_list_get(%struct.osip_list* %content_encodings144, i32 %tmp133)
  %tmp134 = bitcast i8* %call145 to %struct.osip_content_length*
  store %struct.osip_content_length* %tmp134, %struct.osip_content_length** %content_encoding, align 8
  %tmp135 = load %struct.osip_content_length*, %struct.osip_content_length** %content_encoding, align 8
  %call146 = call i32 @osip_content_length_clone(%struct.osip_content_length* %tmp135, %struct.osip_content_length** %content_encoding2)
  store i32 %call146, i32* %i, align 4
  %tmp136 = load i32, i32* %i, align 4
  %cmp147 = icmp ne i32 %tmp136, 0
  br i1 %cmp147, label %if.then148, label %if.end149

if.then148:                                       ; preds = %while.body143
  %tmp137 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp137)
  %tmp138 = load i32, i32* %i, align 4
  store i32 %tmp138, i32* %retval
  br label %return

if.end149:                                        ; preds = %while.body143
  %tmp139 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %content_encodings150 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp139, i32 0, i32 15
  %tmp140 = load %struct.osip_content_length*, %struct.osip_content_length** %content_encoding2, align 8
  %tmp141 = bitcast %struct.osip_content_length* %tmp140 to i8*
  %call151 = call i32 @osip_list_add(%struct.osip_list* %content_encodings150, i8* %tmp141, i32 -1)
  %tmp142 = load i32, i32* %pos, align 4
  %inc152 = add nsw i32 %tmp142, 1
  store i32 %inc152, i32* %pos, align 4
  br label %while.cond139

while.end153:                                     ; preds = %while.cond139
  store i32 0, i32* %pos, align 4
  br label %while.cond154

while.cond154:                                    ; preds = %if.end164, %while.end153
  %tmp143 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp143, i32 0, i32 19
  %tmp144 = load i32, i32* %pos, align 4
  %call155 = call i32 @osip_list_eol(%struct.osip_list* %error_infos, i32 %tmp144)
  %tobool156 = icmp ne i32 %call155, 0
  %lnot157 = xor i1 %tobool156, true
  br i1 %lnot157, label %while.body158, label %while.end168

while.body158:                                    ; preds = %while.cond154
  %tmp145 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos159 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp145, i32 0, i32 19
  %tmp146 = load i32, i32* %pos, align 4
  %call160 = call i8* @osip_list_get(%struct.osip_list* %error_infos159, i32 %tmp146)
  %tmp147 = bitcast i8* %call160 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp147, %struct.osip_call_info** %error_info, align 8
  %tmp148 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info, align 8
  %call161 = call i32 @osip_call_info_clone(%struct.osip_call_info* %tmp148, %struct.osip_call_info** %error_info2)
  store i32 %call161, i32* %i, align 4
  %tmp149 = load i32, i32* %i, align 4
  %cmp162 = icmp ne i32 %tmp149, 0
  br i1 %cmp162, label %if.then163, label %if.end164

if.then163:                                       ; preds = %while.body158
  %tmp150 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp150)
  %tmp151 = load i32, i32* %i, align 4
  store i32 %tmp151, i32* %retval
  br label %return

if.end164:                                        ; preds = %while.body158
  %tmp152 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %error_infos165 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp152, i32 0, i32 19
  %tmp153 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info2, align 8
  %tmp154 = bitcast %struct.osip_call_info* %tmp153 to i8*
  %call166 = call i32 @osip_list_add(%struct.osip_list* %error_infos165, i8* %tmp154, i32 -1)
  %tmp155 = load i32, i32* %pos, align 4
  %inc167 = add nsw i32 %tmp155, 1
  store i32 %inc167, i32* %pos, align 4
  br label %while.cond154

while.end168:                                     ; preds = %while.cond154
  store i32 0, i32* %pos, align 4
  br label %while.cond169

while.cond169:                                    ; preds = %if.end179, %while.end168
  %tmp156 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp156, i32 0, i32 23
  %tmp157 = load i32, i32* %pos, align 4
  %call170 = call i32 @osip_list_eol(%struct.osip_list* %proxy_authentication_infos, i32 %tmp157)
  %tobool171 = icmp ne i32 %call170, 0
  %lnot172 = xor i1 %tobool171, true
  br i1 %lnot172, label %while.body173, label %while.end183

while.body173:                                    ; preds = %while.cond169
  %tmp158 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos174 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp158, i32 0, i32 23
  %tmp159 = load i32, i32* %pos, align 4
  %call175 = call i8* @osip_list_get(%struct.osip_list* %proxy_authentication_infos174, i32 %tmp159)
  %tmp160 = bitcast i8* %call175 to %struct.osip_authentication_info*
  store %struct.osip_authentication_info* %tmp160, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %tmp161 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %call176 = call i32 @osip_authentication_info_clone(%struct.osip_authentication_info* %tmp161, %struct.osip_authentication_info** %proxy_authentication_info2)
  store i32 %call176, i32* %i, align 4
  %tmp162 = load i32, i32* %i, align 4
  %cmp177 = icmp ne i32 %tmp162, 0
  br i1 %cmp177, label %if.then178, label %if.end179

if.then178:                                       ; preds = %while.body173
  %tmp163 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp163)
  %tmp164 = load i32, i32* %i, align 4
  store i32 %tmp164, i32* %retval
  br label %return

if.end179:                                        ; preds = %while.body173
  %tmp165 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %proxy_authentication_infos180 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp165, i32 0, i32 23
  %tmp166 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info2, align 8
  %tmp167 = bitcast %struct.osip_authentication_info* %tmp166 to i8*
  %call181 = call i32 @osip_list_add(%struct.osip_list* %proxy_authentication_infos180, i8* %tmp167, i32 -1)
  %tmp168 = load i32, i32* %pos, align 4
  %inc182 = add nsw i32 %tmp168, 1
  store i32 %inc182, i32* %pos, align 4
  br label %while.cond169

while.end183:                                     ; preds = %while.cond169
  %tmp169 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp169, i32 0, i32 11
  %tmp170 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %authorizations184 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp170, i32 0, i32 11
  %call185 = call i32 @osip_list_clone(%struct.osip_list* %authorizations, %struct.osip_list* %authorizations184, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authorization*, %struct.osip_authorization**)* @osip_authorization_clone to i32 (i8*, i8**)*))
  store i32 %call185, i32* %i, align 4
  %tmp171 = load i32, i32* %i, align 4
  %cmp186 = icmp ne i32 %tmp171, 0
  br i1 %cmp186, label %if.then187, label %if.end188

if.then187:                                       ; preds = %while.end183
  %tmp172 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp172)
  %tmp173 = load i32, i32* %i, align 4
  store i32 %tmp173, i32* %retval
  br label %return

if.end188:                                        ; preds = %while.end183
  %tmp174 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp174, i32 0, i32 12
  %tmp175 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id, align 8
  %cmp189 = icmp ne %struct.osip_call_id* %tmp175, null
  br i1 %cmp189, label %if.then190, label %if.end197

if.then190:                                       ; preds = %if.end188
  %tmp176 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id191 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp176, i32 0, i32 12
  %tmp177 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id191, align 8
  %tmp178 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %call_id192 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp178, i32 0, i32 12
  %call193 = call i32 @osip_call_id_clone(%struct.osip_call_id* %tmp177, %struct.osip_call_id** %call_id192)
  store i32 %call193, i32* %i, align 4
  %tmp179 = load i32, i32* %i, align 4
  %cmp194 = icmp ne i32 %tmp179, 0
  br i1 %cmp194, label %if.then195, label %if.end196

if.then195:                                       ; preds = %if.then190
  %tmp180 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp180)
  %tmp181 = load i32, i32* %i, align 4
  store i32 %tmp181, i32* %retval
  br label %return

if.end196:                                        ; preds = %if.then190
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.end188
  %tmp182 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp182, i32 0, i32 14
  %tmp183 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %contacts198 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp183, i32 0, i32 14
  %call199 = call i32 @osip_list_clone(%struct.osip_list* %contacts, %struct.osip_list* %contacts198, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, %struct.osip_from**)* @osip_contact_clone to i32 (i8*, i8**)*))
  store i32 %call199, i32* %i, align 4
  %tmp184 = load i32, i32* %i, align 4
  %cmp200 = icmp ne i32 %tmp184, 0
  br i1 %cmp200, label %if.then201, label %if.end202

if.then201:                                       ; preds = %if.end197
  %tmp185 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp185)
  %tmp186 = load i32, i32* %i, align 4
  store i32 %tmp186, i32* %retval
  br label %return

if.end202:                                        ; preds = %if.end197
  %tmp187 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp187, i32 0, i32 16
  %tmp188 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  %cmp203 = icmp ne %struct.osip_content_length* %tmp188, null
  br i1 %cmp203, label %if.then204, label %if.end211

if.then204:                                       ; preds = %if.end202
  %tmp189 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length205 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp189, i32 0, i32 16
  %tmp190 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length205, align 8
  %tmp191 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %content_length206 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp191, i32 0, i32 16
  %call207 = call i32 @osip_content_length_clone(%struct.osip_content_length* %tmp190, %struct.osip_content_length** %content_length206)
  store i32 %call207, i32* %i, align 4
  %tmp192 = load i32, i32* %i, align 4
  %cmp208 = icmp ne i32 %tmp192, 0
  br i1 %cmp208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.then204
  %tmp193 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp193)
  %tmp194 = load i32, i32* %i, align 4
  store i32 %tmp194, i32* %retval
  br label %return

if.end210:                                        ; preds = %if.then204
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end202
  %tmp195 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp195, i32 0, i32 17
  %tmp196 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp212 = icmp ne %struct.osip_content_type* %tmp196, null
  br i1 %cmp212, label %if.then213, label %if.end220

if.then213:                                       ; preds = %if.end211
  %tmp197 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type214 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp197, i32 0, i32 17
  %tmp198 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type214, align 8
  %tmp199 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %content_type215 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp199, i32 0, i32 17
  %call216 = call i32 @osip_content_type_clone(%struct.osip_content_type* %tmp198, %struct.osip_content_type** %content_type215)
  store i32 %call216, i32* %i, align 4
  %tmp200 = load i32, i32* %i, align 4
  %cmp217 = icmp ne i32 %tmp200, 0
  br i1 %cmp217, label %if.then218, label %if.end219

if.then218:                                       ; preds = %if.then213
  %tmp201 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp201)
  %tmp202 = load i32, i32* %i, align 4
  store i32 %tmp202, i32* %retval
  br label %return

if.end219:                                        ; preds = %if.then213
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end211
  %tmp203 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp203, i32 0, i32 18
  %tmp204 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq, align 8
  %cmp221 = icmp ne %struct.osip_cseq* %tmp204, null
  br i1 %cmp221, label %if.then222, label %if.end229

if.then222:                                       ; preds = %if.end220
  %tmp205 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq223 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp205, i32 0, i32 18
  %tmp206 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq223, align 8
  %tmp207 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %cseq224 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp207, i32 0, i32 18
  %call225 = call i32 @osip_cseq_clone(%struct.osip_cseq* %tmp206, %struct.osip_cseq** %cseq224)
  store i32 %call225, i32* %i, align 4
  %tmp208 = load i32, i32* %i, align 4
  %cmp226 = icmp ne i32 %tmp208, 0
  br i1 %cmp226, label %if.then227, label %if.end228

if.then227:                                       ; preds = %if.then222
  %tmp209 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp209)
  %tmp210 = load i32, i32* %i, align 4
  store i32 %tmp210, i32* %retval
  br label %return

if.end228:                                        ; preds = %if.then222
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end220
  %tmp211 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp211, i32 0, i32 20
  %tmp212 = load %struct.osip_from*, %struct.osip_from** %from, align 8
  %cmp230 = icmp ne %struct.osip_from* %tmp212, null
  br i1 %cmp230, label %if.then231, label %if.end238

if.then231:                                       ; preds = %if.end229
  %tmp213 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from232 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp213, i32 0, i32 20
  %tmp214 = load %struct.osip_from*, %struct.osip_from** %from232, align 8
  %tmp215 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %from233 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp215, i32 0, i32 20
  %call234 = call i32 @osip_from_clone(%struct.osip_from* %tmp214, %struct.osip_from** %from233)
  store i32 %call234, i32* %i, align 4
  %tmp216 = load i32, i32* %i, align 4
  %cmp235 = icmp ne i32 %tmp216, 0
  br i1 %cmp235, label %if.then236, label %if.end237

if.then236:                                       ; preds = %if.then231
  %tmp217 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp217)
  %tmp218 = load i32, i32* %i, align 4
  store i32 %tmp218, i32* %retval
  br label %return

if.end237:                                        ; preds = %if.then231
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.end229
  %tmp219 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp219, i32 0, i32 21
  %tmp220 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version, align 8
  %cmp239 = icmp ne %struct.osip_content_length* %tmp220, null
  br i1 %cmp239, label %if.then240, label %if.end247

if.then240:                                       ; preds = %if.end238
  %tmp221 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version241 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp221, i32 0, i32 21
  %tmp222 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version241, align 8
  %tmp223 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %mime_version242 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp223, i32 0, i32 21
  %call243 = call i32 @osip_content_length_clone(%struct.osip_content_length* %tmp222, %struct.osip_content_length** %mime_version242)
  store i32 %call243, i32* %i, align 4
  %tmp224 = load i32, i32* %i, align 4
  %cmp244 = icmp ne i32 %tmp224, 0
  br i1 %cmp244, label %if.then245, label %if.end246

if.then245:                                       ; preds = %if.then240
  %tmp225 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp225)
  %tmp226 = load i32, i32* %i, align 4
  store i32 %tmp226, i32* %retval
  br label %return

if.end246:                                        ; preds = %if.then240
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.end238
  %tmp227 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp227, i32 0, i32 22
  %tmp228 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %proxy_authenticates248 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp228, i32 0, i32 22
  %call249 = call i32 @osip_list_clone(%struct.osip_list* %proxy_authenticates, %struct.osip_list* %proxy_authenticates248, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_www_authenticate*, %struct.osip_www_authenticate**)* @osip_www_authenticate_clone to i32 (i8*, i8**)*))
  store i32 %call249, i32* %i, align 4
  %tmp229 = load i32, i32* %i, align 4
  %cmp250 = icmp ne i32 %tmp229, 0
  br i1 %cmp250, label %if.then251, label %if.end252

if.then251:                                       ; preds = %if.end247
  %tmp230 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp230)
  %tmp231 = load i32, i32* %i, align 4
  store i32 %tmp231, i32* %retval
  br label %return

if.end252:                                        ; preds = %if.end247
  %tmp232 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp232, i32 0, i32 24
  %tmp233 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %proxy_authorizations253 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp233, i32 0, i32 24
  %call254 = call i32 @osip_list_clone(%struct.osip_list* %proxy_authorizations, %struct.osip_list* %proxy_authorizations253, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_authorization*, %struct.osip_authorization**)* @osip_authorization_clone to i32 (i8*, i8**)*))
  store i32 %call254, i32* %i, align 4
  %tmp234 = load i32, i32* %i, align 4
  %cmp255 = icmp ne i32 %tmp234, 0
  br i1 %cmp255, label %if.then256, label %if.end257

if.then256:                                       ; preds = %if.end252
  %tmp235 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp235)
  %tmp236 = load i32, i32* %i, align 4
  store i32 %tmp236, i32* %retval
  br label %return

if.end257:                                        ; preds = %if.end252
  %tmp237 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp237, i32 0, i32 25
  %tmp238 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %record_routes258 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp238, i32 0, i32 25
  %call259 = call i32 @osip_list_clone(%struct.osip_list* %record_routes, %struct.osip_list* %record_routes258, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, %struct.osip_from**)* @osip_from_clone to i32 (i8*, i8**)*))
  store i32 %call259, i32* %i, align 4
  %tmp239 = load i32, i32* %i, align 4
  %cmp260 = icmp ne i32 %tmp239, 0
  br i1 %cmp260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end257
  %tmp240 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp240)
  %tmp241 = load i32, i32* %i, align 4
  store i32 %tmp241, i32* %retval
  br label %return

if.end262:                                        ; preds = %if.end257
  %tmp242 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp242, i32 0, i32 26
  %tmp243 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %routes263 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp243, i32 0, i32 26
  %call264 = call i32 @osip_list_clone(%struct.osip_list* %routes, %struct.osip_list* %routes263, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_from*, %struct.osip_from**)* @osip_from_clone to i32 (i8*, i8**)*))
  store i32 %call264, i32* %i, align 4
  %tmp244 = load i32, i32* %i, align 4
  %cmp265 = icmp ne i32 %tmp244, 0
  br i1 %cmp265, label %if.then266, label %if.end267

if.then266:                                       ; preds = %if.end262
  %tmp245 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp245)
  %tmp246 = load i32, i32* %i, align 4
  store i32 %tmp246, i32* %retval
  br label %return

if.end267:                                        ; preds = %if.end262
  %tmp247 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp247, i32 0, i32 27
  %tmp248 = load %struct.osip_from*, %struct.osip_from** %to, align 8
  %cmp268 = icmp ne %struct.osip_from* %tmp248, null
  br i1 %cmp268, label %if.then269, label %if.end276

if.then269:                                       ; preds = %if.end267
  %tmp249 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to270 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp249, i32 0, i32 27
  %tmp250 = load %struct.osip_from*, %struct.osip_from** %to270, align 8
  %tmp251 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %to271 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp251, i32 0, i32 27
  %call272 = call i32 @osip_to_clone(%struct.osip_from* %tmp250, %struct.osip_from** %to271)
  store i32 %call272, i32* %i, align 4
  %tmp252 = load i32, i32* %i, align 4
  %cmp273 = icmp ne i32 %tmp252, 0
  br i1 %cmp273, label %if.then274, label %if.end275

if.then274:                                       ; preds = %if.then269
  %tmp253 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp253)
  %tmp254 = load i32, i32* %i, align 4
  store i32 %tmp254, i32* %retval
  br label %return

if.end275:                                        ; preds = %if.then269
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.end267
  %tmp255 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp255, i32 0, i32 28
  %tmp256 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %vias277 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp256, i32 0, i32 28
  %call278 = call i32 @osip_list_clone(%struct.osip_list* %vias, %struct.osip_list* %vias277, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_via*, %struct.osip_via**)* @osip_via_clone to i32 (i8*, i8**)*))
  store i32 %call278, i32* %i, align 4
  %tmp257 = load i32, i32* %i, align 4
  %cmp279 = icmp ne i32 %tmp257, 0
  br i1 %cmp279, label %if.then280, label %if.end281

if.then280:                                       ; preds = %if.end276
  %tmp258 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp258)
  %tmp259 = load i32, i32* %i, align 4
  store i32 %tmp259, i32* %retval
  br label %return

if.end281:                                        ; preds = %if.end276
  %tmp260 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp260, i32 0, i32 29
  %tmp261 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %www_authenticates282 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp261, i32 0, i32 29
  %call283 = call i32 @osip_list_clone(%struct.osip_list* %www_authenticates, %struct.osip_list* %www_authenticates282, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_www_authenticate*, %struct.osip_www_authenticate**)* @osip_www_authenticate_clone to i32 (i8*, i8**)*))
  store i32 %call283, i32* %i, align 4
  %tmp262 = load i32, i32* %i, align 4
  %cmp284 = icmp ne i32 %tmp262, 0
  br i1 %cmp284, label %if.then285, label %if.end286

if.then285:                                       ; preds = %if.end281
  %tmp263 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp263)
  %tmp264 = load i32, i32* %i, align 4
  store i32 %tmp264, i32* %retval
  br label %return

if.end286:                                        ; preds = %if.end281
  %tmp265 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp265, i32 0, i32 30
  %tmp266 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %headers287 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp266, i32 0, i32 30
  %call288 = call i32 @osip_list_clone(%struct.osip_list* %headers, %struct.osip_list* %headers287, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_header*, %struct.osip_header**)* @osip_header_clone to i32 (i8*, i8**)*))
  store i32 %call288, i32* %i, align 4
  %tmp267 = load i32, i32* %i, align 4
  %cmp289 = icmp ne i32 %tmp267, 0
  br i1 %cmp289, label %if.then290, label %if.end291

if.then290:                                       ; preds = %if.end286
  %tmp268 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp268)
  %tmp269 = load i32, i32* %i, align 4
  store i32 %tmp269, i32* %retval
  br label %return

if.end291:                                        ; preds = %if.end286
  %tmp270 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp270, i32 0, i32 31
  %tmp271 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %bodies292 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp271, i32 0, i32 31
  %call293 = call i32 @osip_list_clone(%struct.osip_list* %bodies, %struct.osip_list* %bodies292, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_body*, %struct.osip_body**)* @osip_body_clone to i32 (i8*, i8**)*))
  store i32 %call293, i32* %i, align 4
  %tmp272 = load i32, i32* %i, align 4
  %cmp294 = icmp ne i32 %tmp272, 0
  br i1 %cmp294, label %if.then295, label %if.end296

if.then295:                                       ; preds = %if.end291
  %tmp273 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp273)
  %tmp274 = load i32, i32* %i, align 4
  store i32 %tmp274, i32* %retval
  br label %return

if.end296:                                        ; preds = %if.end291
  %tmp275 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp275, i32 0, i32 34
  %tmp276 = load i64, i64* %message_length, align 8
  %tmp277 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %message_length297 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp277, i32 0, i32 34
  store i64 %tmp276, i64* %message_length297, align 8
  %tmp278 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp278, i32 0, i32 33
  %tmp279 = load i8*, i8** %message, align 8
  %call298 = call i8* @osip_strdup(i8* %tmp279)
  %tmp280 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %message299 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp280, i32 0, i32 33
  store i8* %call298, i8** %message299, align 8
  %tmp281 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %message300 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp281, i32 0, i32 33
  %tmp282 = load i8*, i8** %message300, align 8
  %cmp301 = icmp eq i8* %tmp282, null
  br i1 %cmp301, label %land.lhs.true302, label %if.end306

land.lhs.true302:                                 ; preds = %if.end296
  %tmp283 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message303 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp283, i32 0, i32 33
  %tmp284 = load i8*, i8** %message303, align 8
  %cmp304 = icmp ne i8* %tmp284, null
  br i1 %cmp304, label %if.then305, label %if.end306

if.then305:                                       ; preds = %land.lhs.true302
  %tmp285 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  call void @osip_message_free(%struct.osip_message* %tmp285)
  store i32 -4, i32* %retval
  br label %return

if.end306:                                        ; preds = %land.lhs.true302, %if.end296
  %tmp286 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp286, i32 0, i32 32
  %tmp287 = load i32, i32* %message_property, align 4
  %tmp288 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %message_property307 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp288, i32 0, i32 32
  store i32 %tmp287, i32* %message_property307, align 4
  %tmp289 = load %struct.osip_message*, %struct.osip_message** %copy, align 8
  %tmp290 = load %struct.osip_message**, %struct.osip_message*** %dest.addr, align 8
  store %struct.osip_message* %tmp289, %struct.osip_message** %tmp290, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end306, %if.then305, %if.then295, %if.then290, %if.then285, %if.then280, %if.then274, %if.then266, %if.then261, %if.then256, %if.then251, %if.then245, %if.then236, %if.then227, %if.then218, %if.then209, %if.then201, %if.then195, %if.then187, %if.then178, %if.then163, %if.then148, %if.then133, %if.then118, %if.then103, %if.then88, %if.then73, %if.then58, %if.then45, %if.then37, %if.then29, %if.then19, %if.then10, %if.then2, %if.then
  %tmp291 = load i32, i32* %retval
  ret i32 %tmp291
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_knownheaderlist(%struct.osip_list* %header_list, i32 %pos, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %header_list.addr = alloca %struct.osip_list*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  store %struct.osip_list* %header_list, %struct.osip_list** %header_list.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %header_list.addr, align 8
  %call = call i32 @osip_list_size(%struct.osip_list* %tmp1)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %header_list.addr, align 8
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call1 = call i8* @osip_list_get(%struct.osip_list* %tmp3, i32 %tmp4)
  %tmp5 = load i8**, i8*** %dest.addr, align 8
  store i8* %call1, i8** %tmp5, align 8
  %tmp6 = load i32, i32* %pos.addr, align 4
  store i32 %tmp6, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp7 = load i32, i32* %retval
  ret i32 %tmp7
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_init(%struct.osip_list* %li) #0 {
entry:
  %retval = alloca i32, align 4
  %li.addr = alloca %struct.osip_list*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %tmp2 = bitcast %struct.osip_list* %tmp1 to i8*
  call void @llvm.memset.p0i8.i64(i8* %tmp2, i8 0, i64 16, i32 8, i1 false)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i32, i32* %retval
  ret i32 %tmp3
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_clone(%struct.osip_list* %src, %struct.osip_list* %dst, i32 (i8*, i8**)* %clone_func) #0 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca %struct.osip_list*, align 8
  %dst.addr = alloca %struct.osip_list*, align 8
  %clone_func.addr = alloca i32 (i8*, i8**)*, align 8
  %data = alloca i8*, align 8
  %data2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %iterator = alloca %struct.osip_list_iterator_t, align 8
  store %struct.osip_list* %src, %struct.osip_list** %src.addr, align 8
  store %struct.osip_list* %dst, %struct.osip_list** %dst.addr, align 8
  store i32 (i8*, i8**)* %clone_func, i32 (i8*, i8**)** %clone_func.addr, align 8
  %tmp = load %struct.osip_list*, %struct.osip_list** %src.addr, align 8
  %call = call i8* @osip_list_get_first(%struct.osip_list* %tmp, %struct.osip_list_iterator_t* %iterator)
  store i8* %call, i8** %data, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %actual = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %iterator, i32 0, i32 0
  %tmp1 = load %struct.__node*, %struct.__node** %actual, align 8
  %cmp = icmp ne %struct.__node* null, %tmp1
  br i1 %cmp, label %land.lhs.true, label %for.end

land.lhs.true:                                    ; preds = %for.cond
  %pos = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %iterator, i32 0, i32 3
  %tmp2 = load i32, i32* %pos, align 4
  %li = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %iterator, i32 0, i32 2
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp3, i32 0, i32 0
  %tmp4 = load i32, i32* %nb_elt, align 4
  %cmp1 = icmp slt i32 %tmp2, %tmp4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %land.lhs.true
  %tmp5 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %clone_func.addr, align 8
  %tmp6 = load i8*, i8** %data, align 8
  %call2 = call i32 %tmp5(i8* %tmp6, i8** %data2)
  store i32 %call2, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp7, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  %tmp9 = load %struct.osip_list*, %struct.osip_list** %dst.addr, align 8
  %tmp10 = load i8*, i8** %data2, align 8
  %call4 = call i32 @osip_list_add(%struct.osip_list* %tmp9, i8* %tmp10, i32 -1)
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %call5 = call i8* @osip_list_get_next(%struct.osip_list_iterator_t* %iterator)
  store i8* %call5, i8** %data, align 8
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true, %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define i8* @osip_list_get_first(%struct.osip_list* %li, %struct.osip_list_iterator_t* %iterator) #0 {
entry:
  %retval = alloca i8*, align 8
  %li.addr = alloca %struct.osip_list*, align 8
  %iterator.addr = alloca %struct.osip_list_iterator_t*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store %struct.osip_list_iterator_t* %iterator, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp, i32 0, i32 0
  %tmp1 = load i32, i32* %nb_elt, align 4
  %cmp = icmp sge i32 0, %tmp1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp2 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp2, i32 0, i32 0
  store %struct.__node* null, %struct.__node** %actual, align 8
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp3, i32 0, i32 1
  %tmp4 = load %struct.__node*, %struct.__node** %node, align 8
  %tmp5 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual1 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp5, i32 0, i32 0
  store %struct.__node* %tmp4, %struct.__node** %actual1, align 8
  %tmp6 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node2 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp6, i32 0, i32 1
  %tmp7 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %prev = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp7, i32 0, i32 1
  store %struct.__node** %node2, %struct.__node*** %prev, align 8
  %tmp8 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %tmp9 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %li3 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp9, i32 0, i32 2
  store %struct.osip_list* %tmp8, %struct.osip_list** %li3, align 8
  %tmp10 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %pos = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp10, i32 0, i32 3
  store i32 0, i32* %pos, align 4
  %tmp11 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node4 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp11, i32 0, i32 1
  %tmp12 = load %struct.__node*, %struct.__node** %node4, align 8
  %element = getelementptr inbounds %struct.__node, %struct.__node* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %element, align 8
  store i8* %tmp13, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp14 = load i8*, i8** %retval
  ret i8* %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_add(%struct.osip_list* %li, i8* %el, i32 %pos) #0 {
entry:
  %retval = alloca i32, align 4
  %li.addr = alloca %struct.osip_list*, align 8
  %el.addr = alloca i8*, align 8
  %pos.addr = alloca i32, align 4
  %ntmp = alloca %struct.__node*, align 8
  %i = alloca i32, align 4
  %nextnode = alloca %struct.__node*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store i8* %el, i8** %el.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store i32 0, i32* %i, align 4
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp1, i32 0, i32 0
  %tmp2 = load i32, i32* %nb_elt, align 4
  %cmp1 = icmp eq i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end12

if.then2:                                         ; preds = %if.end
  %tmp3 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp3, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then2
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp4(i64 16)
  br label %cond.end

cond.false:                                       ; preds = %if.then2
  %call3 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call3, %cond.false ]
  %tmp5 = bitcast i8* %cond to %struct.__node*
  %tmp6 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp6, i32 0, i32 1
  store %struct.__node* %tmp5, %struct.__node** %node, align 8
  %tmp7 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node4 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp7, i32 0, i32 1
  %tmp8 = load %struct.__node*, %struct.__node** %node4, align 8
  %cmp5 = icmp eq %struct.__node* %tmp8, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end7:                                          ; preds = %cond.end
  %tmp9 = load i8*, i8** %el.addr, align 8
  %tmp10 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node8 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp10, i32 0, i32 1
  %tmp11 = load %struct.__node*, %struct.__node** %node8, align 8
  %element = getelementptr inbounds %struct.__node, %struct.__node* %tmp11, i32 0, i32 1
  store i8* %tmp9, i8** %element, align 8
  %tmp12 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node9 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp12, i32 0, i32 1
  %tmp13 = load %struct.__node*, %struct.__node** %node9, align 8
  %next = getelementptr inbounds %struct.__node, %struct.__node* %tmp13, i32 0, i32 0
  store %struct.__node* null, %struct.__node** %next, align 8
  %tmp14 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt10 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp14, i32 0, i32 0
  %tmp15 = load i32, i32* %nb_elt10, align 4
  %inc = add nsw i32 %tmp15, 1
  store i32 %inc, i32* %nb_elt10, align 4
  %tmp16 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt11 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp16, i32 0, i32 0
  %tmp17 = load i32, i32* %nb_elt11, align 4
  store i32 %tmp17, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.end
  %tmp18 = load i32, i32* %pos.addr, align 4
  %cmp13 = icmp eq i32 %tmp18, -1
  br i1 %cmp13, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end12
  %tmp19 = load i32, i32* %pos.addr, align 4
  %tmp20 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt14 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp20, i32 0, i32 0
  %tmp21 = load i32, i32* %nb_elt14, align 4
  %cmp15 = icmp sge i32 %tmp19, %tmp21
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %lor.lhs.false, %if.end12
  %tmp22 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt17 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp22, i32 0, i32 0
  %tmp23 = load i32, i32* %nb_elt17, align 4
  store i32 %tmp23, i32* %pos.addr, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %lor.lhs.false
  %tmp24 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node19 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp24, i32 0, i32 1
  %tmp25 = load %struct.__node*, %struct.__node** %node19, align 8
  store %struct.__node* %tmp25, %struct.__node** %ntmp, align 8
  %tmp26 = load i32, i32* %pos.addr, align 4
  %cmp20 = icmp eq i32 %tmp26, 0
  br i1 %cmp20, label %if.then21, label %if.end42

if.then21:                                        ; preds = %if.end18
  %tmp27 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool22 = icmp ne i8* (i64)* %tmp27, null
  br i1 %tobool22, label %cond.true23, label %cond.false25

cond.true23:                                      ; preds = %if.then21
  %tmp28 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call24 = call i8* %tmp28(i64 16)
  br label %cond.end27

cond.false25:                                     ; preds = %if.then21
  %call26 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false25, %cond.true23
  %cond28 = phi i8* [ %call24, %cond.true23 ], [ %call26, %cond.false25 ]
  %tmp29 = bitcast i8* %cond28 to %struct.__node*
  %tmp30 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node29 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp30, i32 0, i32 1
  store %struct.__node* %tmp29, %struct.__node** %node29, align 8
  %tmp31 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node30 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp31, i32 0, i32 1
  %tmp32 = load %struct.__node*, %struct.__node** %node30, align 8
  %cmp31 = icmp eq %struct.__node* %tmp32, null
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %cond.end27
  %tmp33 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %tmp34 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node33 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp34, i32 0, i32 1
  store %struct.__node* %tmp33, %struct.__node** %node33, align 8
  store i32 -4, i32* %retval
  br label %return

if.end34:                                         ; preds = %cond.end27
  %tmp35 = load i8*, i8** %el.addr, align 8
  %tmp36 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node35 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp36, i32 0, i32 1
  %tmp37 = load %struct.__node*, %struct.__node** %node35, align 8
  %element36 = getelementptr inbounds %struct.__node, %struct.__node* %tmp37, i32 0, i32 1
  store i8* %tmp35, i8** %element36, align 8
  %tmp38 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %tmp39 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node37 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp39, i32 0, i32 1
  %tmp40 = load %struct.__node*, %struct.__node** %node37, align 8
  %next38 = getelementptr inbounds %struct.__node, %struct.__node* %tmp40, i32 0, i32 0
  store %struct.__node* %tmp38, %struct.__node** %next38, align 8
  %tmp41 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt39 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp41, i32 0, i32 0
  %tmp42 = load i32, i32* %nb_elt39, align 4
  %inc40 = add nsw i32 %tmp42, 1
  store i32 %inc40, i32* %nb_elt39, align 4
  %tmp43 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt41 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp43, i32 0, i32 0
  %tmp44 = load i32, i32* %nb_elt41, align 4
  store i32 %tmp44, i32* %retval
  br label %return

if.end42:                                         ; preds = %if.end18
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end42
  %tmp45 = load i32, i32* %pos.addr, align 4
  %tmp46 = load i32, i32* %i, align 4
  %add = add nsw i32 %tmp46, 1
  %cmp43 = icmp sgt i32 %tmp45, %add
  br i1 %cmp43, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp47 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %tmp47, 1
  store i32 %inc44, i32* %i, align 4
  %tmp48 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next45 = getelementptr inbounds %struct.__node, %struct.__node* %tmp48, i32 0, i32 0
  %tmp49 = load %struct.__node*, %struct.__node** %next45, align 8
  store %struct.__node* %tmp49, %struct.__node** %ntmp, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp50 = load i32, i32* %pos.addr, align 4
  %tmp51 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt46 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp51, i32 0, i32 0
  %tmp52 = load i32, i32* %nb_elt46, align 4
  %cmp47 = icmp eq i32 %tmp50, %tmp52
  br i1 %cmp47, label %if.then48, label %if.end67

if.then48:                                        ; preds = %while.end
  %tmp53 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool49 = icmp ne i8* (i64)* %tmp53, null
  br i1 %tobool49, label %cond.true50, label %cond.false52

cond.true50:                                      ; preds = %if.then48
  %tmp54 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call51 = call i8* %tmp54(i64 16)
  br label %cond.end54

cond.false52:                                     ; preds = %if.then48
  %call53 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false52, %cond.true50
  %cond55 = phi i8* [ %call51, %cond.true50 ], [ %call53, %cond.false52 ]
  %tmp55 = bitcast i8* %cond55 to %struct.__node*
  %tmp56 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next56 = getelementptr inbounds %struct.__node, %struct.__node* %tmp56, i32 0, i32 0
  store %struct.__node* %tmp55, %struct.__node** %next56, align 8
  %tmp57 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next57 = getelementptr inbounds %struct.__node, %struct.__node* %tmp57, i32 0, i32 0
  %tmp58 = load %struct.__node*, %struct.__node** %next57, align 8
  %cmp58 = icmp eq %struct.__node* %tmp58, null
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %cond.end54
  store i32 -4, i32* %retval
  br label %return

if.end60:                                         ; preds = %cond.end54
  %tmp59 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next61 = getelementptr inbounds %struct.__node, %struct.__node* %tmp59, i32 0, i32 0
  %tmp60 = load %struct.__node*, %struct.__node** %next61, align 8
  store %struct.__node* %tmp60, %struct.__node** %ntmp, align 8
  %tmp61 = load i8*, i8** %el.addr, align 8
  %tmp62 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %element62 = getelementptr inbounds %struct.__node, %struct.__node* %tmp62, i32 0, i32 1
  store i8* %tmp61, i8** %element62, align 8
  %tmp63 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next63 = getelementptr inbounds %struct.__node, %struct.__node* %tmp63, i32 0, i32 0
  store %struct.__node* null, %struct.__node** %next63, align 8
  %tmp64 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt64 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp64, i32 0, i32 0
  %tmp65 = load i32, i32* %nb_elt64, align 4
  %inc65 = add nsw i32 %tmp65, 1
  store i32 %inc65, i32* %nb_elt64, align 4
  %tmp66 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt66 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp66, i32 0, i32 0
  %tmp67 = load i32, i32* %nb_elt66, align 4
  store i32 %tmp67, i32* %retval
  br label %return

if.end67:                                         ; preds = %while.end
  %tmp68 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next68 = getelementptr inbounds %struct.__node, %struct.__node* %tmp68, i32 0, i32 0
  %tmp69 = load %struct.__node*, %struct.__node** %next68, align 8
  store %struct.__node* %tmp69, %struct.__node** %nextnode, align 8
  %tmp70 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool69 = icmp ne i8* (i64)* %tmp70, null
  br i1 %tobool69, label %cond.true70, label %cond.false72

cond.true70:                                      ; preds = %if.end67
  %tmp71 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call71 = call i8* %tmp71(i64 16)
  br label %cond.end74

cond.false72:                                     ; preds = %if.end67
  %call73 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false72, %cond.true70
  %cond75 = phi i8* [ %call71, %cond.true70 ], [ %call73, %cond.false72 ]
  %tmp72 = bitcast i8* %cond75 to %struct.__node*
  %tmp73 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next76 = getelementptr inbounds %struct.__node, %struct.__node* %tmp73, i32 0, i32 0
  store %struct.__node* %tmp72, %struct.__node** %next76, align 8
  %tmp74 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next77 = getelementptr inbounds %struct.__node, %struct.__node* %tmp74, i32 0, i32 0
  %tmp75 = load %struct.__node*, %struct.__node** %next77, align 8
  %cmp78 = icmp eq %struct.__node* %tmp75, null
  br i1 %cmp78, label %if.then79, label %if.end81

if.then79:                                        ; preds = %cond.end74
  %tmp76 = load %struct.__node*, %struct.__node** %nextnode, align 8
  %tmp77 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next80 = getelementptr inbounds %struct.__node, %struct.__node* %tmp77, i32 0, i32 0
  store %struct.__node* %tmp76, %struct.__node** %next80, align 8
  store i32 -4, i32* %retval
  br label %return

if.end81:                                         ; preds = %cond.end74
  %tmp78 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next82 = getelementptr inbounds %struct.__node, %struct.__node* %tmp78, i32 0, i32 0
  %tmp79 = load %struct.__node*, %struct.__node** %next82, align 8
  store %struct.__node* %tmp79, %struct.__node** %ntmp, align 8
  %tmp80 = load i8*, i8** %el.addr, align 8
  %tmp81 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %element83 = getelementptr inbounds %struct.__node, %struct.__node* %tmp81, i32 0, i32 1
  store i8* %tmp80, i8** %element83, align 8
  %tmp82 = load %struct.__node*, %struct.__node** %nextnode, align 8
  %tmp83 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next84 = getelementptr inbounds %struct.__node, %struct.__node* %tmp83, i32 0, i32 0
  store %struct.__node* %tmp82, %struct.__node** %next84, align 8
  %tmp84 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt85 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp84, i32 0, i32 0
  %tmp85 = load i32, i32* %nb_elt85, align 4
  %inc86 = add nsw i32 %tmp85, 1
  store i32 %inc86, i32* %nb_elt85, align 4
  %tmp86 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt87 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp86, i32 0, i32 0
  %tmp87 = load i32, i32* %nb_elt87, align 4
  store i32 %tmp87, i32* %retval
  br label %return

return:                                           ; preds = %if.end81, %if.then79, %if.end60, %if.then59, %if.end34, %if.then32, %if.end7, %if.then6, %if.then
  %tmp88 = load i32, i32* %retval
  ret i32 %tmp88
}

; Function Attrs: nounwind uwtable
define i8* @osip_list_get_next(%struct.osip_list_iterator_t* %iterator) #0 {
entry:
  %retval = alloca i8*, align 8
  %iterator.addr = alloca %struct.osip_list_iterator_t*, align 8
  store %struct.osip_list_iterator_t* %iterator, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %tmp = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp, i32 0, i32 0
  %tmp1 = load %struct.__node*, %struct.__node** %actual, align 8
  %next = getelementptr inbounds %struct.__node, %struct.__node* %tmp1, i32 0, i32 0
  %tmp2 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %prev = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp2, i32 0, i32 1
  store %struct.__node** %next, %struct.__node*** %prev, align 8
  %tmp3 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual1 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp3, i32 0, i32 0
  %tmp4 = load %struct.__node*, %struct.__node** %actual1, align 8
  %next2 = getelementptr inbounds %struct.__node, %struct.__node* %tmp4, i32 0, i32 0
  %tmp5 = load %struct.__node*, %struct.__node** %next2, align 8
  %tmp6 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual3 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp6, i32 0, i32 0
  store %struct.__node* %tmp5, %struct.__node** %actual3, align 8
  %tmp7 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %pos = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp7, i32 0, i32 3
  %tmp8 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp8, 1
  store i32 %inc, i32* %pos, align 4
  %tmp9 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual4 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp9, i32 0, i32 0
  %tmp10 = load %struct.__node*, %struct.__node** %actual4, align 8
  %cmp = icmp ne %struct.__node* null, %tmp10
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %tmp11 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %pos5 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp11, i32 0, i32 3
  %tmp12 = load i32, i32* %pos5, align 4
  %tmp13 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %li = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp13, i32 0, i32 2
  %tmp14 = load %struct.osip_list*, %struct.osip_list** %li, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp14, i32 0, i32 0
  %tmp15 = load i32, i32* %nb_elt, align 4
  %cmp6 = icmp slt i32 %tmp12, %tmp15
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %tmp16 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual7 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp16, i32 0, i32 0
  %tmp17 = load %struct.__node*, %struct.__node** %actual7, align 8
  %element = getelementptr inbounds %struct.__node, %struct.__node* %tmp17, i32 0, i32 1
  %tmp18 = load i8*, i8** %element, align 8
  store i8* %tmp18, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %tmp19 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual8 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp19, i32 0, i32 0
  store %struct.__node* null, %struct.__node** %actual8, align 8
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp20 = load i8*, i8** %retval
  ret i8* %tmp20
}

; Function Attrs: nounwind uwtable
define void @osip_list_special_free(%struct.osip_list* %li, void (i8*)* %free_func) #0 {
entry:
  %li.addr = alloca %struct.osip_list*, align 8
  %free_func.addr = alloca void (i8*)*, align 8
  %element = alloca i8*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store void (i8*)* %free_func, void (i8*)** %free_func.addr, align 8
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.end

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end5, %if.end
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %call = call i32 @osip_list_eol(%struct.osip_list* %tmp1, i32 0)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end.loopexit

while.body:                                       ; preds = %while.cond
  %tmp2 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %call1 = call i8* @osip_list_get(%struct.osip_list* %tmp2, i32 0)
  store i8* %call1, i8** %element, align 8
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %call2 = call i32 @osip_list_remove(%struct.osip_list* %tmp3, i32 0)
  %tmp4 = load void (i8*)*, void (i8*)** %free_func.addr, align 8
  %cmp3 = icmp ne void (i8*)* %tmp4, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %while.body
  %tmp5 = load void (i8*)*, void (i8*)** %free_func.addr, align 8
  %tmp6 = load i8*, i8** %element, align 8
  call void %tmp5(i8* %tmp6)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %while.body
  br label %while.cond

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_eol(%struct.osip_list* %li, i32 %i) #0 {
entry:
  %retval = alloca i32, align 4
  %li.addr = alloca %struct.osip_list*, align 8
  %i.addr = alloca i32, align 4
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store i32 %i, i32* %i.addr, align 4
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i32, i32* %i.addr, align 4
  %tmp2 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp2, i32 0, i32 0
  %tmp3 = load i32, i32* %nb_elt, align 4
  %cmp1 = icmp slt i32 %tmp1, %tmp3
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp4 = load i32, i32* %retval
  ret i32 %tmp4
}

; Function Attrs: nounwind uwtable
define i8* @osip_list_get(%struct.osip_list* %li, i32 %pos) #0 {
entry:
  %retval = alloca i8*, align 8
  %li.addr = alloca %struct.osip_list*, align 8
  %pos.addr = alloca i32, align 4
  %ntmp = alloca %struct.__node*, align 8
  %i = alloca i32, align 4
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store i32 0, i32* %i, align 4
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i32, i32* %pos.addr, align 4
  %cmp1 = icmp slt i32 %tmp1, 0
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %tmp2 = load i32, i32* %pos.addr, align 4
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp3, i32 0, i32 0
  %tmp4 = load i32, i32* %nb_elt, align 4
  %cmp2 = icmp sge i32 %tmp2, %tmp4
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i8* null, i8** %retval
  br label %return

if.end4:                                          ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp5, i32 0, i32 1
  %tmp6 = load %struct.__node*, %struct.__node** %node, align 8
  store %struct.__node* %tmp6, %struct.__node** %ntmp, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %tmp7 = load i32, i32* %pos.addr, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %tmp7, %tmp8
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp9, 1
  store i32 %inc, i32* %i, align 4
  %tmp10 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next = getelementptr inbounds %struct.__node, %struct.__node* %tmp10, i32 0, i32 0
  %tmp11 = load %struct.__node*, %struct.__node** %next, align 8
  store %struct.__node* %tmp11, %struct.__node** %ntmp, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp12 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %element = getelementptr inbounds %struct.__node, %struct.__node* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %element, align 8
  store i8* %tmp13, i8** %retval
  br label %return

return:                                           ; preds = %while.end, %if.then3, %if.then
  %tmp14 = load i8*, i8** %retval
  ret i8* %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_remove(%struct.osip_list* %li, i32 %pos) #0 {
entry:
  %retval = alloca i32, align 4
  %li.addr = alloca %struct.osip_list*, align 8
  %pos.addr = alloca i32, align 4
  %ntmp = alloca %struct.__node*, align 8
  %i = alloca i32, align 4
  %remnode = alloca %struct.__node*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store i32 0, i32* %i, align 4
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i32, i32* %pos.addr, align 4
  %cmp1 = icmp slt i32 %tmp1, 0
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %tmp2 = load i32, i32* %pos.addr, align 4
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp3, i32 0, i32 0
  %tmp4 = load i32, i32* %nb_elt, align 4
  %cmp2 = icmp sge i32 %tmp2, %tmp4
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -1, i32* %retval
  br label %return

if.end4:                                          ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp5, i32 0, i32 1
  %tmp6 = load %struct.__node*, %struct.__node** %node, align 8
  store %struct.__node* %tmp6, %struct.__node** %ntmp, align 8
  %tmp7 = load i32, i32* %pos.addr, align 4
  %cmp5 = icmp eq i32 %tmp7, 0
  br i1 %cmp5, label %if.then6, label %if.end15

if.then6:                                         ; preds = %if.end4
  %tmp8 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next = getelementptr inbounds %struct.__node, %struct.__node* %tmp8, i32 0, i32 0
  %tmp9 = load %struct.__node*, %struct.__node** %next, align 8
  %tmp10 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %node7 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp10, i32 0, i32 1
  store %struct.__node* %tmp9, %struct.__node** %node7, align 8
  %tmp11 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt8 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp11, i32 0, i32 0
  %tmp12 = load i32, i32* %nb_elt8, align 4
  %dec = add nsw i32 %tmp12, -1
  store i32 %dec, i32* %nb_elt8, align 4
  %tmp13 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %cmp9 = icmp ne %struct.__node* %tmp13, null
  br i1 %cmp9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.then6
  %tmp14 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp14, null
  br i1 %tobool, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then10
  %tmp15 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp16 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %tmp17 = bitcast %struct.__node* %tmp16 to i8*
  call void %tmp15(i8* %tmp17)
  br label %if.end12

if.else:                                          ; preds = %if.then10
  %tmp18 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %tmp19 = bitcast %struct.__node* %tmp18 to i8*
  call void @free(i8* %tmp19) #8
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then6
  %tmp20 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt14 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp20, i32 0, i32 0
  %tmp21 = load i32, i32* %nb_elt14, align 4
  store i32 %tmp21, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.end4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end15
  %tmp22 = load i32, i32* %pos.addr, align 4
  %tmp23 = load i32, i32* %i, align 4
  %add = add nsw i32 %tmp23, 1
  %cmp16 = icmp sgt i32 %tmp22, %add
  br i1 %cmp16, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp24 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp24, 1
  store i32 %inc, i32* %i, align 4
  %tmp25 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next17 = getelementptr inbounds %struct.__node, %struct.__node* %tmp25, i32 0, i32 0
  %tmp26 = load %struct.__node*, %struct.__node** %next17, align 8
  store %struct.__node* %tmp26, %struct.__node** %ntmp, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp27 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next18 = getelementptr inbounds %struct.__node, %struct.__node* %tmp27, i32 0, i32 0
  %tmp28 = load %struct.__node*, %struct.__node** %next18, align 8
  store %struct.__node* %tmp28, %struct.__node** %remnode, align 8
  %tmp29 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next19 = getelementptr inbounds %struct.__node, %struct.__node* %tmp29, i32 0, i32 0
  %tmp30 = load %struct.__node*, %struct.__node** %next19, align 8
  %next20 = getelementptr inbounds %struct.__node, %struct.__node* %tmp30, i32 0, i32 0
  %tmp31 = load %struct.__node*, %struct.__node** %next20, align 8
  %tmp32 = load %struct.__node*, %struct.__node** %ntmp, align 8
  %next21 = getelementptr inbounds %struct.__node, %struct.__node* %tmp32, i32 0, i32 0
  store %struct.__node* %tmp31, %struct.__node** %next21, align 8
  %tmp33 = load %struct.__node*, %struct.__node** %remnode, align 8
  %cmp22 = icmp ne %struct.__node* %tmp33, null
  br i1 %cmp22, label %if.then23, label %if.end28

if.then23:                                        ; preds = %while.end
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool24 = icmp ne void (i8*)* %tmp34, null
  br i1 %tobool24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then23
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp36 = load %struct.__node*, %struct.__node** %remnode, align 8
  %tmp37 = bitcast %struct.__node* %tmp36 to i8*
  call void %tmp35(i8* %tmp37)
  br label %if.end27

if.else26:                                        ; preds = %if.then23
  %tmp38 = load %struct.__node*, %struct.__node** %remnode, align 8
  %tmp39 = bitcast %struct.__node* %tmp38 to i8*
  call void @free(i8* %tmp39) #8
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then25
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %while.end
  %tmp40 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt29 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp40, i32 0, i32 0
  %tmp41 = load i32, i32* %nb_elt29, align 4
  %dec30 = add nsw i32 %tmp41, -1
  store i32 %dec30, i32* %nb_elt29, align 4
  %tmp42 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt31 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp42, i32 0, i32 0
  %tmp43 = load i32, i32* %nb_elt31, align 4
  store i32 %tmp43, i32* %retval
  br label %return

return:                                           ; preds = %if.end28, %if.end13, %if.then3, %if.then
  %tmp44 = load i32, i32* %retval
  ret i32 %tmp44
}

; Function Attrs: nounwind uwtable
define void @osip_list_ofchar_free(%struct.osip_list* %li) #0 {
entry:
  %li.addr = alloca %struct.osip_list*, align 8
  %pos = alloca i32, align 4
  %chain = alloca i8*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  store i32 0, i32* %pos, align 4
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.end

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end8, %if.end
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %tmp2 = load i32, i32* %pos, align 4
  %call = call i32 @osip_list_eol(%struct.osip_list* %tmp1, i32 %tmp2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end.loopexit

while.body:                                       ; preds = %while.cond
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %tmp4 = load i32, i32* %pos, align 4
  %call1 = call i8* @osip_list_get(%struct.osip_list* %tmp3, i32 %tmp4)
  store i8* %call1, i8** %chain, align 8
  %tmp5 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %tmp6 = load i32, i32* %pos, align 4
  %call2 = call i32 @osip_list_remove(%struct.osip_list* %tmp5, i32 %tmp6)
  %tmp7 = load i8*, i8** %chain, align 8
  %cmp3 = icmp ne i8* %tmp7, null
  br i1 %cmp3, label %if.then4, label %if.end8

if.then4:                                         ; preds = %while.body
  %tmp8 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool5 = icmp ne void (i8*)* %tmp8, null
  br i1 %tobool5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then4
  %tmp9 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp10 = load i8*, i8** %chain, align 8
  call void %tmp9(i8* %tmp10)
  br label %if.end7

if.else:                                          ; preds = %if.then4
  %tmp11 = load i8*, i8** %chain, align 8
  call void @free(i8* %tmp11) #8
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %while.body
  br label %while.cond

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_list_size(%struct.osip_list* %li) #0 {
entry:
  %retval = alloca i32, align 4
  %li.addr = alloca %struct.osip_list*, align 8
  store %struct.osip_list* %li, %struct.osip_list** %li.addr, align 8
  %tmp = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %cmp = icmp eq %struct.osip_list* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %li.addr, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp1, i32 0, i32 0
  %tmp2 = load i32, i32* %nb_elt, align 4
  store i32 %tmp2, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i32, i32* %retval
  ret i32 %tmp3
}

; Function Attrs: nounwind uwtable
define i8* @osip_list_iterator_remove(%struct.osip_list_iterator_t* %iterator) #0 {
entry:
  %retval = alloca i8*, align 8
  %iterator.addr = alloca %struct.osip_list_iterator_t*, align 8
  store %struct.osip_list_iterator_t* %iterator, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %tmp = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp, i32 0, i32 0
  %tmp1 = load %struct.__node*, %struct.__node** %actual, align 8
  %cmp = icmp ne %struct.__node* null, %tmp1
  br i1 %cmp, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %entry
  %tmp2 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %pos = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp2, i32 0, i32 3
  %tmp3 = load i32, i32* %pos, align 4
  %tmp4 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %li = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp4, i32 0, i32 2
  %tmp5 = load %struct.osip_list*, %struct.osip_list** %li, align 8
  %nb_elt = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp5, i32 0, i32 0
  %tmp6 = load i32, i32* %nb_elt, align 4
  %cmp1 = icmp slt i32 %tmp3, %tmp6
  br i1 %cmp1, label %if.then, label %if.end14

if.then:                                          ; preds = %land.lhs.true
  %tmp7 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %li2 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp7, i32 0, i32 2
  %tmp8 = load %struct.osip_list*, %struct.osip_list** %li2, align 8
  %nb_elt3 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp8, i32 0, i32 0
  %tmp9 = load i32, i32* %nb_elt3, align 4
  %dec = add nsw i32 %tmp9, -1
  store i32 %dec, i32* %nb_elt3, align 4
  %tmp10 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual4 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp10, i32 0, i32 0
  %tmp11 = load %struct.__node*, %struct.__node** %actual4, align 8
  %next = getelementptr inbounds %struct.__node, %struct.__node* %tmp11, i32 0, i32 0
  %tmp12 = load %struct.__node*, %struct.__node** %next, align 8
  %tmp13 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %prev = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp13, i32 0, i32 1
  %tmp14 = load %struct.__node**, %struct.__node*** %prev, align 8
  store %struct.__node* %tmp12, %struct.__node** %tmp14, align 8
  %tmp15 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual5 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp15, i32 0, i32 0
  %tmp16 = load %struct.__node*, %struct.__node** %actual5, align 8
  %cmp6 = icmp ne %struct.__node* %tmp16, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then
  %tmp17 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp17, null
  br i1 %tobool, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then7
  %tmp18 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp19 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual9 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp19, i32 0, i32 0
  %tmp20 = load %struct.__node*, %struct.__node** %actual9, align 8
  %tmp21 = bitcast %struct.__node* %tmp20 to i8*
  call void %tmp18(i8* %tmp21)
  br label %if.end

if.else:                                          ; preds = %if.then7
  %tmp22 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual10 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp22, i32 0, i32 0
  %tmp23 = load %struct.__node*, %struct.__node** %actual10, align 8
  %tmp24 = bitcast %struct.__node* %tmp23 to i8*
  call void @free(i8* %tmp24) #8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %tmp25 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %prev12 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp25, i32 0, i32 1
  %tmp26 = load %struct.__node**, %struct.__node*** %prev12, align 8
  %tmp27 = load %struct.__node*, %struct.__node** %tmp26, align 8
  %tmp28 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual13 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp28, i32 0, i32 0
  store %struct.__node* %tmp27, %struct.__node** %actual13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %land.lhs.true, %entry
  %tmp29 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual15 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp29, i32 0, i32 0
  %tmp30 = load %struct.__node*, %struct.__node** %actual15, align 8
  %cmp16 = icmp ne %struct.__node* null, %tmp30
  br i1 %cmp16, label %land.lhs.true17, label %if.end24

land.lhs.true17:                                  ; preds = %if.end14
  %tmp31 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %pos18 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp31, i32 0, i32 3
  %tmp32 = load i32, i32* %pos18, align 4
  %tmp33 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %li19 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp33, i32 0, i32 2
  %tmp34 = load %struct.osip_list*, %struct.osip_list** %li19, align 8
  %nb_elt20 = getelementptr inbounds %struct.osip_list, %struct.osip_list* %tmp34, i32 0, i32 0
  %tmp35 = load i32, i32* %nb_elt20, align 4
  %cmp21 = icmp slt i32 %tmp32, %tmp35
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %land.lhs.true17
  %tmp36 = load %struct.osip_list_iterator_t*, %struct.osip_list_iterator_t** %iterator.addr, align 8
  %actual23 = getelementptr inbounds %struct.osip_list_iterator_t, %struct.osip_list_iterator_t* %tmp36, i32 0, i32 0
  %tmp37 = load %struct.__node*, %struct.__node** %actual23, align 8
  %element = getelementptr inbounds %struct.__node, %struct.__node* %tmp37, i32 0, i32 1
  %tmp38 = load i8*, i8** %element, align 8
  store i8* %tmp38, i8** %retval
  br label %return

if.end24:                                         ; preds = %land.lhs.true17, %if.end14
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %if.end24, %if.then22
  %tmp39 = load i8*, i8** %retval
  ret i8* %tmp39
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_call_id(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 12
  %tmp4 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id, align 8
  %cmp3 = icmp ne %struct.osip_call_id* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 12
  %call = call i32 @osip_call_id_init(%struct.osip_call_id** %call_id7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 12
  %tmp10 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_call_id_parse(%struct.osip_call_id* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 12
  %tmp14 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id17, align 8
  call void @osip_call_id_free(%struct.osip_call_id* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 12
  store %struct.osip_call_id* null, %struct.osip_call_id** %call_id18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_id_init(%struct.osip_call_id** %callid) #0 {
entry:
  %retval = alloca i32, align 4
  %callid.addr = alloca %struct.osip_call_id**, align 8
  store %struct.osip_call_id** %callid, %struct.osip_call_id*** %callid.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 16)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_call_id*
  %tmp3 = load %struct.osip_call_id**, %struct.osip_call_id*** %callid.addr, align 8
  store %struct.osip_call_id* %tmp2, %struct.osip_call_id** %tmp3, align 8
  %tmp4 = load %struct.osip_call_id**, %struct.osip_call_id*** %callid.addr, align 8
  %tmp5 = load %struct.osip_call_id*, %struct.osip_call_id** %tmp4, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_call_id**, %struct.osip_call_id*** %callid.addr, align 8
  %tmp7 = load %struct.osip_call_id*, %struct.osip_call_id** %tmp6, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp7, i32 0, i32 0
  store i8* null, i8** %number, align 8
  %tmp8 = load %struct.osip_call_id**, %struct.osip_call_id*** %callid.addr, align 8
  %tmp9 = load %struct.osip_call_id*, %struct.osip_call_id** %tmp8, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp9, i32 0, i32 1
  store i8* null, i8** %host, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_id_parse(%struct.osip_call_id* %callid, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %callid.addr = alloca %struct.osip_call_id*, align 8
  %hvalue.addr = alloca i8*, align 8
  %host = alloca i8*, align 8
  %end = alloca i8*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp, i32 0, i32 0
  store i8* null, i8** %number, align 8
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host1 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 1
  store i8* null, i8** %host1, align 8
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp2, i32 64) #7
  store i8* %call, i8** %host, align 8
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %call2 = call i64 @strlen(i8* %tmp4) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp3, i64 %call2
  store i8* %add.ptr, i8** %end, align 8
  %tmp5 = load i8*, i8** %host, align 8
  %cmp = icmp eq i8* %tmp5, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tmp6 = load i8*, i8** %end, align 8
  store i8* %tmp6, i8** %host, align 8
  br label %if.end24

if.else:                                          ; preds = %entry
  %tmp7 = load i8*, i8** %end, align 8
  %tmp8 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp3 = icmp slt i64 %add, 2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  %tmp9 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp9, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp11 = load i8*, i8** %end, align 8
  %tmp12 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast5 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %call8 = call i8* %tmp10(i64 %sub.ptr.sub7)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp13 = load i8*, i8** %end, align 8
  %tmp14 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast9 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.rhs.cast10 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10
  %call12 = call noalias i8* @malloc(i64 %sub.ptr.sub11) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call8, %cond.true ], [ %call12, %cond.false ]
  %tmp15 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host13 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp15, i32 0, i32 1
  store i8* %cond, i8** %host13, align 8
  %tmp16 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host14 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp16, i32 0, i32 1
  %tmp17 = load i8*, i8** %host14, align 8
  %cmp15 = icmp eq i8* %tmp17, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end17:                                         ; preds = %cond.end
  %tmp18 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host18 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp18, i32 0, i32 1
  %tmp19 = load i8*, i8** %host18, align 8
  %tmp20 = load i8*, i8** %host, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %tmp20, i64 1
  %tmp21 = load i8*, i8** %end, align 8
  %tmp22 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast20 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.rhs.cast21 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %sub = sub nsw i64 %sub.ptr.sub22, 1
  %call23 = call i8* @osip_clrncpy(i8* %tmp19, i8* %add.ptr19, i64 %sub)
  br label %if.end24

if.end24:                                         ; preds = %if.end17, %if.then
  %tmp23 = load i8*, i8** %host, align 8
  %tmp24 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast25 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.rhs.cast26 = ptrtoint i8* %tmp24 to i64
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26
  %add28 = add nsw i64 %sub.ptr.sub27, 1
  %cmp29 = icmp slt i64 %add28, 2
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end24
  store i32 -5, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.end24
  %tmp25 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool32 = icmp ne i8* (i64)* %tmp25, null
  br i1 %tobool32, label %cond.true33, label %cond.false39

cond.true33:                                      ; preds = %if.end31
  %tmp26 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp27 = load i8*, i8** %host, align 8
  %tmp28 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast34 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.rhs.cast35 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %add37 = add nsw i64 %sub.ptr.sub36, 1
  %call38 = call i8* %tmp26(i64 %add37)
  br label %cond.end45

cond.false39:                                     ; preds = %if.end31
  %tmp29 = load i8*, i8** %host, align 8
  %tmp30 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast40 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.rhs.cast41 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41
  %add43 = add nsw i64 %sub.ptr.sub42, 1
  %call44 = call noalias i8* @malloc(i64 %add43) #8
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false39, %cond.true33
  %cond46 = phi i8* [ %call38, %cond.true33 ], [ %call44, %cond.false39 ]
  %tmp31 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number47 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp31, i32 0, i32 0
  store i8* %cond46, i8** %number47, align 8
  %tmp32 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number48 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp32, i32 0, i32 0
  %tmp33 = load i8*, i8** %number48, align 8
  %cmp49 = icmp eq i8* %tmp33, null
  br i1 %cmp49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %cond.end45
  store i32 -4, i32* %retval
  br label %return

if.end51:                                         ; preds = %cond.end45
  %tmp34 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number52 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp34, i32 0, i32 0
  %tmp35 = load i8*, i8** %number52, align 8
  %tmp36 = load i8*, i8** %hvalue.addr, align 8
  %tmp37 = load i8*, i8** %host, align 8
  %tmp38 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast53 = ptrtoint i8* %tmp37 to i64
  %sub.ptr.rhs.cast54 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.sub55 = sub i64 %sub.ptr.lhs.cast53, %sub.ptr.rhs.cast54
  %call56 = call i8* @osip_clrncpy(i8* %tmp35, i8* %tmp36, i64 %sub.ptr.sub55)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end51, %if.then50, %if.then30, %if.then16, %if.then4
  %tmp39 = load i32, i32* %retval
  ret i32 %tmp39
}

; Function Attrs: nounwind uwtable
define void @osip_call_id_free(%struct.osip_call_id* %callid) #0 {
entry:
  %callid.addr = alloca %struct.osip_call_id*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  %tmp = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end25

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %number, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number4 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %number4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number5 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %number5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %host, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host12 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %host12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host14 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %host14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number17 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp17, i32 0, i32 0
  store i8* null, i8** %number17, align 8
  %tmp18 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host18 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp18, i32 0, i32 1
  store i8* null, i8** %host18, align 8
  %tmp19 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp19 = icmp ne %struct.osip_call_id* %tmp19, null
  br i1 %cmp19, label %if.then20, label %if.end25

if.then20:                                        ; preds = %if.end16
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool21 = icmp ne void (i8*)* %tmp20, null
  br i1 %tobool21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.then20
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp22 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %tmp23 = bitcast %struct.osip_call_id* %tmp22 to i8*
  call void %tmp21(i8* %tmp23)
  br label %if.end24

if.else23:                                        ; preds = %if.then20
  %tmp24 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %tmp25 = bitcast %struct.osip_call_id* %tmp24 to i8*
  call void @free(i8* %tmp25) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_call_id* @osip_message_get_call_id(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 12
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id, align 8
  ret %struct.osip_call_id* %tmp1
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @osip_call_id_to_str(%struct.osip_call_id* %callid, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %callid.addr = alloca %struct.osip_call_id*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %number, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp4 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp4, i32 0, i32 1
  %tmp5 = load i8*, i8** %host, align 8
  %cmp2 = icmp eq i8* %tmp5, null
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp6, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then3
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp8 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number4 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp8, i32 0, i32 0
  %tmp9 = load i8*, i8** %number4, align 8
  %call = call i64 @strlen(i8* %tmp9) #7
  %add = add i64 %call, 1
  %call5 = call i8* %tmp7(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.then3
  %tmp10 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number6 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %number6, align 8
  %call7 = call i64 @strlen(i8* %tmp11) #7
  %add8 = add i64 %call7, 1
  %call9 = call noalias i8* @malloc(i64 %add8) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call9, %cond.false ]
  %tmp12 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp12, align 8
  %tmp13 = load i8**, i8*** %dest.addr, align 8
  %tmp14 = load i8*, i8** %tmp13, align 8
  %cmp10 = icmp eq i8* %tmp14, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end12:                                         ; preds = %cond.end
  %tmp15 = load i8**, i8*** %dest.addr, align 8
  %tmp16 = load i8*, i8** %tmp15, align 8
  %tmp17 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number13 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %number13, align 8
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str42, i32 0, i32 0), i8* %tmp18) #8
  br label %if.end40

if.else:                                          ; preds = %if.end
  %tmp19 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool15 = icmp ne i8* (i64)* %tmp19, null
  br i1 %tobool15, label %cond.true16, label %cond.false24

cond.true16:                                      ; preds = %if.else
  %tmp20 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp21 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number17 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp21, i32 0, i32 0
  %tmp22 = load i8*, i8** %number17, align 8
  %call18 = call i64 @strlen(i8* %tmp22) #7
  %tmp23 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host19 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp23, i32 0, i32 1
  %tmp24 = load i8*, i8** %host19, align 8
  %call20 = call i64 @strlen(i8* %tmp24) #7
  %add21 = add i64 %call18, %call20
  %add22 = add i64 %add21, 2
  %call23 = call i8* %tmp20(i64 %add22)
  br label %cond.end32

cond.false24:                                     ; preds = %if.else
  %tmp25 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number25 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp25, i32 0, i32 0
  %tmp26 = load i8*, i8** %number25, align 8
  %call26 = call i64 @strlen(i8* %tmp26) #7
  %tmp27 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host27 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp27, i32 0, i32 1
  %tmp28 = load i8*, i8** %host27, align 8
  %call28 = call i64 @strlen(i8* %tmp28) #7
  %add29 = add i64 %call26, %call28
  %add30 = add i64 %add29, 2
  %call31 = call noalias i8* @malloc(i64 %add30) #8
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false24, %cond.true16
  %cond33 = phi i8* [ %call23, %cond.true16 ], [ %call31, %cond.false24 ]
  %tmp29 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond33, i8** %tmp29, align 8
  %tmp30 = load i8**, i8*** %dest.addr, align 8
  %tmp31 = load i8*, i8** %tmp30, align 8
  %cmp34 = icmp eq i8* %tmp31, null
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %cond.end32
  store i32 -4, i32* %retval
  br label %return

if.end36:                                         ; preds = %cond.end32
  %tmp32 = load i8**, i8*** %dest.addr, align 8
  %tmp33 = load i8*, i8** %tmp32, align 8
  %tmp34 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number37 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp34, i32 0, i32 0
  %tmp35 = load i8*, i8** %number37, align 8
  %tmp36 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host38 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp36, i32 0, i32 1
  %tmp37 = load i8*, i8** %host38, align 8
  %call39 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str143, i32 0, i32 0), i8* %tmp35, i8* %tmp37) #8
  br label %if.end40

if.end40:                                         ; preds = %if.end36, %if.end12
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then35, %if.then11, %if.then
  %tmp38 = load i32, i32* %retval
  ret i32 %tmp38
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i8* @osip_call_id_get_number(%struct.osip_call_id* %callid) #0 {
entry:
  %retval = alloca i8*, align 8
  %callid.addr = alloca %struct.osip_call_id*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  %tmp = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %number, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define i8* @osip_call_id_get_host(%struct.osip_call_id* %callid) #0 {
entry:
  %retval = alloca i8*, align 8
  %callid.addr = alloca %struct.osip_call_id*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  %tmp = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 1
  %tmp2 = load i8*, i8** %host, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_call_id_set_number(%struct.osip_call_id* %callid, i8* %number) #0 {
entry:
  %callid.addr = alloca %struct.osip_call_id*, align 8
  %number.addr = alloca i8*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  store i8* %number, i8** %number.addr, align 8
  %tmp = load i8*, i8** %number.addr, align 8
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number1 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %number1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_call_id_set_host(%struct.osip_call_id* %callid, i8* %host) #0 {
entry:
  %callid.addr = alloca %struct.osip_call_id*, align 8
  %host.addr = alloca i8*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  %tmp = load i8*, i8** %host.addr, align 8
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host1 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %host1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_id_clone(%struct.osip_call_id* %callid, %struct.osip_call_id** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %callid.addr = alloca %struct.osip_call_id*, align 8
  %dest.addr = alloca %struct.osip_call_id**, align 8
  %i = alloca i32, align 4
  %ci = alloca %struct.osip_call_id*, align 8
  store %struct.osip_call_id* %callid, %struct.osip_call_id** %callid.addr, align 8
  store %struct.osip_call_id** %dest, %struct.osip_call_id*** %dest.addr, align 8
  %tmp = load %struct.osip_call_id**, %struct.osip_call_id*** %dest.addr, align 8
  store %struct.osip_call_id* null, %struct.osip_call_id** %tmp, align 8
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %number, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_call_id_init(%struct.osip_call_id** %ci)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %number7 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %number7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_call_id*, %struct.osip_call_id** %ci, align 8
  %number9 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %number9, align 8
  %tmp9 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %host, align 8
  %cmp10 = icmp ne i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end6
  %tmp11 = load %struct.osip_call_id*, %struct.osip_call_id** %callid.addr, align 8
  %host12 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp11, i32 0, i32 1
  %tmp12 = load i8*, i8** %host12, align 8
  %call13 = call i8* @osip_strdup(i8* %tmp12)
  %tmp13 = load %struct.osip_call_id*, %struct.osip_call_id** %ci, align 8
  %host14 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp13, i32 0, i32 1
  store i8* %call13, i8** %host14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end6
  %tmp14 = load %struct.osip_call_id*, %struct.osip_call_id** %ci, align 8
  %tmp15 = load %struct.osip_call_id**, %struct.osip_call_id*** %dest.addr, align 8
  store %struct.osip_call_id* %tmp14, %struct.osip_call_id** %tmp15, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then5, %if.then2, %if.then
  %tmp16 = load i32, i32* %retval
  ret i32 %tmp16
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_id_match(%struct.osip_call_id* %callid1, %struct.osip_call_id* %callid2) #0 {
entry:
  %retval = alloca i32, align 4
  %callid1.addr = alloca %struct.osip_call_id*, align 8
  %callid2.addr = alloca %struct.osip_call_id*, align 8
  store %struct.osip_call_id* %callid1, %struct.osip_call_id** %callid1.addr, align 8
  store %struct.osip_call_id* %callid2, %struct.osip_call_id** %callid2.addr, align 8
  %tmp = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %cmp = icmp eq %struct.osip_call_id* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %cmp1 = icmp eq %struct.osip_call_id* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %number = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %number, align 8
  %cmp2 = icmp eq i8* %tmp3, null
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %if.end
  %tmp4 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %number4 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %number4, align 8
  %cmp5 = icmp eq i8* %tmp5, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 -2, i32* %retval
  br label %return

if.end7:                                          ; preds = %lor.lhs.false3
  %tmp6 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %number8 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %number8, align 8
  %tmp8 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %number9 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp8, i32 0, i32 0
  %tmp9 = load i8*, i8** %number9, align 8
  %call = call i32 @strcmp(i8* %tmp7, i8* %tmp9) #7
  %cmp10 = icmp ne i32 0, %call
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7
  store i32 -1, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.end7
  %tmp10 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %host = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %host, align 8
  %cmp13 = icmp eq i8* %tmp11, null
  br i1 %cmp13, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %if.end12
  %tmp12 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %host14 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %host14, align 8
  %cmp15 = icmp eq i8* %tmp13, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end17:                                         ; preds = %land.lhs.true, %if.end12
  %tmp14 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %host18 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %host18, align 8
  %cmp19 = icmp eq i8* %tmp15, null
  br i1 %cmp19, label %land.lhs.true20, label %if.end24

land.lhs.true20:                                  ; preds = %if.end17
  %tmp16 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %host21 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp16, i32 0, i32 1
  %tmp17 = load i8*, i8** %host21, align 8
  %cmp22 = icmp ne i8* %tmp17, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %land.lhs.true20
  store i32 -1, i32* %retval
  br label %return

if.end24:                                         ; preds = %land.lhs.true20, %if.end17
  %tmp18 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %host25 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp18, i32 0, i32 1
  %tmp19 = load i8*, i8** %host25, align 8
  %cmp26 = icmp ne i8* %tmp19, null
  br i1 %cmp26, label %land.lhs.true27, label %if.end31

land.lhs.true27:                                  ; preds = %if.end24
  %tmp20 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %host28 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp20, i32 0, i32 1
  %tmp21 = load i8*, i8** %host28, align 8
  %cmp29 = icmp eq i8* %tmp21, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval
  br label %return

if.end31:                                         ; preds = %land.lhs.true27, %if.end24
  %tmp22 = load %struct.osip_call_id*, %struct.osip_call_id** %callid1.addr, align 8
  %host32 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp22, i32 0, i32 1
  %tmp23 = load i8*, i8** %host32, align 8
  %tmp24 = load %struct.osip_call_id*, %struct.osip_call_id** %callid2.addr, align 8
  %host33 = getelementptr inbounds %struct.osip_call_id, %struct.osip_call_id* %tmp24, i32 0, i32 1
  %tmp25 = load i8*, i8** %host33, align 8
  %call34 = call i32 @strcmp(i8* %tmp23, i8* %tmp25) #7
  %cmp35 = icmp ne i32 0, %call34
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end31
  store i32 -1, i32* %retval
  br label %return

if.end37:                                         ; preds = %if.end31
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end37, %if.then36, %if.then30, %if.then23, %if.then16, %if.then11, %if.then6, %if.then
  %tmp26 = load i32, i32* %retval
  ret i32 %tmp26
}

; Function Attrs: nounwind uwtable
define i32 @__osip_find_next_occurence(i8* %str, i8* %buf, i8** %index_of_str, i8* %end_of_buf) #0 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %index_of_str.addr = alloca i8**, align 8
  %end_of_buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i8** %index_of_str, i8*** %index_of_str.addr, align 8
  store i8* %end_of_buf, i8** %end_of_buf.addr, align 8
  %tmp = load i8**, i8*** %index_of_str.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load i8*, i8** %str.addr, align 8
  %cmp = icmp eq i8* null, %tmp1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load i8*, i8** %buf.addr, align 8
  %cmp1 = icmp eq i8* null, %tmp2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %tmp3 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %tmp3, 1000
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp4 = load i8*, i8** %buf.addr, align 8
  %tmp5 = load i8*, i8** %str.addr, align 8
  %call = call i8* @strstr(i8* %tmp4, i8* %tmp5) #7
  %tmp6 = load i8**, i8*** %index_of_str.addr, align 8
  store i8* %call, i8** %tmp6, align 8
  %tmp7 = load i8**, i8*** %index_of_str.addr, align 8
  %tmp8 = load i8*, i8** %tmp7, align 8
  %cmp3 = icmp eq i8* null, %tmp8
  br i1 %cmp3, label %if.then4, label %if.end10

if.then4:                                         ; preds = %for.body
  %tmp9 = load i8*, i8** %buf.addr, align 8
  %tmp10 = load i8*, i8** %buf.addr, align 8
  %call5 = call i64 @strlen(i8* %tmp10) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp9, i64 %call5
  store i8* %add.ptr, i8** %ptr, align 8
  %tmp11 = load i8*, i8** %end_of_buf.addr, align 8
  %tmp12 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp6 = icmp sgt i64 %sub.ptr.sub, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.then4
  %tmp13 = load i8*, i8** %ptr, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %tmp13, i64 1
  store i8* %add.ptr8, i8** %buf.addr, align 8
  br label %for.inc

if.end9:                                          ; preds = %if.then4
  store i32 -5, i32* %retval
  br label %return

if.end10:                                         ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

for.inc:                                          ; preds = %if.then7
  %tmp14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -5, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.end10, %if.end9, %if.then
  %tmp15 = load i32, i32* %retval
  ret i32 %tmp15
}

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define i32 @__osip_find_next_crlf(i8* %start_of_header, i8** %end_of_header) #0 {
entry:
  %retval = alloca i32, align 4
  %start_of_header.addr = alloca i8*, align 8
  %end_of_header.addr = alloca i8**, align 8
  %soh = alloca i8*, align 8
  store i8* %start_of_header, i8** %start_of_header.addr, align 8
  store i8** %end_of_header, i8*** %end_of_header.addr, align 8
  %tmp = load i8*, i8** %start_of_header.addr, align 8
  store i8* %tmp, i8** %soh, align 8
  %tmp1 = load i8**, i8*** %end_of_header.addr, align 8
  store i8* null, i8** %tmp1, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %tmp2 = load i8*, i8** %soh, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %conv = sext i8 %tmp3 to i32
  %cmp = icmp ne i32 13, %conv
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %tmp4 = load i8*, i8** %soh, align 8
  %tmp5 = load i8, i8* %tmp4, align 1
  %conv2 = sext i8 %tmp5 to i32
  %cmp3 = icmp ne i32 10, %conv2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp6 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %tmp6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp7 = load i8*, i8** %soh, align 8
  %tmp8 = load i8, i8* %tmp7, align 1
  %tobool = icmp ne i8 %tmp8, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %tmp9 = load i8*, i8** %soh, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp9, i32 1
  store i8* %incdec.ptr, i8** %soh, align 8
  br label %if.end

if.else:                                          ; preds = %while.body
  br label %do.body

do.body:                                          ; preds = %if.else
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp10 = load i8*, i8** %soh, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp10, i64 0
  %tmp11 = load i8, i8* %arrayidx, align 1
  %conv5 = sext i8 %tmp11 to i32
  %cmp6 = icmp eq i32 13, %conv5
  br i1 %cmp6, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %while.end
  %tmp12 = load i8*, i8** %soh, align 8
  %arrayidx8 = getelementptr inbounds i8, i8* %tmp12, i64 1
  %tmp13 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %tmp13 to i32
  %cmp10 = icmp eq i32 10, %conv9
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  %tmp14 = load i8*, i8** %soh, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp14, i64 1
  store i8* %add.ptr, i8** %soh, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %land.lhs.true, %while.end
  %tmp15 = load i8*, i8** %soh, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %tmp15, i64 1
  %tmp16 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %tmp16 to i32
  %cmp16 = icmp eq i32 32, %conv15
  br i1 %cmp16, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end13
  %tmp17 = load i8*, i8** %soh, align 8
  %arrayidx18 = getelementptr inbounds i8, i8* %tmp17, i64 1
  %tmp18 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %tmp18 to i32
  %cmp20 = icmp eq i32 9, %conv19
  br i1 %cmp20, label %if.then22, label %if.end25

if.then22:                                        ; preds = %lor.lhs.false, %if.end13
  br label %do.body23

do.body23:                                        ; preds = %if.then22
  br label %do.end24

do.end24:                                         ; preds = %do.body23
  store i32 -2, i32* %retval
  br label %return

if.end25:                                         ; preds = %lor.lhs.false
  %tmp19 = load i8*, i8** %soh, align 8
  %add.ptr26 = getelementptr inbounds i8, i8* %tmp19, i64 1
  %tmp20 = load i8**, i8*** %end_of_header.addr, align 8
  store i8* %add.ptr26, i8** %tmp20, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end25, %do.end24, %do.end
  %tmp21 = load i32, i32* %retval
  ret i32 %tmp21
}

; Function Attrs: nounwind uwtable
define i32 @__osip_find_next_crlfcrlf(i8* %start_of_part, i8** %end_of_part) #0 {
entry:
  %retval = alloca i32, align 4
  %start_of_part.addr = alloca i8*, align 8
  %end_of_part.addr = alloca i8**, align 8
  %start_of_line = alloca i8*, align 8
  %end_of_line = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %start_of_part, i8** %start_of_part.addr, align 8
  store i8** %end_of_part, i8*** %end_of_part.addr, align 8
  %tmp = load i8*, i8** %start_of_part.addr, align 8
  store i8* %tmp, i8** %start_of_line, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end30, %entry
  %tmp1 = load i8*, i8** %start_of_line, align 8
  %call = call i32 @__osip_find_next_crlf(i8* %tmp1, i8** %end_of_line)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp = icmp eq i32 %tmp2, -2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.cond
  br label %if.end3

if.else:                                          ; preds = %for.cond
  %tmp3 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp3, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.else
  br label %do.body

do.body:                                          ; preds = %if.then2
  br label %do.end

do.end:                                           ; preds = %do.body
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %tmp5 = load i8*, i8** %end_of_line, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp5, i64 0
  %tmp6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp6 to i32
  %cmp4 = icmp eq i32 0, %conv
  br i1 %cmp4, label %if.then6, label %if.else9

if.then6:                                         ; preds = %if.end3
  br label %do.body7

do.body7:                                         ; preds = %if.then6
  br label %do.end8

do.end8:                                          ; preds = %do.body7
  store i32 -5, i32* %retval
  br label %return

if.else9:                                         ; preds = %if.end3
  %tmp7 = load i8*, i8** %end_of_line, align 8
  %arrayidx10 = getelementptr inbounds i8, i8* %tmp7, i64 0
  %tmp8 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %tmp8 to i32
  %cmp12 = icmp eq i32 13, %conv11
  br i1 %cmp12, label %if.then14, label %if.else21

if.then14:                                        ; preds = %if.else9
  %tmp9 = load i8*, i8** %end_of_line, align 8
  %arrayidx15 = getelementptr inbounds i8, i8* %tmp9, i64 1
  %tmp10 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %tmp10 to i32
  %cmp17 = icmp eq i32 10, %conv16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then14
  %tmp11 = load i8*, i8** %end_of_line, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp11, i32 1
  store i8* %incdec.ptr, i8** %end_of_line, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then14
  %tmp12 = load i8*, i8** %end_of_line, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp12, i64 1
  %tmp13 = load i8**, i8*** %end_of_part.addr, align 8
  store i8* %add.ptr, i8** %tmp13, align 8
  store i32 0, i32* %retval
  br label %return

if.else21:                                        ; preds = %if.else9
  %tmp14 = load i8*, i8** %end_of_line, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %tmp14, i64 0
  %tmp15 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %tmp15 to i32
  %cmp24 = icmp eq i32 10, %conv23
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.else21
  %tmp16 = load i8*, i8** %end_of_line, align 8
  %add.ptr27 = getelementptr inbounds i8, i8* %tmp16, i64 1
  %tmp17 = load i8**, i8*** %end_of_part.addr, align 8
  store i8* %add.ptr27, i8** %tmp17, align 8
  store i32 0, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.else21
  br label %if.end29

if.end29:                                         ; preds = %if.end28
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  %tmp18 = load i8*, i8** %end_of_line, align 8
  store i8* %tmp18, i8** %start_of_line, align 8
  br label %for.cond

return:                                           ; preds = %if.then26, %if.end20, %do.end8, %do.end
  %tmp19 = load i32, i32* %retval
  ret i32 %tmp19
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_multiple_header(%struct.osip_message* %sip, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %comma = alloca i8*, align 8
  %beg = alloca i8*, align 8
  %end = alloca i8*, align 8
  %quote1 = alloca i8*, align 8
  %quote2 = alloca i8*, align 8
  %hname_len = alloca i64, align 8
  %tmp_comma = alloca i8*, align 8
  %tmp_quote1 = alloca i8*, align 8
  %tmp_quote2 = alloca i8*, align 8
  %avalue = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hname.addr, align 8
  %call = call i32 @osip_tolower(i8* %tmp)
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp3 = load i8*, i8** %hname.addr, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %call1 = call i32 @osip_message_set__header(%struct.osip_message* %tmp2, i8* %tmp3, i8* %tmp4)
  store i32 %call1, i32* %i, align 4
  %tmp5 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp5, 0
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %tmp6 = load i32, i32* %i, align 4
  store i32 %tmp6, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  store i32 0, i32* %retval
  br label %return

if.end4:                                          ; preds = %entry
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  store i8* %tmp7, i8** %ptr, align 8
  %tmp8 = load i8*, i8** %ptr, align 8
  %call5 = call i8* @strchr(i8* %tmp8, i32 44) #7
  store i8* %call5, i8** %comma, align 8
  %tmp9 = load i8*, i8** %hname.addr, align 8
  %call6 = call i64 @strlen(i8* %tmp9) #7
  store i64 %call6, i64* %hname_len, align 8
  %tmp10 = load i8*, i8** %comma, align 8
  %cmp7 = icmp eq i8* %tmp10, null
  br i1 %cmp7, label %if.then86, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end4
  %tmp11 = load i64, i64* %hname_len, align 8
  %cmp8 = icmp eq i64 %tmp11, 4
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false11

land.lhs.true:                                    ; preds = %lor.lhs.false
  %tmp12 = load i8*, i8** %hname.addr, align 8
  %call9 = call i32 @strncmp(i8* %tmp12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str48, i32 0, i32 0), i64 4) #7
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then86, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %tmp13 = load i64, i64* %hname_len, align 8
  %cmp12 = icmp eq i64 %tmp13, 2
  br i1 %cmp12, label %land.lhs.true13, label %lor.lhs.false16

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %tmp14 = load i8*, i8** %hname.addr, align 8
  %call14 = call i32 @strncmp(i8* %tmp14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str149, i32 0, i32 0), i64 2) #7
  %cmp15 = icmp eq i32 %call14, 0
  br i1 %cmp15, label %if.then86, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %land.lhs.true13, %lor.lhs.false11
  %tmp15 = load i64, i64* %hname_len, align 8
  %cmp17 = icmp eq i64 %tmp15, 4
  br i1 %cmp17, label %land.lhs.true18, label %lor.lhs.false21

land.lhs.true18:                                  ; preds = %lor.lhs.false16
  %tmp16 = load i8*, i8** %hname.addr, align 8
  %call19 = call i32 @strncmp(i8* %tmp16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str250, i32 0, i32 0), i64 4) #7
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %if.then86, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %land.lhs.true18, %lor.lhs.false16
  %tmp17 = load i64, i64* %hname_len, align 8
  %cmp22 = icmp eq i64 %tmp17, 7
  br i1 %cmp22, label %land.lhs.true23, label %lor.lhs.false26

land.lhs.true23:                                  ; preds = %lor.lhs.false21
  %tmp18 = load i8*, i8** %hname.addr, align 8
  %call24 = call i32 @strncmp(i8* %tmp18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str351, i32 0, i32 0), i64 7) #7
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then86, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %land.lhs.true23, %lor.lhs.false21
  %tmp19 = load i64, i64* %hname_len, align 8
  %cmp27 = icmp eq i64 %tmp19, 4
  br i1 %cmp27, label %land.lhs.true28, label %lor.lhs.false31

land.lhs.true28:                                  ; preds = %lor.lhs.false26
  %tmp20 = load i8*, i8** %hname.addr, align 8
  %call29 = call i32 @strncmp(i8* %tmp20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str452, i32 0, i32 0), i64 4) #7
  %cmp30 = icmp eq i32 %call29, 0
  br i1 %cmp30, label %if.then86, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true28, %lor.lhs.false26
  %tmp21 = load i64, i64* %hname_len, align 8
  %cmp32 = icmp eq i64 %tmp21, 7
  br i1 %cmp32, label %land.lhs.true33, label %lor.lhs.false36

land.lhs.true33:                                  ; preds = %lor.lhs.false31
  %tmp22 = load i8*, i8** %hname.addr, align 8
  %call34 = call i32 @strncmp(i8* %tmp22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str553, i32 0, i32 0), i64 7) #7
  %cmp35 = icmp eq i32 %call34, 0
  br i1 %cmp35, label %if.then86, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %land.lhs.true33, %lor.lhs.false31
  %tmp23 = load i64, i64* %hname_len, align 8
  %cmp37 = icmp eq i64 %tmp23, 7
  br i1 %cmp37, label %land.lhs.true38, label %lor.lhs.false41

land.lhs.true38:                                  ; preds = %lor.lhs.false36
  %tmp24 = load i8*, i8** %hname.addr, align 8
  %call39 = call i32 @strncmp(i8* %tmp24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str654, i32 0, i32 0), i64 7) #7
  %cmp40 = icmp eq i32 %call39, 0
  br i1 %cmp40, label %if.then86, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %land.lhs.true38, %lor.lhs.false36
  %tmp25 = load i64, i64* %hname_len, align 8
  %cmp42 = icmp eq i64 %tmp25, 6
  br i1 %cmp42, label %land.lhs.true43, label %lor.lhs.false46

land.lhs.true43:                                  ; preds = %lor.lhs.false41
  %tmp26 = load i8*, i8** %hname.addr, align 8
  %call44 = call i32 @strncmp(i8* %tmp26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str755, i32 0, i32 0), i64 6) #7
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then86, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %land.lhs.true43, %lor.lhs.false41
  %tmp27 = load i64, i64* %hname_len, align 8
  %cmp47 = icmp eq i64 %tmp27, 10
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51

land.lhs.true48:                                  ; preds = %lor.lhs.false46
  %tmp28 = load i8*, i8** %hname.addr, align 8
  %call49 = call i32 @strncmp(i8* %tmp28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str856, i32 0, i32 0), i64 10) #7
  %cmp50 = icmp eq i32 %call49, 0
  br i1 %cmp50, label %if.then86, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %lor.lhs.false46
  %tmp29 = load i64, i64* %hname_len, align 8
  %cmp52 = icmp eq i64 %tmp29, 16
  br i1 %cmp52, label %land.lhs.true53, label %lor.lhs.false56

land.lhs.true53:                                  ; preds = %lor.lhs.false51
  %tmp30 = load i8*, i8** %hname.addr, align 8
  %call54 = call i32 @strncmp(i8* %tmp30, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str957, i32 0, i32 0), i64 16) #7
  %cmp55 = icmp eq i32 %call54, 0
  br i1 %cmp55, label %if.then86, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %land.lhs.true53, %lor.lhs.false51
  %tmp31 = load i64, i64* %hname_len, align 8
  %cmp57 = icmp eq i64 %tmp31, 19
  br i1 %cmp57, label %land.lhs.true58, label %lor.lhs.false61

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %tmp32 = load i8*, i8** %hname.addr, align 8
  %call59 = call i32 @strncmp(i8* %tmp32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str1058, i32 0, i32 0), i64 19) #7
  %cmp60 = icmp eq i32 %call59, 0
  br i1 %cmp60, label %if.then86, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %land.lhs.true58, %lor.lhs.false56
  %tmp33 = load i64, i64* %hname_len, align 8
  %cmp62 = icmp eq i64 %tmp33, 18
  br i1 %cmp62, label %land.lhs.true63, label %lor.lhs.false66

land.lhs.true63:                                  ; preds = %lor.lhs.false61
  %tmp34 = load i8*, i8** %hname.addr, align 8
  %call64 = call i32 @strncmp(i8* %tmp34, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str1159, i32 0, i32 0), i64 18) #7
  %cmp65 = icmp eq i32 %call64, 0
  br i1 %cmp65, label %if.then86, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %land.lhs.true63, %lor.lhs.false61
  %tmp35 = load i64, i64* %hname_len, align 8
  %cmp67 = icmp eq i64 %tmp35, 19
  br i1 %cmp67, label %land.lhs.true68, label %lor.lhs.false71

land.lhs.true68:                                  ; preds = %lor.lhs.false66
  %tmp36 = load i8*, i8** %hname.addr, align 8
  %call69 = call i32 @strncmp(i8* %tmp36, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str1260, i32 0, i32 0), i64 19) #7
  %cmp70 = icmp eq i32 %call69, 0
  br i1 %cmp70, label %if.then86, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %land.lhs.true68, %lor.lhs.false66
  %tmp37 = load i64, i64* %hname_len, align 8
  %cmp72 = icmp eq i64 %tmp37, 25
  br i1 %cmp72, label %land.lhs.true73, label %lor.lhs.false76

land.lhs.true73:                                  ; preds = %lor.lhs.false71
  %tmp38 = load i8*, i8** %hname.addr, align 8
  %call74 = call i32 @strncmp(i8* %tmp38, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str1361, i32 0, i32 0), i64 25) #7
  %cmp75 = icmp eq i32 %call74, 0
  br i1 %cmp75, label %if.then86, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %land.lhs.true73, %lor.lhs.false71
  %tmp39 = load i64, i64* %hname_len, align 8
  %cmp77 = icmp eq i64 %tmp39, 12
  br i1 %cmp77, label %land.lhs.true78, label %lor.lhs.false81

land.lhs.true78:                                  ; preds = %lor.lhs.false76
  %tmp40 = load i8*, i8** %hname.addr, align 8
  %call79 = call i32 @strncmp(i8* %tmp40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str1462, i32 0, i32 0), i64 12) #7
  %cmp80 = icmp eq i32 %call79, 0
  br i1 %cmp80, label %if.then86, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %land.lhs.true78, %lor.lhs.false76
  %tmp41 = load i64, i64* %hname_len, align 8
  %cmp82 = icmp eq i64 %tmp41, 13
  br i1 %cmp82, label %land.lhs.true83, label %if.end91

land.lhs.true83:                                  ; preds = %lor.lhs.false81
  %tmp42 = load i8*, i8** %hname.addr, align 8
  %call84 = call i32 @strncmp(i8* %tmp42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str1563, i32 0, i32 0), i64 13) #7
  %cmp85 = icmp eq i32 %call84, 0
  br i1 %cmp85, label %if.then86, label %if.end91

if.then86:                                        ; preds = %land.lhs.true83, %land.lhs.true78, %land.lhs.true73, %land.lhs.true68, %land.lhs.true63, %land.lhs.true58, %land.lhs.true53, %land.lhs.true48, %land.lhs.true43, %land.lhs.true38, %land.lhs.true33, %land.lhs.true28, %land.lhs.true23, %land.lhs.true18, %land.lhs.true13, %land.lhs.true, %if.end4
  %tmp43 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp44 = load i8*, i8** %hname.addr, align 8
  %tmp45 = load i8*, i8** %hvalue.addr, align 8
  %call87 = call i32 @osip_message_set__header(%struct.osip_message* %tmp43, i8* %tmp44, i8* %tmp45)
  store i32 %call87, i32* %i, align 4
  %tmp46 = load i32, i32* %i, align 4
  %cmp88 = icmp ne i32 %tmp46, 0
  br i1 %cmp88, label %if.then89, label %if.end90

if.then89:                                        ; preds = %if.then86
  %tmp47 = load i32, i32* %i, align 4
  store i32 %tmp47, i32* %retval
  br label %return

if.end90:                                         ; preds = %if.then86
  store i32 0, i32* %retval
  br label %return

if.end91:                                         ; preds = %land.lhs.true83, %lor.lhs.false81
  %tmp48 = load i8*, i8** %hvalue.addr, align 8
  store i8* %tmp48, i8** %beg, align 8
  store i8* null, i8** %end, align 8
  store i8* null, i8** %quote2, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end233, %if.end91
  %tmp49 = load i8*, i8** %comma, align 8
  %cmp92 = icmp ne i8* %tmp49, null
  br i1 %cmp92, label %while.body, label %while.end234

while.body:                                       ; preds = %while.cond
  %tmp50 = load i8*, i8** %ptr, align 8
  %call93 = call i8* @__osip_quote_find(i8* %tmp50)
  store i8* %call93, i8** %quote1, align 8
  %tmp51 = load i8*, i8** %quote1, align 8
  %cmp94 = icmp ne i8* %tmp51, null
  br i1 %cmp94, label %if.then95, label %if.end101

if.then95:                                        ; preds = %while.body
  %tmp52 = load i8*, i8** %quote1, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp52, i64 1
  %call96 = call i8* @__osip_quote_find(i8* %add.ptr)
  store i8* %call96, i8** %quote2, align 8
  %tmp53 = load i8*, i8** %quote2, align 8
  %cmp97 = icmp eq i8* %tmp53, null
  br i1 %cmp97, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.then95
  store i32 -5, i32* %retval
  br label %return

if.end99:                                         ; preds = %if.then95
  %tmp54 = load i8*, i8** %quote2, align 8
  %add.ptr100 = getelementptr inbounds i8, i8* %tmp54, i64 1
  store i8* %add.ptr100, i8** %ptr, align 8
  br label %if.end101

if.end101:                                        ; preds = %if.end99, %while.body
  %tmp55 = load i8*, i8** %quote1, align 8
  %cmp102 = icmp eq i8* %tmp55, null
  br i1 %cmp102, label %if.then105, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %if.end101
  %tmp56 = load i8*, i8** %quote1, align 8
  %tmp57 = load i8*, i8** %comma, align 8
  %cmp104 = icmp ugt i8* %tmp56, %tmp57
  br i1 %cmp104, label %if.then105, label %if.else139

if.then105:                                       ; preds = %lor.lhs.false103, %if.end101
  %tmp58 = load i8*, i8** %comma, align 8
  store i8* %tmp58, i8** %end, align 8
  %tmp59 = load i8*, i8** %quote1, align 8
  %cmp106 = icmp ne i8* %tmp59, null
  br i1 %cmp106, label %land.lhs.true107, label %if.else

land.lhs.true107:                                 ; preds = %if.then105
  %tmp60 = load i8*, i8** %quote1, align 8
  %tmp61 = load i8*, i8** %comma, align 8
  %cmp108 = icmp ugt i8* %tmp60, %tmp61
  br i1 %cmp108, label %if.then109, label %if.else

if.then109:                                       ; preds = %land.lhs.true107
  %tmp62 = load i8*, i8** %quote1, align 8
  store i8* %tmp62, i8** %tmp_quote1, align 8
  %tmp63 = load i8*, i8** %quote2, align 8
  store i8* %tmp63, i8** %tmp_quote2, align 8
  %tmp64 = load i8*, i8** %comma, align 8
  %add.ptr110 = getelementptr inbounds i8, i8* %tmp64, i64 1
  %call111 = call i8* @strchr(i8* %add.ptr110, i32 44) #7
  store i8* %call111, i8** %tmp_comma, align 8
  br label %while.body113

while.body113:                                    ; preds = %if.end131, %if.then109
  %tmp65 = load i8*, i8** %tmp_comma, align 8
  %tmp66 = load i8*, i8** %tmp_quote1, align 8
  %cmp114 = icmp ult i8* %tmp65, %tmp66
  br i1 %cmp114, label %if.then115, label %if.end116

if.then115:                                       ; preds = %while.body113
  br label %while.end

if.end116:                                        ; preds = %while.body113
  %tmp67 = load i8*, i8** %tmp_comma, align 8
  %tmp68 = load i8*, i8** %tmp_quote2, align 8
  %cmp117 = icmp ult i8* %tmp67, %tmp68
  br i1 %cmp117, label %if.then118, label %if.end121

if.then118:                                       ; preds = %if.end116
  %tmp69 = load i8*, i8** %tmp_quote2, align 8
  %add.ptr119 = getelementptr inbounds i8, i8* %tmp69, i64 1
  %call120 = call i8* @strchr(i8* %add.ptr119, i32 44) #7
  store i8* %call120, i8** %tmp_comma, align 8
  br label %if.end121

if.end121:                                        ; preds = %if.then118, %if.end116
  %tmp70 = load i8*, i8** %tmp_quote2, align 8
  %add.ptr122 = getelementptr inbounds i8, i8* %tmp70, i64 1
  %call123 = call i8* @__osip_quote_find(i8* %add.ptr122)
  store i8* %call123, i8** %tmp_quote1, align 8
  %tmp71 = load i8*, i8** %tmp_quote1, align 8
  %cmp124 = icmp eq i8* %tmp71, null
  br i1 %cmp124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.end121
  br label %while.end

if.end126:                                        ; preds = %if.end121
  %tmp72 = load i8*, i8** %tmp_quote1, align 8
  %add.ptr127 = getelementptr inbounds i8, i8* %tmp72, i64 1
  %call128 = call i8* @__osip_quote_find(i8* %add.ptr127)
  store i8* %call128, i8** %tmp_quote2, align 8
  %tmp73 = load i8*, i8** %tmp_quote2, align 8
  %cmp129 = icmp eq i8* %tmp73, null
  br i1 %cmp129, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.end126
  br label %while.end

if.end131:                                        ; preds = %if.end126
  br label %while.body113

while.end:                                        ; preds = %if.then130, %if.then125, %if.then115
  %tmp74 = load i8*, i8** %tmp_comma, align 8
  store i8* %tmp74, i8** %comma, align 8
  br label %if.end134

if.else:                                          ; preds = %land.lhs.true107, %if.then105
  %tmp75 = load i8*, i8** %comma, align 8
  %add.ptr132 = getelementptr inbounds i8, i8* %tmp75, i64 1
  %call133 = call i8* @strchr(i8* %add.ptr132, i32 44) #7
  store i8* %call133, i8** %comma, align 8
  br label %if.end134

if.end134:                                        ; preds = %if.else, %while.end
  %tmp76 = load i8*, i8** %comma, align 8
  %cmp135 = icmp ne i8* %tmp76, null
  br i1 %cmp135, label %if.then136, label %if.end138

if.then136:                                       ; preds = %if.end134
  %tmp77 = load i8*, i8** %comma, align 8
  %add.ptr137 = getelementptr inbounds i8, i8* %tmp77, i64 1
  store i8* %add.ptr137, i8** %ptr, align 8
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %if.end134
  br label %if.end172

if.else139:                                       ; preds = %lor.lhs.false103
  %tmp78 = load i8*, i8** %quote1, align 8
  %tmp79 = load i8*, i8** %comma, align 8
  %cmp140 = icmp ult i8* %tmp78, %tmp79
  br i1 %cmp140, label %land.lhs.true141, label %if.else145

land.lhs.true141:                                 ; preds = %if.else139
  %tmp80 = load i8*, i8** %quote2, align 8
  %tmp81 = load i8*, i8** %comma, align 8
  %cmp142 = icmp ult i8* %tmp80, %tmp81
  br i1 %cmp142, label %if.then143, label %if.else145

if.then143:                                       ; preds = %land.lhs.true141
  %tmp82 = load i8*, i8** %quote2, align 8
  %add.ptr144 = getelementptr inbounds i8, i8* %tmp82, i64 1
  store i8* %add.ptr144, i8** %ptr, align 8
  br label %if.end171

if.else145:                                       ; preds = %land.lhs.true141, %if.else139
  %tmp83 = load i8*, i8** %quote1, align 8
  %tmp84 = load i8*, i8** %comma, align 8
  %cmp146 = icmp ult i8* %tmp83, %tmp84
  br i1 %cmp146, label %land.lhs.true147, label %if.end170

land.lhs.true147:                                 ; preds = %if.else145
  %tmp85 = load i8*, i8** %comma, align 8
  %tmp86 = load i8*, i8** %quote2, align 8
  %cmp148 = icmp ult i8* %tmp85, %tmp86
  br i1 %cmp148, label %if.then149, label %if.end170

if.then149:                                       ; preds = %land.lhs.true147
  %tmp87 = load i8*, i8** %quote2, align 8
  %add.ptr150 = getelementptr inbounds i8, i8* %tmp87, i64 1
  store i8* %add.ptr150, i8** %ptr, align 8
  %tmp88 = load i8*, i8** %ptr, align 8
  %call151 = call i8* @strchr(i8* %tmp88, i32 44) #7
  store i8* %call151, i8** %comma, align 8
  %tmp89 = load i8*, i8** %comma, align 8
  %cmp152 = icmp eq i8* %tmp89, null
  br i1 %cmp152, label %if.then153, label %if.end169

if.then153:                                       ; preds = %if.then149
  %tmp90 = load i8*, i8** %beg, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp90, i64 0
  %tmp91 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp91 to i32
  %cmp154 = icmp eq i32 %conv, 0
  br i1 %cmp154, label %if.then161, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %if.then153
  %tmp92 = load i8*, i8** %beg, align 8
  %arrayidx157 = getelementptr inbounds i8, i8* %tmp92, i64 1
  %tmp93 = load i8, i8* %arrayidx157, align 1
  %conv158 = sext i8 %tmp93 to i32
  %cmp159 = icmp eq i32 %conv158, 0
  br i1 %cmp159, label %if.then161, label %if.end162

if.then161:                                       ; preds = %lor.lhs.false156, %if.then153
  store i32 0, i32* %retval
  br label %return

if.end162:                                        ; preds = %lor.lhs.false156
  %tmp94 = load i8*, i8** %beg, align 8
  %call163 = call i32 @osip_clrspace(i8* %tmp94)
  %tmp95 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp96 = load i8*, i8** %hname.addr, align 8
  %tmp97 = load i8*, i8** %beg, align 8
  %call164 = call i32 @osip_message_set__header(%struct.osip_message* %tmp95, i8* %tmp96, i8* %tmp97)
  store i32 %call164, i32* %i, align 4
  %tmp98 = load i32, i32* %i, align 4
  %cmp165 = icmp ne i32 %tmp98, 0
  br i1 %cmp165, label %if.then167, label %if.end168

if.then167:                                       ; preds = %if.end162
  %tmp99 = load i32, i32* %i, align 4
  store i32 %tmp99, i32* %retval
  br label %return

if.end168:                                        ; preds = %if.end162
  store i32 0, i32* %retval
  br label %return

if.end169:                                        ; preds = %if.then149
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %land.lhs.true147, %if.else145
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then143
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end138
  %tmp100 = load i8*, i8** %end, align 8
  %cmp173 = icmp ne i8* %tmp100, null
  br i1 %cmp173, label %if.then175, label %if.end233

if.then175:                                       ; preds = %if.end172
  %tmp101 = load i8*, i8** %end, align 8
  %tmp102 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp101 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp102 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp176 = icmp slt i64 %add, 2
  br i1 %cmp176, label %if.then178, label %if.end179

if.then178:                                       ; preds = %if.then175
  store i32 -5, i32* %retval
  br label %return

if.end179:                                        ; preds = %if.then175
  %tmp103 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp103, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end179
  %tmp104 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp105 = load i8*, i8** %end, align 8
  %tmp106 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast180 = ptrtoint i8* %tmp105 to i64
  %sub.ptr.rhs.cast181 = ptrtoint i8* %tmp106 to i64
  %sub.ptr.sub182 = sub i64 %sub.ptr.lhs.cast180, %sub.ptr.rhs.cast181
  %add183 = add nsw i64 %sub.ptr.sub182, 1
  %call184 = call i8* %tmp104(i64 %add183)
  br label %cond.end

cond.false:                                       ; preds = %if.end179
  %tmp107 = load i8*, i8** %end, align 8
  %tmp108 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast185 = ptrtoint i8* %tmp107 to i64
  %sub.ptr.rhs.cast186 = ptrtoint i8* %tmp108 to i64
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186
  %add188 = add nsw i64 %sub.ptr.sub187, 1
  %call189 = call noalias i8* @malloc(i64 %add188) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call184, %cond.true ], [ %call189, %cond.false ]
  store i8* %cond, i8** %avalue, align 8
  %tmp109 = load i8*, i8** %avalue, align 8
  %cmp190 = icmp eq i8* %tmp109, null
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end193:                                        ; preds = %cond.end
  %tmp110 = load i8*, i8** %avalue, align 8
  %tmp111 = load i8*, i8** %beg, align 8
  %tmp112 = load i8*, i8** %end, align 8
  %tmp113 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast194 = ptrtoint i8* %tmp112 to i64
  %sub.ptr.rhs.cast195 = ptrtoint i8* %tmp113 to i64
  %sub.ptr.sub196 = sub i64 %sub.ptr.lhs.cast194, %sub.ptr.rhs.cast195
  %call197 = call i8* @osip_clrncpy(i8* %tmp110, i8* %tmp111, i64 %sub.ptr.sub196)
  %tmp114 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp115 = load i8*, i8** %hname.addr, align 8
  %tmp116 = load i8*, i8** %avalue, align 8
  %call198 = call i32 @osip_message_set__header(%struct.osip_message* %tmp114, i8* %tmp115, i8* %tmp116)
  store i32 %call198, i32* %i, align 4
  %tmp117 = load i8*, i8** %avalue, align 8
  %cmp199 = icmp ne i8* %tmp117, null
  br i1 %cmp199, label %if.then201, label %if.end206

if.then201:                                       ; preds = %if.end193
  %tmp118 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool202 = icmp ne void (i8*)* %tmp118, null
  br i1 %tobool202, label %if.then203, label %if.else204

if.then203:                                       ; preds = %if.then201
  %tmp119 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp120 = load i8*, i8** %avalue, align 8
  call void %tmp119(i8* %tmp120)
  br label %if.end205

if.else204:                                       ; preds = %if.then201
  %tmp121 = load i8*, i8** %avalue, align 8
  call void @free(i8* %tmp121) #8
  br label %if.end205

if.end205:                                        ; preds = %if.else204, %if.then203
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end193
  %tmp122 = load i32, i32* %i, align 4
  %cmp207 = icmp ne i32 %tmp122, 0
  br i1 %cmp207, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.end206
  %tmp123 = load i32, i32* %i, align 4
  store i32 %tmp123, i32* %retval
  br label %return

if.end210:                                        ; preds = %if.end206
  %tmp124 = load i8*, i8** %end, align 8
  %add.ptr211 = getelementptr inbounds i8, i8* %tmp124, i64 1
  store i8* %add.ptr211, i8** %beg, align 8
  store i8* null, i8** %end, align 8
  %tmp125 = load i8*, i8** %comma, align 8
  %cmp212 = icmp eq i8* %tmp125, null
  br i1 %cmp212, label %if.then214, label %if.end232

if.then214:                                       ; preds = %if.end210
  %tmp126 = load i8*, i8** %beg, align 8
  %arrayidx215 = getelementptr inbounds i8, i8* %tmp126, i64 0
  %tmp127 = load i8, i8* %arrayidx215, align 1
  %conv216 = sext i8 %tmp127 to i32
  %cmp217 = icmp eq i32 %conv216, 0
  br i1 %cmp217, label %if.then224, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %if.then214
  %tmp128 = load i8*, i8** %beg, align 8
  %arrayidx220 = getelementptr inbounds i8, i8* %tmp128, i64 1
  %tmp129 = load i8, i8* %arrayidx220, align 1
  %conv221 = sext i8 %tmp129 to i32
  %cmp222 = icmp eq i32 %conv221, 0
  br i1 %cmp222, label %if.then224, label %if.end225

if.then224:                                       ; preds = %lor.lhs.false219, %if.then214
  store i32 0, i32* %retval
  br label %return

if.end225:                                        ; preds = %lor.lhs.false219
  %tmp130 = load i8*, i8** %beg, align 8
  %call226 = call i32 @osip_clrspace(i8* %tmp130)
  %tmp131 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp132 = load i8*, i8** %hname.addr, align 8
  %tmp133 = load i8*, i8** %beg, align 8
  %call227 = call i32 @osip_message_set__header(%struct.osip_message* %tmp131, i8* %tmp132, i8* %tmp133)
  store i32 %call227, i32* %i, align 4
  %tmp134 = load i32, i32* %i, align 4
  %cmp228 = icmp ne i32 %tmp134, 0
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %if.end225
  %tmp135 = load i32, i32* %i, align 4
  store i32 %tmp135, i32* %retval
  br label %return

if.end231:                                        ; preds = %if.end225
  store i32 0, i32* %retval
  br label %return

if.end232:                                        ; preds = %if.end210
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end172
  br label %while.cond

while.end234:                                     ; preds = %while.cond
  store i32 -5, i32* %retval
  br label %return

return:                                           ; preds = %while.end234, %if.end231, %if.then230, %if.then224, %if.then209, %if.then192, %if.then178, %if.end168, %if.then167, %if.then161, %if.then98, %if.end90, %if.then89, %if.end, %if.then3
  %tmp136 = load i32, i32* %retval
  ret i32 %tmp136
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_parse(%struct.osip_message* %sip, i8* %buf, i64 %length) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp1 = load i8*, i8** %buf.addr, align 8
  %tmp2 = load i64, i64* %length.addr, align 8
  %call = call i32 @_osip_message_parse(%struct.osip_message* %tmp, i8* %tmp1, i64 %tmp2, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_parse_sipfrag(%struct.osip_message* %sip, i8* %buf, i64 %length) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp1 = load i8*, i8** %buf.addr, align 8
  %tmp2 = load i64, i64* %length.addr, align 8
  %call = call i32 @_osip_message_parse(%struct.osip_message* %tmp, i8* %tmp1, i64 %tmp2, i32 1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_fix_last_via_header(%struct.osip_message* %request, i8* %ip_addr, i32 %port) #0 {
entry:
  %retval = alloca i32, align 4
  %request.addr = alloca %struct.osip_message*, align 8
  %ip_addr.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %rport = alloca %struct.osip_uri_param*, align 8
  %via = alloca %struct.osip_via*, align 8
  store %struct.osip_message* %request, %struct.osip_message** %request.addr, align 8
  store i8* %ip_addr, i8** %ip_addr.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  %tmp = load %struct.osip_message*, %struct.osip_message** %request.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %request.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 3
  %tmp2 = load i32, i32* %status_code, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %request.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 28
  %call = call i8* @osip_list_get(%struct.osip_list* %vias, i32 0)
  %tmp4 = bitcast i8* %call to %struct.osip_via*
  store %struct.osip_via* %tmp4, %struct.osip_via** %via, align 8
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %cmp4 = icmp eq %struct.osip_via* %tmp5, null
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %tmp6 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %host = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp6, i32 0, i32 2
  %tmp7 = load i8*, i8** %host, align 8
  %cmp5 = icmp eq i8* %tmp7, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end7:                                          ; preds = %lor.lhs.false
  %tmp8 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %via_params = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp8, i32 0, i32 5
  %call8 = call i32 @osip_uri_param_get_byname(%struct.osip_list* %via_params, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str1664, i32 0, i32 0), %struct.osip_uri_param** %rport)
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %rport, align 8
  %cmp9 = icmp ne %struct.osip_uri_param* %tmp9, null
  br i1 %cmp9, label %if.then10, label %if.end23

if.then10:                                        ; preds = %if.end7
  %tmp10 = load %struct.osip_uri_param*, %struct.osip_uri_param** %rport, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %gvalue, align 8
  %cmp11 = icmp eq i8* %tmp11, null
  br i1 %cmp11, label %if.then12, label %if.end22

if.then12:                                        ; preds = %if.then10
  %tmp12 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp12, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then12
  %tmp13 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call13 = call i8* %tmp13(i64 9)
  br label %cond.end

cond.false:                                       ; preds = %if.then12
  %call14 = call noalias i8* @malloc(i64 9) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call13, %cond.true ], [ %call14, %cond.false ]
  %tmp14 = load %struct.osip_uri_param*, %struct.osip_uri_param** %rport, align 8
  %gvalue15 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp14, i32 0, i32 1
  store i8* %cond, i8** %gvalue15, align 8
  %tmp15 = load %struct.osip_uri_param*, %struct.osip_uri_param** %rport, align 8
  %gvalue16 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %gvalue16, align 8
  %cmp17 = icmp eq i8* %tmp16, null
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end19:                                         ; preds = %cond.end
  %tmp17 = load %struct.osip_uri_param*, %struct.osip_uri_param** %rport, align 8
  %gvalue20 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp17, i32 0, i32 1
  %tmp18 = load i8*, i8** %gvalue20, align 8
  %tmp19 = load i32, i32* %port.addr, align 4
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp18, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str1765, i32 0, i32 0), i32 %tmp19) #8
  br label %if.end22

if.end22:                                         ; preds = %if.end19, %if.then10
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end7
  %tmp20 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %host24 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp20, i32 0, i32 2
  %tmp21 = load i8*, i8** %host24, align 8
  %tmp22 = load i8*, i8** %ip_addr.addr, align 8
  %call25 = call i32 @strcmp(i8* %tmp21, i8* %tmp22) #7
  %cmp26 = icmp eq i32 0, %call25
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end23
  store i32 0, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.end23
  %tmp23 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %via_params29 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp23, i32 0, i32 5
  %call30 = call i8* @osip_strdup(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str1866, i32 0, i32 0))
  %tmp24 = load i8*, i8** %ip_addr.addr, align 8
  %call31 = call i8* @osip_strdup(i8* %tmp24)
  %call32 = call i32 @osip_uri_param_add(%struct.osip_list* %via_params29, i8* %call30, i8* %call31)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end28, %if.then27, %if.then18, %if.then6, %if.then2, %if.then
  %tmp25 = load i32, i32* %retval
  ret i32 %tmp25
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i8* @osip_message_get_reason(i32 %replycode) #0 {
entry:
  %retval = alloca i8*, align 8
  %replycode.addr = alloca i32, align 4
  %reasons = alloca %struct.code_to_reason*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %replycode, i32* %replycode.addr, align 4
  %tmp = load i32, i32* %replycode.addr, align 4
  %div = sdiv i32 %tmp, 100
  switch i32 %div, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 6, label %sw.bb5
  ]

sw.bb:                                            ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([5 x %struct.code_to_reason], [5 x %struct.code_to_reason]* @osip_message_get_reason.reasons1xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 5, i32* %len, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([2 x %struct.code_to_reason], [2 x %struct.code_to_reason]* @osip_message_get_reason.reasons2xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 2, i32* %len, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([5 x %struct.code_to_reason], [5 x %struct.code_to_reason]* @osip_message_get_reason.reasons3xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 5, i32* %len, align 4
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([33 x %struct.code_to_reason], [33 x %struct.code_to_reason]* @osip_message_get_reason.reasons4xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 33, i32* %len, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([6 x %struct.code_to_reason], [6 x %struct.code_to_reason]* @osip_message_get_reason.reasons5xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 6, i32* %len, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  store %struct.code_to_reason* getelementptr inbounds ([4 x %struct.code_to_reason], [4 x %struct.code_to_reason]* @osip_message_get_reason.reasons6xx, i32 0, i32 0), %struct.code_to_reason** %reasons, align 8
  store i32 4, i32* %len, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i8* null, i8** %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %tmp1 = load i32, i32* %i, align 4
  %tmp2 = load i32, i32* %len, align 4
  %cmp = icmp slt i32 %tmp1, %tmp2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %tmp3 to i64
  %tmp4 = load %struct.code_to_reason*, %struct.code_to_reason** %reasons, align 8
  %arrayidx = getelementptr inbounds %struct.code_to_reason, %struct.code_to_reason* %tmp4, i64 %idxprom
  %code = getelementptr inbounds %struct.code_to_reason, %struct.code_to_reason* %arrayidx, i32 0, i32 0
  %tmp5 = load i32, i32* %code, align 4
  %tmp6 = load i32, i32* %replycode.addr, align 4
  %cmp6 = icmp eq i32 %tmp5, %tmp6
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %tmp7 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %tmp7 to i64
  %tmp8 = load %struct.code_to_reason*, %struct.code_to_reason** %reasons, align 8
  %arrayidx8 = getelementptr inbounds %struct.code_to_reason, %struct.code_to_reason* %tmp8, i64 %idxprom7
  %reason = getelementptr inbounds %struct.code_to_reason, %struct.code_to_reason* %arrayidx8, i32 0, i32 1
  %tmp9 = load i8*, i8** %reason, align 8
  store i8* %tmp9, i8** %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %tmp10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then, %sw.default
  %tmp11 = load i8*, i8** %retval
  ret i8* %tmp11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @strncat(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @osip_message_set__header(%struct.osip_message* %sip, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %my_index = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hname.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %hname.addr, align 8
  %call = call i32 @__osip_message_is_known_header(i8* %tmp1)
  store i32 %call, i32* %my_index, align 4
  %tmp2 = load i32, i32* %my_index, align 4
  %cmp1 = icmp sge i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %my_index, align 4
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp5 = load i8*, i8** %hvalue.addr, align 8
  %call3 = call i32 @__osip_message_call_method(i32 %tmp3, %struct.osip_message* %tmp4, i8* %tmp5)
  store i32 %call3, i32* %ret, align 4
  %tmp6 = load i32, i32* %ret, align 4
  %cmp4 = icmp ne i32 %tmp6, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then2
  %tmp7 = load i32, i32* %ret, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.then2
  store i32 0, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp9 = load i8*, i8** %hname.addr, align 8
  %tmp10 = load i8*, i8** %hvalue.addr, align 8
  %call8 = call i32 @osip_message_set_header(%struct.osip_message* %tmp8, i8* %tmp9, i8* %tmp10)
  %cmp9 = icmp ne i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  br label %do.body

do.body:                                          ; preds = %if.then10
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %do.end, %if.end6, %if.then5, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define internal i32 @_osip_message_parse(%struct.osip_message* %sip, i8* %buf, i64 %length, i32 %sipfrag) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %sipfrag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %next_header_index = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %beg = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  store i32 %sipfrag, i32* %sipfrag.addr, align 4
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp2 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp3 = load i64, i64* %length.addr, align 8
  %add = add i64 %tmp3, 2
  %call = call i8* %tmp2(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %tmp4 = load i64, i64* %length.addr, align 8
  %add2 = add i64 %tmp4, 2
  %call3 = call noalias i8* @malloc(i64 %add2) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call3, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp5 = load i8*, i8** %tmp, align 8
  %cmp = icmp eq i8* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load i8*, i8** %tmp, align 8
  store i8* %tmp6, i8** %beg, align 8
  %tmp7 = load i8*, i8** %tmp, align 8
  %tmp8 = load i8*, i8** %buf.addr, align 8
  %tmp9 = load i64, i64* %length.addr, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp7, i8* %tmp8, i64 %tmp9, i32 1, i1 false)
  %tmp10 = load i64, i64* %length.addr, align 8
  %tmp11 = load i8*, i8** %tmp, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp11, i64 %tmp10
  store i8 0, i8* %arrayidx, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %tmp12 = load i8*, i8** %tmp, align 8
  %arrayidx4 = getelementptr inbounds i8, i8* %tmp12, i64 0
  %tmp13 = load i8, i8* %arrayidx4, align 1
  %conv = sext i8 %tmp13 to i32
  %cmp5 = icmp eq i32 %conv, 13
  br i1 %cmp5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %tmp14 = load i8*, i8** %tmp, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %tmp14, i64 0
  %tmp15 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %tmp15 to i32
  %cmp9 = icmp eq i32 %conv8, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %tmp16 = phi i1 [ true, %while.cond ], [ %cmp9, %lor.rhs ]
  br i1 %tmp16, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %tmp17 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp17, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %tmp18 = load i8*, i8** %tmp, align 8
  call void @osip_util_replace_all_lws(i8* %tmp18)
  %tmp19 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp20 = load i8*, i8** %tmp, align 8
  %call11 = call i32 @__osip_message_startline_parse(%struct.osip_message* %tmp19, i8* %tmp20, i8** %next_header_index)
  store i32 %call11, i32* %i, align 4
  %tmp21 = load i32, i32* %i, align 4
  %cmp12 = icmp ne i32 %tmp21, 0
  br i1 %cmp12, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %while.end
  %tmp22 = load i32, i32* %sipfrag.addr, align 4
  %tobool14 = icmp ne i32 %tmp22, 0
  br i1 %tobool14, label %if.end25, label %if.then15

if.then15:                                        ; preds = %land.lhs.true
  br label %do.body16

do.body16:                                        ; preds = %if.then15
  br label %do.end17

do.end17:                                         ; preds = %do.body16
  %tmp23 = load i8*, i8** %beg, align 8
  %cmp18 = icmp ne i8* %tmp23, null
  br i1 %cmp18, label %if.then20, label %if.end24

if.then20:                                        ; preds = %do.end17
  %tmp24 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool21 = icmp ne void (i8*)* %tmp24, null
  br i1 %tobool21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.then20
  %tmp25 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp26 = load i8*, i8** %beg, align 8
  call void %tmp25(i8* %tmp26)
  br label %if.end23

if.else:                                          ; preds = %if.then20
  %tmp27 = load i8*, i8** %beg, align 8
  call void @free(i8* %tmp27) #8
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then22
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %do.end17
  %tmp28 = load i32, i32* %i, align 4
  store i32 %tmp28, i32* %retval
  br label %return

if.end25:                                         ; preds = %land.lhs.true, %while.end
  %tmp29 = load i8*, i8** %next_header_index, align 8
  store i8* %tmp29, i8** %tmp, align 8
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp31 = load i8*, i8** %tmp, align 8
  %call26 = call i32 @msg_headers_parse(%struct.osip_message* %tmp30, i8* %tmp31, i8** %next_header_index)
  store i32 %call26, i32* %i, align 4
  %tmp32 = load i32, i32* %i, align 4
  %cmp27 = icmp ne i32 %tmp32, 0
  br i1 %cmp27, label %if.then29, label %if.end40

if.then29:                                        ; preds = %if.end25
  br label %do.body30

do.body30:                                        ; preds = %if.then29
  br label %do.end31

do.end31:                                         ; preds = %do.body30
  %tmp33 = load i8*, i8** %beg, align 8
  %cmp32 = icmp ne i8* %tmp33, null
  br i1 %cmp32, label %if.then34, label %if.end39

if.then34:                                        ; preds = %do.end31
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool35 = icmp ne void (i8*)* %tmp34, null
  br i1 %tobool35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %if.then34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp36 = load i8*, i8** %beg, align 8
  call void %tmp35(i8* %tmp36)
  br label %if.end38

if.else37:                                        ; preds = %if.then34
  %tmp37 = load i8*, i8** %beg, align 8
  call void @free(i8* %tmp37) #8
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %do.end31
  %tmp38 = load i32, i32* %i, align 4
  store i32 %tmp38, i32* %retval
  br label %return

if.end40:                                         ; preds = %if.end25
  %tmp39 = load i8*, i8** %next_header_index, align 8
  store i8* %tmp39, i8** %tmp, align 8
  %tmp40 = load i8*, i8** %tmp, align 8
  %arrayidx41 = getelementptr inbounds i8, i8* %tmp40, i64 0
  %tmp41 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %tmp41 to i32
  %cmp43 = icmp eq i32 %conv42, 0
  br i1 %cmp43, label %if.then54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end40
  %tmp42 = load i8*, i8** %tmp, align 8
  %arrayidx45 = getelementptr inbounds i8, i8* %tmp42, i64 1
  %tmp43 = load i8, i8* %arrayidx45, align 1
  %conv46 = sext i8 %tmp43 to i32
  %cmp47 = icmp eq i32 %conv46, 0
  br i1 %cmp47, label %if.then54, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false
  %tmp44 = load i8*, i8** %tmp, align 8
  %arrayidx50 = getelementptr inbounds i8, i8* %tmp44, i64 2
  %tmp45 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %tmp45 to i32
  %cmp52 = icmp eq i32 %conv51, 0
  br i1 %cmp52, label %if.then54, label %if.end68

if.then54:                                        ; preds = %lor.lhs.false49, %lor.lhs.false, %if.end40
  %tmp46 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp46, i32 0, i32 16
  %tmp47 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  %cmp55 = icmp eq %struct.osip_content_length* %tmp47, null
  br i1 %cmp55, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.then54
  %tmp48 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call58 = call i32 @osip_message_set_content_length(%struct.osip_message* %tmp48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str73, i32 0, i32 0))
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.then54
  %tmp49 = load i8*, i8** %beg, align 8
  %cmp60 = icmp ne i8* %tmp49, null
  br i1 %cmp60, label %if.then62, label %if.end67

if.then62:                                        ; preds = %if.end59
  %tmp50 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool63 = icmp ne void (i8*)* %tmp50, null
  br i1 %tobool63, label %if.then64, label %if.else65

if.then64:                                        ; preds = %if.then62
  %tmp51 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp52 = load i8*, i8** %beg, align 8
  call void %tmp51(i8* %tmp52)
  br label %if.end66

if.else65:                                        ; preds = %if.then62
  %tmp53 = load i8*, i8** %beg, align 8
  call void @free(i8* %tmp53) #8
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end59
  store i32 0, i32* %retval
  br label %return

if.end68:                                         ; preds = %lor.lhs.false49
  %tmp54 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp55 = load i8*, i8** %tmp, align 8
  %tmp56 = load i64, i64* %length.addr, align 8
  %tmp57 = load i8*, i8** %tmp, align 8
  %tmp58 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp57 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp58 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp56, %sub.ptr.sub
  %call69 = call i32 @msg_osip_body_parse(%struct.osip_message* %tmp54, i8* %tmp55, i8** %next_header_index, i64 %sub)
  store i32 %call69, i32* %i, align 4
  %tmp59 = load i8*, i8** %beg, align 8
  %cmp70 = icmp ne i8* %tmp59, null
  br i1 %cmp70, label %if.then72, label %if.end77

if.then72:                                        ; preds = %if.end68
  %tmp60 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool73 = icmp ne void (i8*)* %tmp60, null
  br i1 %tobool73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then72
  %tmp61 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp62 = load i8*, i8** %beg, align 8
  call void %tmp61(i8* %tmp62)
  br label %if.end76

if.else75:                                        ; preds = %if.then72
  %tmp63 = load i8*, i8** %beg, align 8
  call void @free(i8* %tmp63) #8
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end68
  %tmp64 = load i32, i32* %i, align 4
  %cmp78 = icmp ne i32 %tmp64, 0
  br i1 %cmp78, label %if.then80, label %if.end83

if.then80:                                        ; preds = %if.end77
  br label %do.body81

do.body81:                                        ; preds = %if.then80
  br label %do.end82

do.end82:                                         ; preds = %do.body81
  %tmp65 = load i32, i32* %i, align 4
  store i32 %tmp65, i32* %retval
  br label %return

if.end83:                                         ; preds = %if.end77
  %tmp66 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length84 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp66, i32 0, i32 16
  %tmp67 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length84, align 8
  %cmp85 = icmp eq %struct.osip_content_length* %tmp67, null
  br i1 %cmp85, label %if.then87, label %if.end89

if.then87:                                        ; preds = %if.end83
  %tmp68 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call88 = call i32 @osip_message_set_content_length(%struct.osip_message* %tmp68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str73, i32 0, i32 0))
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %if.end83
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end89, %do.end82, %if.end67, %if.end39, %if.end24, %do.end
  %tmp69 = load i32, i32* %retval
  ret i32 %tmp69
}

; Function Attrs: nounwind uwtable
define internal i32 @msg_osip_body_parse(%struct.osip_message* %sip, i8* %start_of_buf, i8** %next_body, i64 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %start_of_buf.addr = alloca i8*, align 8
  %next_body.addr = alloca i8**, align 8
  %length.addr = alloca i64, align 8
  %start_of_body = alloca i8*, align 8
  %end_of_body = alloca i8*, align 8
  %end_of_buf = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %i = alloca i32, align 4
  %sep_boundary = alloca i8*, align 8
  %len_sep_boundary = alloca i64, align 8
  %ct_param = alloca %struct.osip_uri_param*, align 8
  %osip_body_len = alloca i64, align 8
  %tmp53 = alloca [16 x i8], align 16
  %boundary_prefix = alloca i8*, align 8
  %len = alloca i64, align 8
  %body_len = alloca i64, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %start_of_buf, i8** %start_of_buf.addr, align 8
  store i8** %next_body, i8*** %next_body.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 17
  %tmp2 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type5 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 17
  %tmp4 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type5, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %type, align 8
  %cmp6 = icmp eq i8* %tmp5, null
  br i1 %cmp6, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %tmp6 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type8 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp6, i32 0, i32 17
  %tmp7 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type8, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp7, i32 0, i32 1
  %tmp8 = load i8*, i8** %subtype, align 8
  %cmp9 = icmp eq i8* %tmp8, null
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false7
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type10 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 17
  %tmp10 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type10, align 8
  %type11 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %type11, align 8
  %call = call i32 @osip_strcasecmp(i8* %tmp11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str74, i32 0, i32 0))
  %cmp12 = icmp ne i32 0, %call
  br i1 %cmp12, label %if.then13, label %if.end118

if.then13:                                        ; preds = %if.end
  %tmp12 = load i8*, i8** %start_of_buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp12, i64 0
  %tmp13 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp13 to i32
  %cmp15 = icmp eq i32 %conv, 0
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.then13
  store i32 -5, i32* %retval
  br label %return

if.end18:                                         ; preds = %if.then13
  %tmp14 = load i8*, i8** %start_of_buf.addr, align 8
  %arrayidx19 = getelementptr inbounds i8, i8* %tmp14, i64 0
  %tmp15 = load i8, i8* %arrayidx19, align 1
  %conv20 = sext i8 %tmp15 to i32
  %cmp21 = icmp eq i32 13, %conv20
  br i1 %cmp21, label %if.then23, label %if.else31

if.then23:                                        ; preds = %if.end18
  %tmp16 = load i8*, i8** %start_of_buf.addr, align 8
  %arrayidx24 = getelementptr inbounds i8, i8* %tmp16, i64 1
  %tmp17 = load i8, i8* %arrayidx24, align 1
  %conv25 = sext i8 %tmp17 to i32
  %cmp26 = icmp eq i32 10, %conv25
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then23
  %tmp18 = load i8*, i8** %start_of_buf.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp18, i64 2
  store i8* %add.ptr, i8** %start_of_body, align 8
  br label %if.end30

if.else:                                          ; preds = %if.then23
  %tmp19 = load i8*, i8** %start_of_buf.addr, align 8
  %add.ptr29 = getelementptr inbounds i8, i8* %tmp19, i64 1
  store i8* %add.ptr29, i8** %start_of_body, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then28
  br label %if.end40

if.else31:                                        ; preds = %if.end18
  %tmp20 = load i8*, i8** %start_of_buf.addr, align 8
  %arrayidx32 = getelementptr inbounds i8, i8* %tmp20, i64 0
  %tmp21 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %tmp21 to i32
  %cmp34 = icmp eq i32 10, %conv33
  br i1 %cmp34, label %if.then36, label %if.else38

if.then36:                                        ; preds = %if.else31
  %tmp22 = load i8*, i8** %start_of_buf.addr, align 8
  %add.ptr37 = getelementptr inbounds i8, i8* %tmp22, i64 1
  store i8* %add.ptr37, i8** %start_of_body, align 8
  br label %if.end39

if.else38:                                        ; preds = %if.else31
  store i32 -5, i32* %retval
  br label %return

if.end39:                                         ; preds = %if.then36
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end30
  %tmp23 = load i64, i64* %length.addr, align 8
  %tmp24 = load i8*, i8** %start_of_body, align 8
  %tmp25 = load i8*, i8** %start_of_buf.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp24 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp25 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp23, %sub.ptr.sub
  store i64 %sub, i64* %length.addr, align 8
  %tmp26 = load i64, i64* %length.addr, align 8
  %cmp41 = icmp ule i64 %tmp26, 0
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end40
  store i32 -5, i32* %retval
  br label %return

if.end44:                                         ; preds = %if.end40
  %tmp27 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp27, i32 0, i32 16
  %tmp28 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  %cmp45 = icmp ne %struct.osip_content_length* %tmp28, null
  br i1 %cmp45, label %if.then47, label %if.else51

if.then47:                                        ; preds = %if.end44
  %tmp29 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length48 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp29, i32 0, i32 16
  %tmp30 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length48, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp30, i32 0, i32 0
  %tmp31 = load i8*, i8** %value, align 8
  %call49 = call i32 @osip_atoi(i8* %tmp31)
  %conv50 = sext i32 %call49 to i64
  store i64 %conv50, i64* %osip_body_len, align 8
  br label %if.end76

if.else51:                                        ; preds = %if.end44
  %tmp32 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type54 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp32, i32 0, i32 17
  %tmp33 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type54, align 8
  %type55 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp33, i32 0, i32 0
  %tmp34 = load i8*, i8** %type55, align 8
  %call56 = call i32 @osip_strcasecmp(i8* %tmp34, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str75, i32 0, i32 0))
  %cmp57 = icmp eq i32 0, %call56
  br i1 %cmp57, label %land.lhs.true, label %if.else74

land.lhs.true:                                    ; preds = %if.else51
  %tmp35 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type59 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp35, i32 0, i32 17
  %tmp36 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type59, align 8
  %subtype60 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp36, i32 0, i32 1
  %tmp37 = load i8*, i8** %subtype60, align 8
  %call61 = call i32 @osip_strcasecmp(i8* %tmp37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str76, i32 0, i32 0))
  %cmp62 = icmp eq i32 0, %call61
  br i1 %cmp62, label %if.then64, label %if.else74

if.then64:                                        ; preds = %land.lhs.true
  %tmp38 = load i8*, i8** %start_of_body, align 8
  %call65 = call i64 @strlen(i8* %tmp38) #7
  store i64 %call65, i64* %osip_body_len, align 8
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %tmp53, i32 0, i32 0
  %tmp39 = load i64, i64* %osip_body_len, align 8
  %conv66 = trunc i64 %tmp39 to i32
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str1765, i32 0, i32 0), i32 %conv66) #8
  %tmp40 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %arraydecay68 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp53, i32 0, i32 0
  %call69 = call i32 @osip_message_set_content_length(%struct.osip_message* %tmp40, i8* %arraydecay68)
  store i32 %call69, i32* %i, align 4
  %tmp41 = load i32, i32* %i, align 4
  %cmp70 = icmp ne i32 %tmp41, 0
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.then64
  %tmp42 = load i32, i32* %i, align 4
  store i32 %tmp42, i32* %retval
  br label %return

if.end73:                                         ; preds = %if.then64
  br label %if.end75

if.else74:                                        ; preds = %land.lhs.true, %if.else51
  store i32 -5, i32* %retval
  br label %return

if.end75:                                         ; preds = %if.end73
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then47
  %tmp43 = load i64, i64* %length.addr, align 8
  %tmp44 = load i64, i64* %osip_body_len, align 8
  %cmp77 = icmp ult i64 %tmp43, %tmp44
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end76
  br label %do.body

do.body:                                          ; preds = %if.then79
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -5, i32* %retval
  br label %return

if.end80:                                         ; preds = %if.end76
  %tmp45 = load i8*, i8** %start_of_body, align 8
  %tmp46 = load i64, i64* %osip_body_len, align 8
  %add.ptr81 = getelementptr inbounds i8, i8* %tmp45, i64 %tmp46
  store i8* %add.ptr81, i8** %end_of_body, align 8
  %tmp47 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp47, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end80
  %tmp48 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp49 = load i8*, i8** %end_of_body, align 8
  %tmp50 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast82 = ptrtoint i8* %tmp49 to i64
  %sub.ptr.rhs.cast83 = ptrtoint i8* %tmp50 to i64
  %sub.ptr.sub84 = sub i64 %sub.ptr.lhs.cast82, %sub.ptr.rhs.cast83
  %add = add nsw i64 %sub.ptr.sub84, 2
  %call85 = call i8* %tmp48(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end80
  %tmp51 = load i8*, i8** %end_of_body, align 8
  %tmp52 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast86 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.rhs.cast87 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87
  %add89 = add nsw i64 %sub.ptr.sub88, 2
  %call90 = call noalias i8* @malloc(i64 %add89) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call85, %cond.true ], [ %call90, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp54 = load i8*, i8** %tmp, align 8
  %cmp91 = icmp eq i8* %tmp54, null
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end94:                                         ; preds = %cond.end
  %tmp55 = load i8*, i8** %tmp, align 8
  %tmp56 = load i8*, i8** %start_of_body, align 8
  %tmp57 = load i8*, i8** %end_of_body, align 8
  %tmp58 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast95 = ptrtoint i8* %tmp57 to i64
  %sub.ptr.rhs.cast96 = ptrtoint i8* %tmp58 to i64
  %sub.ptr.sub97 = sub i64 %sub.ptr.lhs.cast95, %sub.ptr.rhs.cast96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp55, i8* %tmp56, i64 %sub.ptr.sub97, i32 1, i1 false)
  %tmp59 = load i8*, i8** %end_of_body, align 8
  %tmp60 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast98 = ptrtoint i8* %tmp59 to i64
  %sub.ptr.rhs.cast99 = ptrtoint i8* %tmp60 to i64
  %sub.ptr.sub100 = sub i64 %sub.ptr.lhs.cast98, %sub.ptr.rhs.cast99
  %tmp61 = load i8*, i8** %tmp, align 8
  %arrayidx101 = getelementptr inbounds i8, i8* %tmp61, i64 %sub.ptr.sub100
  store i8 0, i8* %arrayidx101, align 1
  %tmp62 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp63 = load i8*, i8** %tmp, align 8
  %tmp64 = load i8*, i8** %end_of_body, align 8
  %tmp65 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast102 = ptrtoint i8* %tmp64 to i64
  %sub.ptr.rhs.cast103 = ptrtoint i8* %tmp65 to i64
  %sub.ptr.sub104 = sub i64 %sub.ptr.lhs.cast102, %sub.ptr.rhs.cast103
  %call105 = call i32 @osip_message_set_body(%struct.osip_message* %tmp62, i8* %tmp63, i64 %sub.ptr.sub104)
  store i32 %call105, i32* %i, align 4
  %tmp66 = load i8*, i8** %tmp, align 8
  %cmp106 = icmp ne i8* %tmp66, null
  br i1 %cmp106, label %if.then108, label %if.end113

if.then108:                                       ; preds = %if.end94
  %tmp67 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool109 = icmp ne void (i8*)* %tmp67, null
  br i1 %tobool109, label %if.then110, label %if.else111

if.then110:                                       ; preds = %if.then108
  %tmp68 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp69 = load i8*, i8** %tmp, align 8
  call void %tmp68(i8* %tmp69)
  br label %if.end112

if.else111:                                       ; preds = %if.then108
  %tmp70 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp70) #8
  br label %if.end112

if.end112:                                        ; preds = %if.else111, %if.then110
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end94
  %tmp71 = load i32, i32* %i, align 4
  %cmp114 = icmp ne i32 %tmp71, 0
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %if.end113
  %tmp72 = load i32, i32* %i, align 4
  store i32 %tmp72, i32* %retval
  br label %return

if.end117:                                        ; preds = %if.end113
  store i32 0, i32* %retval
  br label %return

if.end118:                                        ; preds = %if.end
  %tmp73 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type119 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp73, i32 0, i32 17
  %tmp74 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type119, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp74, i32 0, i32 2
  %call120 = call i32 @osip_uri_param_get_byname(%struct.osip_list* %gen_params, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str77, i32 0, i32 0), %struct.osip_uri_param** %ct_param)
  store i32 %call120, i32* %i, align 4
  %tmp75 = load i32, i32* %i, align 4
  %cmp121 = icmp ne i32 %tmp75, 0
  br i1 %cmp121, label %if.then123, label %if.end124

if.then123:                                       ; preds = %if.end118
  %tmp76 = load i32, i32* %i, align 4
  store i32 %tmp76, i32* %retval
  br label %return

if.end124:                                        ; preds = %if.end118
  %tmp77 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %cmp125 = icmp eq %struct.osip_uri_param* %tmp77, null
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %if.end124
  store i32 -5, i32* %retval
  br label %return

if.end128:                                        ; preds = %if.end124
  %tmp78 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp78, i32 0, i32 1
  %tmp79 = load i8*, i8** %gvalue, align 8
  %cmp129 = icmp eq i8* %tmp79, null
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.end128
  store i32 -5, i32* %retval
  br label %return

if.end132:                                        ; preds = %if.end128
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str78, i32 0, i32 0), i8** %boundary_prefix, align 8
  %tmp80 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue135 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp80, i32 0, i32 1
  %tmp81 = load i8*, i8** %gvalue135, align 8
  %call136 = call i64 @strlen(i8* %tmp81) #7
  store i64 %call136, i64* %len, align 8
  %tmp82 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool137 = icmp ne i8* (i64)* %tmp82, null
  br i1 %tobool137, label %cond.true138, label %cond.false141

cond.true138:                                     ; preds = %if.end132
  %tmp83 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp84 = load i64, i64* %len, align 8
  %add139 = add i64 %tmp84, 4
  %call140 = call i8* %tmp83(i64 %add139)
  br label %cond.end144

cond.false141:                                    ; preds = %if.end132
  %tmp85 = load i64, i64* %len, align 8
  %add142 = add i64 %tmp85, 4
  %call143 = call noalias i8* @malloc(i64 %add142) #8
  br label %cond.end144

cond.end144:                                      ; preds = %cond.false141, %cond.true138
  %cond145 = phi i8* [ %call140, %cond.true138 ], [ %call143, %cond.false141 ]
  store i8* %cond145, i8** %sep_boundary, align 8
  %tmp86 = load i8*, i8** %sep_boundary, align 8
  %cmp146 = icmp eq i8* %tmp86, null
  br i1 %cmp146, label %if.then148, label %if.end149

if.then148:                                       ; preds = %cond.end144
  store i32 -4, i32* %retval
  br label %return

if.end149:                                        ; preds = %cond.end144
  %tmp87 = load i8*, i8** %sep_boundary, align 8
  %tmp88 = load i8*, i8** %boundary_prefix, align 8
  %call150 = call i8* @strcpy(i8* %tmp87, i8* %tmp88) #8
  %tmp89 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue151 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp89, i32 0, i32 1
  %tmp90 = load i8*, i8** %gvalue151, align 8
  %arrayidx152 = getelementptr inbounds i8, i8* %tmp90, i64 0
  %tmp91 = load i8, i8* %arrayidx152, align 1
  %conv153 = sext i8 %tmp91 to i32
  %cmp154 = icmp eq i32 %conv153, 34
  br i1 %cmp154, label %land.lhs.true156, label %if.else168

land.lhs.true156:                                 ; preds = %if.end149
  %tmp92 = load i64, i64* %len, align 8
  %sub157 = sub i64 %tmp92, 1
  %tmp93 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue158 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp93, i32 0, i32 1
  %tmp94 = load i8*, i8** %gvalue158, align 8
  %arrayidx159 = getelementptr inbounds i8, i8* %tmp94, i64 %sub157
  %tmp95 = load i8, i8* %arrayidx159, align 1
  %conv160 = sext i8 %tmp95 to i32
  %cmp161 = icmp eq i32 %conv160, 34
  br i1 %cmp161, label %if.then163, label %if.else168

if.then163:                                       ; preds = %land.lhs.true156
  %tmp96 = load i8*, i8** %sep_boundary, align 8
  %tmp97 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue164 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp97, i32 0, i32 1
  %tmp98 = load i8*, i8** %gvalue164, align 8
  %add.ptr165 = getelementptr inbounds i8, i8* %tmp98, i64 1
  %tmp99 = load i64, i64* %len, align 8
  %sub166 = sub i64 %tmp99, 2
  %call167 = call i8* @strncat(i8* %tmp96, i8* %add.ptr165, i64 %sub166) #8
  br label %if.end171

if.else168:                                       ; preds = %land.lhs.true156, %if.end149
  %tmp100 = load i8*, i8** %sep_boundary, align 8
  %tmp101 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue169 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp101, i32 0, i32 1
  %tmp102 = load i8*, i8** %gvalue169, align 8
  %tmp103 = load i64, i64* %len, align 8
  %call170 = call i8* @strncat(i8* %tmp100, i8* %tmp102, i64 %tmp103) #8
  br label %if.end171

if.end171:                                        ; preds = %if.else168, %if.then163
  %tmp104 = load i8*, i8** %sep_boundary, align 8
  %call172 = call i64 @strlen(i8* %tmp104) #7
  store i64 %call172, i64* %len_sep_boundary, align 8
  %tmp105 = load i8**, i8*** %next_body.addr, align 8
  store i8* null, i8** %tmp105, align 8
  %tmp106 = load i8*, i8** %start_of_buf.addr, align 8
  store i8* %tmp106, i8** %start_of_body, align 8
  %tmp107 = load i8*, i8** %start_of_buf.addr, align 8
  %tmp108 = load i64, i64* %length.addr, align 8
  %add.ptr173 = getelementptr inbounds i8, i8* %tmp107, i64 %tmp108
  store i8* %add.ptr173, i8** %end_of_buf, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end280, %if.end171
  store i64 0, i64* %body_len, align 8
  %tmp109 = load i8*, i8** %sep_boundary, align 8
  %tmp110 = load i8*, i8** %start_of_body, align 8
  %tmp111 = load i8*, i8** %end_of_buf, align 8
  %call175 = call i32 @__osip_find_next_occurence(i8* %tmp109, i8* %tmp110, i8** %start_of_body, i8* %tmp111)
  store i32 %call175, i32* %i, align 4
  %tmp112 = load i32, i32* %i, align 4
  %cmp176 = icmp ne i32 %tmp112, 0
  br i1 %cmp176, label %if.then178, label %if.end187

if.then178:                                       ; preds = %for.cond
  %tmp113 = load i8*, i8** %sep_boundary, align 8
  %cmp179 = icmp ne i8* %tmp113, null
  br i1 %cmp179, label %if.then181, label %if.end186

if.then181:                                       ; preds = %if.then178
  %tmp114 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool182 = icmp ne void (i8*)* %tmp114, null
  br i1 %tobool182, label %if.then183, label %if.else184

if.then183:                                       ; preds = %if.then181
  %tmp115 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp116 = load i8*, i8** %sep_boundary, align 8
  call void %tmp115(i8* %tmp116)
  br label %if.end185

if.else184:                                       ; preds = %if.then181
  %tmp117 = load i8*, i8** %sep_boundary, align 8
  call void @free(i8* %tmp117) #8
  br label %if.end185

if.end185:                                        ; preds = %if.else184, %if.then183
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then178
  %tmp118 = load i32, i32* %i, align 4
  store i32 %tmp118, i32* %retval
  br label %return

if.end187:                                        ; preds = %for.cond
  %tmp119 = load i8*, i8** %sep_boundary, align 8
  %tmp120 = load i8*, i8** %start_of_body, align 8
  %tmp121 = load i64, i64* %len_sep_boundary, align 8
  %add.ptr188 = getelementptr inbounds i8, i8* %tmp120, i64 %tmp121
  %tmp122 = load i8*, i8** %end_of_buf, align 8
  %call189 = call i32 @__osip_find_next_occurence(i8* %tmp119, i8* %add.ptr188, i8** %end_of_body, i8* %tmp122)
  store i32 %call189, i32* %i, align 4
  %tmp123 = load i32, i32* %i, align 4
  %cmp190 = icmp ne i32 %tmp123, 0
  br i1 %cmp190, label %if.then192, label %if.end201

if.then192:                                       ; preds = %if.end187
  %tmp124 = load i8*, i8** %sep_boundary, align 8
  %cmp193 = icmp ne i8* %tmp124, null
  br i1 %cmp193, label %if.then195, label %if.end200

if.then195:                                       ; preds = %if.then192
  %tmp125 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool196 = icmp ne void (i8*)* %tmp125, null
  br i1 %tobool196, label %if.then197, label %if.else198

if.then197:                                       ; preds = %if.then195
  %tmp126 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp127 = load i8*, i8** %sep_boundary, align 8
  call void %tmp126(i8* %tmp127)
  br label %if.end199

if.else198:                                       ; preds = %if.then195
  %tmp128 = load i8*, i8** %sep_boundary, align 8
  call void @free(i8* %tmp128) #8
  br label %if.end199

if.end199:                                        ; preds = %if.else198, %if.then197
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.then192
  %tmp129 = load i32, i32* %i, align 4
  store i32 %tmp129, i32* %retval
  br label %return

if.end201:                                        ; preds = %if.end187
  %tmp130 = load i8*, i8** %start_of_body, align 8
  %tmp131 = load i64, i64* %len_sep_boundary, align 8
  %add.ptr202 = getelementptr inbounds i8, i8* %tmp130, i64 %tmp131
  %add.ptr203 = getelementptr inbounds i8, i8* %add.ptr202, i64 1
  store i8* %add.ptr203, i8** %start_of_body, align 8
  %tmp132 = load i8*, i8** %start_of_body, align 8
  %arrayidx204 = getelementptr inbounds i8, i8* %tmp132, i64 0
  %tmp133 = load i8, i8* %arrayidx204, align 1
  %conv205 = sext i8 %tmp133 to i32
  %cmp206 = icmp eq i32 10, %conv205
  br i1 %cmp206, label %if.then213, label %lor.lhs.false208

lor.lhs.false208:                                 ; preds = %if.end201
  %tmp134 = load i8*, i8** %start_of_body, align 8
  %arrayidx209 = getelementptr inbounds i8, i8* %tmp134, i64 0
  %tmp135 = load i8, i8* %arrayidx209, align 1
  %conv210 = sext i8 %tmp135 to i32
  %cmp211 = icmp eq i32 13, %conv210
  br i1 %cmp211, label %if.then213, label %if.end214

if.then213:                                       ; preds = %lor.lhs.false208, %if.end201
  %tmp136 = load i8*, i8** %start_of_body, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp136, i32 1
  store i8* %incdec.ptr, i8** %start_of_body, align 8
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %lor.lhs.false208
  %tmp137 = load i8*, i8** %end_of_body, align 8
  %tmp138 = load i8*, i8** %start_of_body, align 8
  %sub.ptr.lhs.cast215 = ptrtoint i8* %tmp137 to i64
  %sub.ptr.rhs.cast216 = ptrtoint i8* %tmp138 to i64
  %sub.ptr.sub217 = sub i64 %sub.ptr.lhs.cast215, %sub.ptr.rhs.cast216
  store i64 %sub.ptr.sub217, i64* %body_len, align 8
  %tmp139 = load i8*, i8** %end_of_body, align 8
  %add.ptr218 = getelementptr inbounds i8, i8* %tmp139, i64 -1
  %tmp140 = load i8, i8* %add.ptr218, align 1
  %conv219 = sext i8 %tmp140 to i32
  %cmp220 = icmp eq i32 %conv219, 13
  br i1 %cmp220, label %if.then222, label %if.end223

if.then222:                                       ; preds = %if.end214
  %tmp141 = load i64, i64* %body_len, align 8
  %dec = add i64 %tmp141, -1
  store i64 %dec, i64* %body_len, align 8
  br label %if.end223

if.end223:                                        ; preds = %if.then222, %if.end214
  %tmp142 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool224 = icmp ne i8* (i64)* %tmp142, null
  br i1 %tobool224, label %cond.true225, label %cond.false228

cond.true225:                                     ; preds = %if.end223
  %tmp143 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp144 = load i64, i64* %body_len, align 8
  %add226 = add i64 %tmp144, 2
  %call227 = call i8* %tmp143(i64 %add226)
  br label %cond.end231

cond.false228:                                    ; preds = %if.end223
  %tmp145 = load i64, i64* %body_len, align 8
  %add229 = add i64 %tmp145, 2
  %call230 = call noalias i8* @malloc(i64 %add229) #8
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false228, %cond.true225
  %cond232 = phi i8* [ %call227, %cond.true225 ], [ %call230, %cond.false228 ]
  store i8* %cond232, i8** %tmp, align 8
  %tmp146 = load i8*, i8** %tmp, align 8
  %cmp233 = icmp eq i8* %tmp146, null
  br i1 %cmp233, label %if.then235, label %if.end244

if.then235:                                       ; preds = %cond.end231
  %tmp147 = load i8*, i8** %sep_boundary, align 8
  %cmp236 = icmp ne i8* %tmp147, null
  br i1 %cmp236, label %if.then238, label %if.end243

if.then238:                                       ; preds = %if.then235
  %tmp148 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool239 = icmp ne void (i8*)* %tmp148, null
  br i1 %tobool239, label %if.then240, label %if.else241

if.then240:                                       ; preds = %if.then238
  %tmp149 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp150 = load i8*, i8** %sep_boundary, align 8
  call void %tmp149(i8* %tmp150)
  br label %if.end242

if.else241:                                       ; preds = %if.then238
  %tmp151 = load i8*, i8** %sep_boundary, align 8
  call void @free(i8* %tmp151) #8
  br label %if.end242

if.end242:                                        ; preds = %if.else241, %if.then240
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then235
  store i32 -4, i32* %retval
  br label %return

if.end244:                                        ; preds = %cond.end231
  %tmp152 = load i8*, i8** %tmp, align 8
  %tmp153 = load i8*, i8** %start_of_body, align 8
  %tmp154 = load i64, i64* %body_len, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp152, i8* %tmp153, i64 %tmp154, i32 1, i1 false)
  %tmp155 = load i64, i64* %body_len, align 8
  %tmp156 = load i8*, i8** %tmp, align 8
  %arrayidx245 = getelementptr inbounds i8, i8* %tmp156, i64 %tmp155
  store i8 0, i8* %arrayidx245, align 1
  %tmp157 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp158 = load i8*, i8** %tmp, align 8
  %tmp159 = load i64, i64* %body_len, align 8
  %call246 = call i32 @osip_message_set_body_mime(%struct.osip_message* %tmp157, i8* %tmp158, i64 %tmp159)
  store i32 %call246, i32* %i, align 4
  %tmp160 = load i8*, i8** %tmp, align 8
  %cmp247 = icmp ne i8* %tmp160, null
  br i1 %cmp247, label %if.then249, label %if.end254

if.then249:                                       ; preds = %if.end244
  %tmp161 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool250 = icmp ne void (i8*)* %tmp161, null
  br i1 %tobool250, label %if.then251, label %if.else252

if.then251:                                       ; preds = %if.then249
  %tmp162 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp163 = load i8*, i8** %tmp, align 8
  call void %tmp162(i8* %tmp163)
  br label %if.end253

if.else252:                                       ; preds = %if.then249
  %tmp164 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp164) #8
  br label %if.end253

if.end253:                                        ; preds = %if.else252, %if.then251
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.end244
  %tmp165 = load i32, i32* %i, align 4
  %cmp255 = icmp ne i32 %tmp165, 0
  br i1 %cmp255, label %if.then257, label %if.end266

if.then257:                                       ; preds = %if.end254
  %tmp166 = load i8*, i8** %sep_boundary, align 8
  %cmp258 = icmp ne i8* %tmp166, null
  br i1 %cmp258, label %if.then260, label %if.end265

if.then260:                                       ; preds = %if.then257
  %tmp167 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool261 = icmp ne void (i8*)* %tmp167, null
  br i1 %tobool261, label %if.then262, label %if.else263

if.then262:                                       ; preds = %if.then260
  %tmp168 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp169 = load i8*, i8** %sep_boundary, align 8
  call void %tmp168(i8* %tmp169)
  br label %if.end264

if.else263:                                       ; preds = %if.then260
  %tmp170 = load i8*, i8** %sep_boundary, align 8
  call void @free(i8* %tmp170) #8
  br label %if.end264

if.end264:                                        ; preds = %if.else263, %if.then262
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.then257
  %tmp171 = load i32, i32* %i, align 4
  store i32 %tmp171, i32* %retval
  br label %return

if.end266:                                        ; preds = %if.end254
  %tmp172 = load i8*, i8** %end_of_body, align 8
  %tmp173 = load i64, i64* %len_sep_boundary, align 8
  %add.ptr267 = getelementptr inbounds i8, i8* %tmp172, i64 %tmp173
  %call268 = call i32 @strncmp(i8* %add.ptr267, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str79, i32 0, i32 0), i64 2) #7
  %cmp269 = icmp eq i32 %call268, 0
  br i1 %cmp269, label %if.then271, label %if.end280

if.then271:                                       ; preds = %if.end266
  %tmp174 = load i8*, i8** %end_of_body, align 8
  %tmp175 = load i8**, i8*** %next_body.addr, align 8
  store i8* %tmp174, i8** %tmp175, align 8
  %tmp176 = load i8*, i8** %sep_boundary, align 8
  %cmp272 = icmp ne i8* %tmp176, null
  br i1 %cmp272, label %if.then274, label %if.end279

if.then274:                                       ; preds = %if.then271
  %tmp177 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool275 = icmp ne void (i8*)* %tmp177, null
  br i1 %tobool275, label %if.then276, label %if.else277

if.then276:                                       ; preds = %if.then274
  %tmp178 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp179 = load i8*, i8** %sep_boundary, align 8
  call void %tmp178(i8* %tmp179)
  br label %if.end278

if.else277:                                       ; preds = %if.then274
  %tmp180 = load i8*, i8** %sep_boundary, align 8
  call void @free(i8* %tmp180) #8
  br label %if.end278

if.end278:                                        ; preds = %if.else277, %if.then276
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.then271
  store i32 0, i32* %retval
  br label %return

if.end280:                                        ; preds = %if.end266
  %tmp181 = load i8*, i8** %end_of_body, align 8
  store i8* %tmp181, i8** %start_of_body, align 8
  br label %for.cond

return:                                           ; preds = %if.end279, %if.end265, %if.end243, %if.end200, %if.end186, %if.then148, %if.then131, %if.then127, %if.then123, %if.end117, %if.then116, %if.then93, %do.end, %if.else74, %if.then72, %if.then43, %if.else38, %if.then17, %if.then
  %tmp182 = load i32, i32* %retval
  ret i32 %tmp182
}

; Function Attrs: nounwind uwtable
define internal i32 @msg_headers_parse(%struct.osip_message* %sip, i8* %start_of_header, i8** %body) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %start_of_header.addr = alloca i8*, align 8
  %body.addr = alloca i8**, align 8
  %colon_index = alloca i8*, align 8
  %hname = alloca i8*, align 8
  %hvalue = alloca i8*, align 8
  %end_of_header = alloca i8*, align 8
  %i = alloca i32, align 4
  %end = alloca i8*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %start_of_header, i8** %start_of_header.addr, align 8
  store i8** %body, i8*** %body.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end136, %entry
  %tmp = load i8*, i8** %start_of_header.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp, i64 0
  %tmp1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %for.cond
  %tmp2 = load i8*, i8** %start_of_header.addr, align 8
  %call = call i32 @__osip_find_next_crlf(i8* %tmp2, i8** %end_of_header)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp2 = icmp eq i32 %tmp3, -2
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  br label %if.end11

if.else:                                          ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  %cmp5 = icmp ne i32 %tmp4, 0
  br i1 %cmp5, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.else
  br label %do.body8

do.body8:                                         ; preds = %if.then7
  br label %do.end9

do.end9:                                          ; preds = %do.body8
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then4
  %tmp6 = load i8*, i8** %start_of_header.addr, align 8
  %arrayidx12 = getelementptr inbounds i8, i8* %tmp6, i64 0
  %tmp7 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %tmp7 to i32
  %cmp14 = icmp eq i32 %conv13, 13
  br i1 %cmp14, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end11
  %tmp8 = load i8*, i8** %start_of_header.addr, align 8
  %arrayidx16 = getelementptr inbounds i8, i8* %tmp8, i64 0
  %tmp9 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %tmp9 to i32
  %cmp18 = icmp eq i32 %conv17, 10
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %lor.lhs.false, %if.end11
  %tmp10 = load i8*, i8** %start_of_header.addr, align 8
  %tmp11 = load i8**, i8*** %body.addr, align 8
  store i8* %tmp10, i8** %tmp11, align 8
  store i32 0, i32* %retval
  br label %return

if.end21:                                         ; preds = %lor.lhs.false
  %tmp12 = load i8*, i8** %start_of_header.addr, align 8
  %call22 = call i8* @strchr(i8* %tmp12, i32 58) #7
  store i8* %call22, i8** %colon_index, align 8
  %tmp13 = load i8*, i8** %colon_index, align 8
  %cmp23 = icmp eq i8* %tmp13, null
  br i1 %cmp23, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end21
  br label %do.body26

do.body26:                                        ; preds = %if.then25
  br label %do.end27

do.end27:                                         ; preds = %do.body26
  store i32 -5, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.end21
  %tmp14 = load i8*, i8** %colon_index, align 8
  %tmp15 = load i8*, i8** %start_of_header.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp14 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp15 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp29 = icmp slt i64 %add, 2
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end28
  store i32 -5, i32* %retval
  br label %return

if.end32:                                         ; preds = %if.end28
  %tmp16 = load i8*, i8** %end_of_header, align 8
  %tmp17 = load i8*, i8** %colon_index, align 8
  %cmp33 = icmp ule i8* %tmp16, %tmp17
  br i1 %cmp33, label %if.then35, label %if.end38

if.then35:                                        ; preds = %if.end32
  br label %do.body36

do.body36:                                        ; preds = %if.then35
  br label %do.end37

do.end37:                                         ; preds = %do.body36
  store i32 -5, i32* %retval
  br label %return

if.end38:                                         ; preds = %if.end32
  %tmp18 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp18, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end38
  %tmp19 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp20 = load i8*, i8** %colon_index, align 8
  %tmp21 = load i8*, i8** %start_of_header.addr, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %add42 = add nsw i64 %sub.ptr.sub41, 1
  %call43 = call i8* %tmp19(i64 %add42)
  br label %cond.end

cond.false:                                       ; preds = %if.end38
  %tmp22 = load i8*, i8** %colon_index, align 8
  %tmp23 = load i8*, i8** %start_of_header.addr, align 8
  %sub.ptr.lhs.cast44 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.rhs.cast45 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  %add47 = add nsw i64 %sub.ptr.sub46, 1
  %call48 = call noalias i8* @malloc(i64 %add47) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call43, %cond.true ], [ %call48, %cond.false ]
  store i8* %cond, i8** %hname, align 8
  %tmp24 = load i8*, i8** %hname, align 8
  %cmp49 = icmp eq i8* %tmp24, null
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end52:                                         ; preds = %cond.end
  %tmp25 = load i8*, i8** %hname, align 8
  %tmp26 = load i8*, i8** %start_of_header.addr, align 8
  %tmp27 = load i8*, i8** %colon_index, align 8
  %tmp28 = load i8*, i8** %start_of_header.addr, align 8
  %sub.ptr.lhs.cast53 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.rhs.cast54 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.sub55 = sub i64 %sub.ptr.lhs.cast53, %sub.ptr.rhs.cast54
  %call56 = call i8* @osip_clrncpy(i8* %tmp25, i8* %tmp26, i64 %sub.ptr.sub55)
  %tmp29 = load i8*, i8** %end_of_header, align 8
  %arrayidx57 = getelementptr inbounds i8, i8* %tmp29, i64 -2
  %tmp30 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %tmp30 to i32
  %cmp59 = icmp eq i32 %conv58, 13
  br i1 %cmp59, label %if.then66, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %if.end52
  %tmp31 = load i8*, i8** %end_of_header, align 8
  %arrayidx62 = getelementptr inbounds i8, i8* %tmp31, i64 -2
  %tmp32 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %tmp32 to i32
  %cmp64 = icmp eq i32 %conv63, 10
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %lor.lhs.false61, %if.end52
  %tmp33 = load i8*, i8** %end_of_header, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp33, i64 -2
  store i8* %add.ptr, i8** %end, align 8
  br label %if.end69

if.else67:                                        ; preds = %lor.lhs.false61
  %tmp34 = load i8*, i8** %end_of_header, align 8
  %add.ptr68 = getelementptr inbounds i8, i8* %tmp34, i64 -1
  store i8* %add.ptr68, i8** %end, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then66
  %tmp35 = load i8*, i8** %end, align 8
  %tmp36 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast70 = ptrtoint i8* %tmp35 to i64
  %sub.ptr.rhs.cast71 = ptrtoint i8* %tmp36 to i64
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71
  %cmp73 = icmp slt i64 %sub.ptr.sub72, 2
  br i1 %cmp73, label %if.then75, label %if.else76

if.then75:                                        ; preds = %if.end69
  store i8* null, i8** %hvalue, align 8
  br label %if.end109

if.else76:                                        ; preds = %if.end69
  %tmp37 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool77 = icmp ne i8* (i64)* %tmp37, null
  br i1 %tobool77, label %cond.true78, label %cond.false84

cond.true78:                                      ; preds = %if.else76
  %tmp38 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp39 = load i8*, i8** %end, align 8
  %tmp40 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast79 = ptrtoint i8* %tmp39 to i64
  %sub.ptr.rhs.cast80 = ptrtoint i8* %tmp40 to i64
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80
  %add82 = add nsw i64 %sub.ptr.sub81, 1
  %call83 = call i8* %tmp38(i64 %add82)
  br label %cond.end90

cond.false84:                                     ; preds = %if.else76
  %tmp41 = load i8*, i8** %end, align 8
  %tmp42 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast85 = ptrtoint i8* %tmp41 to i64
  %sub.ptr.rhs.cast86 = ptrtoint i8* %tmp42 to i64
  %sub.ptr.sub87 = sub i64 %sub.ptr.lhs.cast85, %sub.ptr.rhs.cast86
  %add88 = add nsw i64 %sub.ptr.sub87, 1
  %call89 = call noalias i8* @malloc(i64 %add88) #8
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false84, %cond.true78
  %cond91 = phi i8* [ %call83, %cond.true78 ], [ %call89, %cond.false84 ]
  store i8* %cond91, i8** %hvalue, align 8
  %tmp43 = load i8*, i8** %hvalue, align 8
  %cmp92 = icmp eq i8* %tmp43, null
  br i1 %cmp92, label %if.then94, label %if.end103

if.then94:                                        ; preds = %cond.end90
  %tmp44 = load i8*, i8** %hname, align 8
  %cmp95 = icmp ne i8* %tmp44, null
  br i1 %cmp95, label %if.then97, label %if.end102

if.then97:                                        ; preds = %if.then94
  %tmp45 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool98 = icmp ne void (i8*)* %tmp45, null
  br i1 %tobool98, label %if.then99, label %if.else100

if.then99:                                        ; preds = %if.then97
  %tmp46 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp47 = load i8*, i8** %hname, align 8
  call void %tmp46(i8* %tmp47)
  br label %if.end101

if.else100:                                       ; preds = %if.then97
  %tmp48 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp48) #8
  br label %if.end101

if.end101:                                        ; preds = %if.else100, %if.then99
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then94
  store i32 -4, i32* %retval
  br label %return

if.end103:                                        ; preds = %cond.end90
  %tmp49 = load i8*, i8** %hvalue, align 8
  %tmp50 = load i8*, i8** %colon_index, align 8
  %add.ptr104 = getelementptr inbounds i8, i8* %tmp50, i64 1
  %tmp51 = load i8*, i8** %end, align 8
  %tmp52 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast105 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.rhs.cast106 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106
  %sub = sub nsw i64 %sub.ptr.sub107, 1
  %call108 = call i8* @osip_clrncpy(i8* %tmp49, i8* %add.ptr104, i64 %sub)
  br label %if.end109

if.end109:                                        ; preds = %if.end103, %if.then75
  %tmp53 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp54 = load i8*, i8** %hname, align 8
  %tmp55 = load i8*, i8** %hvalue, align 8
  %call110 = call i32 @osip_message_set_multiple_header(%struct.osip_message* %tmp53, i8* %tmp54, i8* %tmp55)
  store i32 %call110, i32* %i, align 4
  %tmp56 = load i8*, i8** %hname, align 8
  %cmp111 = icmp ne i8* %tmp56, null
  br i1 %cmp111, label %if.then113, label %if.end118

if.then113:                                       ; preds = %if.end109
  %tmp57 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool114 = icmp ne void (i8*)* %tmp57, null
  br i1 %tobool114, label %if.then115, label %if.else116

if.then115:                                       ; preds = %if.then113
  %tmp58 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp59 = load i8*, i8** %hname, align 8
  call void %tmp58(i8* %tmp59)
  br label %if.end117

if.else116:                                       ; preds = %if.then113
  %tmp60 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp60) #8
  br label %if.end117

if.end117:                                        ; preds = %if.else116, %if.then115
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end109
  %tmp61 = load i8*, i8** %hvalue, align 8
  %cmp119 = icmp ne i8* %tmp61, null
  br i1 %cmp119, label %if.then121, label %if.end130

if.then121:                                       ; preds = %if.end118
  %tmp62 = load i8*, i8** %hvalue, align 8
  %cmp122 = icmp ne i8* %tmp62, null
  br i1 %cmp122, label %if.then124, label %if.end129

if.then124:                                       ; preds = %if.then121
  %tmp63 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool125 = icmp ne void (i8*)* %tmp63, null
  br i1 %tobool125, label %if.then126, label %if.else127

if.then126:                                       ; preds = %if.then124
  %tmp64 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp65 = load i8*, i8** %hvalue, align 8
  call void %tmp64(i8* %tmp65)
  br label %if.end128

if.else127:                                       ; preds = %if.then124
  %tmp66 = load i8*, i8** %hvalue, align 8
  call void @free(i8* %tmp66) #8
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then126
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then121
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end118
  %tmp67 = load i32, i32* %i, align 4
  %cmp131 = icmp ne i32 %tmp67, 0
  br i1 %cmp131, label %if.then133, label %if.end136

if.then133:                                       ; preds = %if.end130
  br label %do.body134

do.body134:                                       ; preds = %if.then133
  br label %do.end135

do.end135:                                        ; preds = %do.body134
  store i32 -5, i32* %retval
  br label %return

if.end136:                                        ; preds = %if.end130
  %tmp68 = load i8*, i8** %end_of_header, align 8
  store i8* %tmp68, i8** %start_of_header.addr, align 8
  br label %for.cond

return:                                           ; preds = %do.end135, %if.end102, %if.then51, %do.end37, %if.then31, %do.end27, %if.then20, %do.end9, %do.end
  %tmp69 = load i32, i32* %retval
  ret i32 %tmp69
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_parse(%struct.osip_message* %dest, i8* %buf, i8** %headers) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %headers.addr = alloca i8**, align 8
  store %struct.osip_message* %dest, %struct.osip_message** %dest.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i8** %headers, i8*** %headers.addr, align 8
  %tmp = load i8*, i8** %buf.addr, align 8
  %call = call i32 @strncmp(i8* %tmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str80, i32 0, i32 0), i64 4) #7
  %cmp = icmp eq i32 0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %tmp2 = load i8*, i8** %buf.addr, align 8
  %tmp3 = load i8**, i8*** %headers.addr, align 8
  %call1 = call i32 @__osip_message_startline_parseresp(%struct.osip_message* %tmp1, i8* %tmp2, i8** %tmp3)
  store i32 %call1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %tmp5 = load i8*, i8** %buf.addr, align 8
  %tmp6 = load i8**, i8*** %headers.addr, align 8
  %call2 = call i32 @__osip_message_startline_parsereq(%struct.osip_message* %tmp4, i8* %tmp5, i8** %tmp6)
  store i32 %call2, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %tmp7 = load i32, i32* %retval
  ret i32 %tmp7
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_parsereq(%struct.osip_message* %dest, i8* %buf, i8** %headers) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %headers.addr = alloca i8**, align 8
  %p1 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %requesturi = alloca i8*, align 8
  %i = alloca i32, align 4
  %hp = alloca i8*, align 8
  store %struct.osip_message* %dest, %struct.osip_message** %dest.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i8** %headers, i8*** %headers.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 2
  store i8* null, i8** %sip_method, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 3
  store i32 0, i32* %status_code, align 4
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp2, i32 0, i32 4
  store i8* null, i8** %reason_phrase, align 8
  %tmp3 = load i8*, i8** %buf.addr, align 8
  %tmp4 = load i8**, i8*** %headers.addr, align 8
  store i8* %tmp3, i8** %tmp4, align 8
  %tmp5 = load i8*, i8** %buf.addr, align 8
  %call = call i8* @strchr(i8* %tmp5, i32 32) #7
  store i8* %call, i8** %p2, align 8
  %tmp6 = load i8*, i8** %p2, align 8
  %cmp = icmp eq i8* %tmp6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp7 = load i8*, i8** %p2, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp7, i64 1
  %tmp8 = load i8, i8* %add.ptr, align 1
  %conv = sext i8 %tmp8 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %tmp9 = load i8*, i8** %p2, align 8
  %add.ptr3 = getelementptr inbounds i8, i8* %tmp9, i64 2
  %tmp10 = load i8, i8* %add.ptr3, align 1
  %conv4 = sext i8 %tmp10 to i32
  %cmp5 = icmp eq i32 %conv4, 0
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -5, i32* %retval
  br label %return

if.end8:                                          ; preds = %lor.lhs.false
  %tmp11 = load i8*, i8** %p2, align 8
  %tmp12 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp9 = icmp eq i64 %sub.ptr.sub, 0
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end8
  br label %do.body

do.body:                                          ; preds = %if.then11
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -5, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.end8
  %tmp13 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp13, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end12
  %tmp14 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp15 = load i8*, i8** %p2, align 8
  %tmp16 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast13 = ptrtoint i8* %tmp15 to i64
  %sub.ptr.rhs.cast14 = ptrtoint i8* %tmp16 to i64
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14
  %add = add nsw i64 %sub.ptr.sub15, 1
  %call16 = call i8* %tmp14(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end12
  %tmp17 = load i8*, i8** %p2, align 8
  %tmp18 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i8* %tmp18 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %add20 = add nsw i64 %sub.ptr.sub19, 1
  %call21 = call noalias i8* @malloc(i64 %add20) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call16, %cond.true ], [ %call21, %cond.false ]
  %tmp19 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method22 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp19, i32 0, i32 2
  store i8* %cond, i8** %sip_method22, align 8
  %tmp20 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method23 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp20, i32 0, i32 2
  %tmp21 = load i8*, i8** %sip_method23, align 8
  %cmp24 = icmp eq i8* %tmp21, null
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end27:                                         ; preds = %cond.end
  %tmp22 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method28 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp22, i32 0, i32 2
  %tmp23 = load i8*, i8** %sip_method28, align 8
  %tmp24 = load i8*, i8** %buf.addr, align 8
  %tmp25 = load i8*, i8** %p2, align 8
  %tmp26 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast29 = ptrtoint i8* %tmp25 to i64
  %sub.ptr.rhs.cast30 = ptrtoint i8* %tmp26 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %call32 = call i8* @osip_strncpy(i8* %tmp23, i8* %tmp24, i64 %sub.ptr.sub31)
  %tmp27 = load i8*, i8** %p2, align 8
  %add.ptr33 = getelementptr inbounds i8, i8* %tmp27, i64 2
  %call34 = call i8* @strchr(i8* %add.ptr33, i32 32) #7
  store i8* %call34, i8** %p1, align 8
  %tmp28 = load i8*, i8** %p1, align 8
  %cmp35 = icmp eq i8* %tmp28, null
  br i1 %cmp35, label %if.then37, label %if.end51

if.then37:                                        ; preds = %if.end27
  br label %do.body38

do.body38:                                        ; preds = %if.then37
  br label %do.end39

do.end39:                                         ; preds = %do.body38
  %tmp29 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method40 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp29, i32 0, i32 2
  %tmp30 = load i8*, i8** %sip_method40, align 8
  %cmp41 = icmp ne i8* %tmp30, null
  br i1 %cmp41, label %if.then43, label %if.end49

if.then43:                                        ; preds = %do.end39
  %tmp31 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool44 = icmp ne void (i8*)* %tmp31, null
  br i1 %tobool44, label %if.then45, label %if.else

if.then45:                                        ; preds = %if.then43
  %tmp32 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp33 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method46 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp33, i32 0, i32 2
  %tmp34 = load i8*, i8** %sip_method46, align 8
  call void %tmp32(i8* %tmp34)
  br label %if.end48

if.else:                                          ; preds = %if.then43
  %tmp35 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method47 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp35, i32 0, i32 2
  %tmp36 = load i8*, i8** %sip_method47, align 8
  call void @free(i8* %tmp36) #8
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then45
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %do.end39
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method50 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 2
  store i8* null, i8** %sip_method50, align 8
  store i32 -5, i32* %retval
  br label %return

if.end51:                                         ; preds = %if.end27
  %tmp38 = load i8*, i8** %p1, align 8
  %tmp39 = load i8*, i8** %p2, align 8
  %sub.ptr.lhs.cast52 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.rhs.cast53 = ptrtoint i8* %tmp39 to i64
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53
  %cmp55 = icmp slt i64 %sub.ptr.sub54, 2
  br i1 %cmp55, label %if.then57, label %if.end70

if.then57:                                        ; preds = %if.end51
  %tmp40 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method58 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp40, i32 0, i32 2
  %tmp41 = load i8*, i8** %sip_method58, align 8
  %cmp59 = icmp ne i8* %tmp41, null
  br i1 %cmp59, label %if.then61, label %if.end68

if.then61:                                        ; preds = %if.then57
  %tmp42 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool62 = icmp ne void (i8*)* %tmp42, null
  br i1 %tobool62, label %if.then63, label %if.else65

if.then63:                                        ; preds = %if.then61
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp44 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method64 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp44, i32 0, i32 2
  %tmp45 = load i8*, i8** %sip_method64, align 8
  call void %tmp43(i8* %tmp45)
  br label %if.end67

if.else65:                                        ; preds = %if.then61
  %tmp46 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method66 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp46, i32 0, i32 2
  %tmp47 = load i8*, i8** %sip_method66, align 8
  call void @free(i8* %tmp47) #8
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then63
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then57
  %tmp48 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method69 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp48, i32 0, i32 2
  store i8* null, i8** %sip_method69, align 8
  store i32 -5, i32* %retval
  br label %return

if.end70:                                         ; preds = %if.end51
  %tmp49 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool71 = icmp ne i8* (i64)* %tmp49, null
  br i1 %tobool71, label %cond.true72, label %cond.false77

cond.true72:                                      ; preds = %if.end70
  %tmp50 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp51 = load i8*, i8** %p1, align 8
  %tmp52 = load i8*, i8** %p2, align 8
  %sub.ptr.lhs.cast73 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.rhs.cast74 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast73, %sub.ptr.rhs.cast74
  %call76 = call i8* %tmp50(i64 %sub.ptr.sub75)
  br label %cond.end82

cond.false77:                                     ; preds = %if.end70
  %tmp53 = load i8*, i8** %p1, align 8
  %tmp54 = load i8*, i8** %p2, align 8
  %sub.ptr.lhs.cast78 = ptrtoint i8* %tmp53 to i64
  %sub.ptr.rhs.cast79 = ptrtoint i8* %tmp54 to i64
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79
  %call81 = call noalias i8* @malloc(i64 %sub.ptr.sub80) #8
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false77, %cond.true72
  %cond83 = phi i8* [ %call76, %cond.true72 ], [ %call81, %cond.false77 ]
  store i8* %cond83, i8** %requesturi, align 8
  %tmp55 = load i8*, i8** %requesturi, align 8
  %cmp84 = icmp eq i8* %tmp55, null
  br i1 %cmp84, label %if.then86, label %if.end99

if.then86:                                        ; preds = %cond.end82
  %tmp56 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method87 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp56, i32 0, i32 2
  %tmp57 = load i8*, i8** %sip_method87, align 8
  %cmp88 = icmp ne i8* %tmp57, null
  br i1 %cmp88, label %if.then90, label %if.end97

if.then90:                                        ; preds = %if.then86
  %tmp58 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool91 = icmp ne void (i8*)* %tmp58, null
  br i1 %tobool91, label %if.then92, label %if.else94

if.then92:                                        ; preds = %if.then90
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp60 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method93 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp60, i32 0, i32 2
  %tmp61 = load i8*, i8** %sip_method93, align 8
  call void %tmp59(i8* %tmp61)
  br label %if.end96

if.else94:                                        ; preds = %if.then90
  %tmp62 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method95 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp62, i32 0, i32 2
  %tmp63 = load i8*, i8** %sip_method95, align 8
  call void @free(i8* %tmp63) #8
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then92
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then86
  %tmp64 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method98 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp64, i32 0, i32 2
  store i8* null, i8** %sip_method98, align 8
  store i32 -4, i32* %retval
  br label %return

if.end99:                                         ; preds = %cond.end82
  %tmp65 = load i8*, i8** %requesturi, align 8
  %tmp66 = load i8*, i8** %p2, align 8
  %add.ptr100 = getelementptr inbounds i8, i8* %tmp66, i64 1
  %tmp67 = load i8*, i8** %p1, align 8
  %tmp68 = load i8*, i8** %p2, align 8
  %sub.ptr.lhs.cast101 = ptrtoint i8* %tmp67 to i64
  %sub.ptr.rhs.cast102 = ptrtoint i8* %tmp68 to i64
  %sub.ptr.sub103 = sub i64 %sub.ptr.lhs.cast101, %sub.ptr.rhs.cast102
  %sub = sub nsw i64 %sub.ptr.sub103, 1
  %call104 = call i8* @osip_clrncpy(i8* %tmp65, i8* %add.ptr100, i64 %sub)
  %tmp69 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp69, i32 0, i32 1
  %call105 = call i32 @osip_uri_init(%struct.osip_uri** %req_uri)
  store i32 %call105, i32* %i, align 4
  %tmp70 = load i32, i32* %i, align 4
  %cmp106 = icmp ne i32 %tmp70, 0
  br i1 %cmp106, label %if.then108, label %if.end129

if.then108:                                       ; preds = %if.end99
  %tmp71 = load i8*, i8** %requesturi, align 8
  %cmp109 = icmp ne i8* %tmp71, null
  br i1 %cmp109, label %if.then111, label %if.end116

if.then111:                                       ; preds = %if.then108
  %tmp72 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool112 = icmp ne void (i8*)* %tmp72, null
  br i1 %tobool112, label %if.then113, label %if.else114

if.then113:                                       ; preds = %if.then111
  %tmp73 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp74 = load i8*, i8** %requesturi, align 8
  call void %tmp73(i8* %tmp74)
  br label %if.end115

if.else114:                                       ; preds = %if.then111
  %tmp75 = load i8*, i8** %requesturi, align 8
  call void @free(i8* %tmp75) #8
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %if.then113
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then108
  store i8* null, i8** %requesturi, align 8
  %tmp76 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method117 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp76, i32 0, i32 2
  %tmp77 = load i8*, i8** %sip_method117, align 8
  %cmp118 = icmp ne i8* %tmp77, null
  br i1 %cmp118, label %if.then120, label %if.end127

if.then120:                                       ; preds = %if.end116
  %tmp78 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool121 = icmp ne void (i8*)* %tmp78, null
  br i1 %tobool121, label %if.then122, label %if.else124

if.then122:                                       ; preds = %if.then120
  %tmp79 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp80 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method123 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp80, i32 0, i32 2
  %tmp81 = load i8*, i8** %sip_method123, align 8
  call void %tmp79(i8* %tmp81)
  br label %if.end126

if.else124:                                       ; preds = %if.then120
  %tmp82 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method125 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp82, i32 0, i32 2
  %tmp83 = load i8*, i8** %sip_method125, align 8
  call void @free(i8* %tmp83) #8
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then122
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end116
  %tmp84 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method128 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp84, i32 0, i32 2
  store i8* null, i8** %sip_method128, align 8
  store i32 -4, i32* %retval
  br label %return

if.end129:                                        ; preds = %if.end99
  %tmp85 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri130 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp85, i32 0, i32 1
  %tmp86 = load %struct.osip_uri*, %struct.osip_uri** %req_uri130, align 8
  %tmp87 = load i8*, i8** %requesturi, align 8
  %call131 = call i32 @osip_uri_parse(%struct.osip_uri* %tmp86, i8* %tmp87)
  store i32 %call131, i32* %i, align 4
  %tmp88 = load i8*, i8** %requesturi, align 8
  %cmp132 = icmp ne i8* %tmp88, null
  br i1 %cmp132, label %if.then134, label %if.end139

if.then134:                                       ; preds = %if.end129
  %tmp89 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool135 = icmp ne void (i8*)* %tmp89, null
  br i1 %tobool135, label %if.then136, label %if.else137

if.then136:                                       ; preds = %if.then134
  %tmp90 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp91 = load i8*, i8** %requesturi, align 8
  call void %tmp90(i8* %tmp91)
  br label %if.end138

if.else137:                                       ; preds = %if.then134
  %tmp92 = load i8*, i8** %requesturi, align 8
  call void @free(i8* %tmp92) #8
  br label %if.end138

if.end138:                                        ; preds = %if.else137, %if.then136
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.end129
  %tmp93 = load i32, i32* %i, align 4
  %cmp140 = icmp ne i32 %tmp93, 0
  br i1 %cmp140, label %if.then142, label %if.end157

if.then142:                                       ; preds = %if.end139
  %tmp94 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method143 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp94, i32 0, i32 2
  %tmp95 = load i8*, i8** %sip_method143, align 8
  %cmp144 = icmp ne i8* %tmp95, null
  br i1 %cmp144, label %if.then146, label %if.end153

if.then146:                                       ; preds = %if.then142
  %tmp96 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool147 = icmp ne void (i8*)* %tmp96, null
  br i1 %tobool147, label %if.then148, label %if.else150

if.then148:                                       ; preds = %if.then146
  %tmp97 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp98 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method149 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp98, i32 0, i32 2
  %tmp99 = load i8*, i8** %sip_method149, align 8
  call void %tmp97(i8* %tmp99)
  br label %if.end152

if.else150:                                       ; preds = %if.then146
  %tmp100 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method151 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp100, i32 0, i32 2
  %tmp101 = load i8*, i8** %sip_method151, align 8
  call void @free(i8* %tmp101) #8
  br label %if.end152

if.end152:                                        ; preds = %if.else150, %if.then148
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then142
  %tmp102 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method154 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp102, i32 0, i32 2
  store i8* null, i8** %sip_method154, align 8
  %tmp103 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri155 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp103, i32 0, i32 1
  %tmp104 = load %struct.osip_uri*, %struct.osip_uri** %req_uri155, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp104)
  %tmp105 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri156 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp105, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri156, align 8
  store i32 -5, i32* %retval
  br label %return

if.end157:                                        ; preds = %if.end139
  %tmp106 = load i8*, i8** %p1, align 8
  store i8* %tmp106, i8** %hp, align 8
  %tmp107 = load i8*, i8** %hp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp107, i32 1
  store i8* %incdec.ptr, i8** %hp, align 8
  %tmp108 = load i8*, i8** %hp, align 8
  %tmp109 = load i8, i8* %tmp108, align 1
  %conv158 = sext i8 %tmp109 to i32
  %cmp159 = icmp eq i32 %conv158, 0
  br i1 %cmp159, label %if.then191, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %if.end157
  %tmp110 = load i8*, i8** %hp, align 8
  %add.ptr162 = getelementptr inbounds i8, i8* %tmp110, i64 1
  %tmp111 = load i8, i8* %add.ptr162, align 1
  %conv163 = sext i8 %tmp111 to i32
  %cmp164 = icmp eq i32 %conv163, 0
  br i1 %cmp164, label %if.then191, label %lor.lhs.false166

lor.lhs.false166:                                 ; preds = %lor.lhs.false161
  %tmp112 = load i8*, i8** %hp, align 8
  %add.ptr167 = getelementptr inbounds i8, i8* %tmp112, i64 2
  %tmp113 = load i8, i8* %add.ptr167, align 1
  %conv168 = sext i8 %tmp113 to i32
  %cmp169 = icmp eq i32 %conv168, 0
  br i1 %cmp169, label %if.then191, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %lor.lhs.false166
  %tmp114 = load i8*, i8** %hp, align 8
  %add.ptr172 = getelementptr inbounds i8, i8* %tmp114, i64 3
  %tmp115 = load i8, i8* %add.ptr172, align 1
  %conv173 = sext i8 %tmp115 to i32
  %cmp174 = icmp eq i32 %conv173, 0
  br i1 %cmp174, label %if.then191, label %lor.lhs.false176

lor.lhs.false176:                                 ; preds = %lor.lhs.false171
  %tmp116 = load i8*, i8** %hp, align 8
  %add.ptr177 = getelementptr inbounds i8, i8* %tmp116, i64 4
  %tmp117 = load i8, i8* %add.ptr177, align 1
  %conv178 = sext i8 %tmp117 to i32
  %cmp179 = icmp eq i32 %conv178, 0
  br i1 %cmp179, label %if.then191, label %lor.lhs.false181

lor.lhs.false181:                                 ; preds = %lor.lhs.false176
  %tmp118 = load i8*, i8** %hp, align 8
  %add.ptr182 = getelementptr inbounds i8, i8* %tmp118, i64 5
  %tmp119 = load i8, i8* %add.ptr182, align 1
  %conv183 = sext i8 %tmp119 to i32
  %cmp184 = icmp eq i32 %conv183, 0
  br i1 %cmp184, label %if.then191, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %lor.lhs.false181
  %tmp120 = load i8*, i8** %hp, align 8
  %add.ptr187 = getelementptr inbounds i8, i8* %tmp120, i64 6
  %tmp121 = load i8, i8* %add.ptr187, align 1
  %conv188 = sext i8 %tmp121 to i32
  %cmp189 = icmp eq i32 %conv188, 0
  br i1 %cmp189, label %if.then191, label %if.end208

if.then191:                                       ; preds = %lor.lhs.false186, %lor.lhs.false181, %lor.lhs.false176, %lor.lhs.false171, %lor.lhs.false166, %lor.lhs.false161, %if.end157
  br label %do.body192

do.body192:                                       ; preds = %if.then191
  br label %do.end193

do.end193:                                        ; preds = %do.body192
  %tmp122 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method194 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp122, i32 0, i32 2
  %tmp123 = load i8*, i8** %sip_method194, align 8
  %cmp195 = icmp ne i8* %tmp123, null
  br i1 %cmp195, label %if.then197, label %if.end204

if.then197:                                       ; preds = %do.end193
  %tmp124 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool198 = icmp ne void (i8*)* %tmp124, null
  br i1 %tobool198, label %if.then199, label %if.else201

if.then199:                                       ; preds = %if.then197
  %tmp125 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp126 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method200 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp126, i32 0, i32 2
  %tmp127 = load i8*, i8** %sip_method200, align 8
  call void %tmp125(i8* %tmp127)
  br label %if.end203

if.else201:                                       ; preds = %if.then197
  %tmp128 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method202 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp128, i32 0, i32 2
  %tmp129 = load i8*, i8** %sip_method202, align 8
  call void @free(i8* %tmp129) #8
  br label %if.end203

if.end203:                                        ; preds = %if.else201, %if.then199
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %do.end193
  %tmp130 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method205 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp130, i32 0, i32 2
  store i8* null, i8** %sip_method205, align 8
  %tmp131 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri206 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp131, i32 0, i32 1
  %tmp132 = load %struct.osip_uri*, %struct.osip_uri** %req_uri206, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp132)
  %tmp133 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri207 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp133, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri207, align 8
  store i32 -5, i32* %retval
  br label %return

if.end208:                                        ; preds = %lor.lhs.false186
  %tmp134 = load i8*, i8** %hp, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp134, i64 0
  %tmp135 = load i8, i8* %arrayidx, align 1
  %conv209 = sext i8 %tmp135 to i32
  %cmp210 = icmp ne i32 %conv209, 83
  br i1 %cmp210, label %land.lhs.true, label %lor.lhs.false216

land.lhs.true:                                    ; preds = %if.end208
  %tmp136 = load i8*, i8** %hp, align 8
  %arrayidx212 = getelementptr inbounds i8, i8* %tmp136, i64 0
  %tmp137 = load i8, i8* %arrayidx212, align 1
  %conv213 = sext i8 %tmp137 to i32
  %cmp214 = icmp ne i32 %conv213, 115
  br i1 %cmp214, label %if.then241, label %lor.lhs.false216

lor.lhs.false216:                                 ; preds = %land.lhs.true, %if.end208
  %tmp138 = load i8*, i8** %hp, align 8
  %arrayidx217 = getelementptr inbounds i8, i8* %tmp138, i64 1
  %tmp139 = load i8, i8* %arrayidx217, align 1
  %conv218 = sext i8 %tmp139 to i32
  %cmp219 = icmp ne i32 %conv218, 73
  br i1 %cmp219, label %land.lhs.true221, label %lor.lhs.false226

land.lhs.true221:                                 ; preds = %lor.lhs.false216
  %tmp140 = load i8*, i8** %hp, align 8
  %arrayidx222 = getelementptr inbounds i8, i8* %tmp140, i64 1
  %tmp141 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %tmp141 to i32
  %cmp224 = icmp ne i32 %conv223, 105
  br i1 %cmp224, label %if.then241, label %lor.lhs.false226

lor.lhs.false226:                                 ; preds = %land.lhs.true221, %lor.lhs.false216
  %tmp142 = load i8*, i8** %hp, align 8
  %arrayidx227 = getelementptr inbounds i8, i8* %tmp142, i64 2
  %tmp143 = load i8, i8* %arrayidx227, align 1
  %conv228 = sext i8 %tmp143 to i32
  %cmp229 = icmp ne i32 %conv228, 80
  br i1 %cmp229, label %land.lhs.true231, label %lor.lhs.false236

land.lhs.true231:                                 ; preds = %lor.lhs.false226
  %tmp144 = load i8*, i8** %hp, align 8
  %arrayidx232 = getelementptr inbounds i8, i8* %tmp144, i64 2
  %tmp145 = load i8, i8* %arrayidx232, align 1
  %conv233 = sext i8 %tmp145 to i32
  %cmp234 = icmp ne i32 %conv233, 112
  br i1 %cmp234, label %if.then241, label %lor.lhs.false236

lor.lhs.false236:                                 ; preds = %land.lhs.true231, %lor.lhs.false226
  %tmp146 = load i8*, i8** %hp, align 8
  %arrayidx237 = getelementptr inbounds i8, i8* %tmp146, i64 3
  %tmp147 = load i8, i8* %arrayidx237, align 1
  %conv238 = sext i8 %tmp147 to i32
  %cmp239 = icmp ne i32 %conv238, 47
  br i1 %cmp239, label %if.then241, label %if.end258

if.then241:                                       ; preds = %lor.lhs.false236, %land.lhs.true231, %land.lhs.true221, %land.lhs.true
  br label %do.body242

do.body242:                                       ; preds = %if.then241
  br label %do.end243

do.end243:                                        ; preds = %do.body242
  %tmp148 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method244 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp148, i32 0, i32 2
  %tmp149 = load i8*, i8** %sip_method244, align 8
  %cmp245 = icmp ne i8* %tmp149, null
  br i1 %cmp245, label %if.then247, label %if.end254

if.then247:                                       ; preds = %do.end243
  %tmp150 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool248 = icmp ne void (i8*)* %tmp150, null
  br i1 %tobool248, label %if.then249, label %if.else251

if.then249:                                       ; preds = %if.then247
  %tmp151 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp152 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method250 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp152, i32 0, i32 2
  %tmp153 = load i8*, i8** %sip_method250, align 8
  call void %tmp151(i8* %tmp153)
  br label %if.end253

if.else251:                                       ; preds = %if.then247
  %tmp154 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method252 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp154, i32 0, i32 2
  %tmp155 = load i8*, i8** %sip_method252, align 8
  call void @free(i8* %tmp155) #8
  br label %if.end253

if.end253:                                        ; preds = %if.else251, %if.then249
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %do.end243
  %tmp156 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method255 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp156, i32 0, i32 2
  store i8* null, i8** %sip_method255, align 8
  %tmp157 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri256 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp157, i32 0, i32 1
  %tmp158 = load %struct.osip_uri*, %struct.osip_uri** %req_uri256, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp158)
  %tmp159 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri257 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp159, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri257, align 8
  store i32 -5, i32* %retval
  br label %return

if.end258:                                        ; preds = %lor.lhs.false236
  %tmp160 = load i8*, i8** %hp, align 8
  %add.ptr259 = getelementptr inbounds i8, i8* %tmp160, i64 4
  store i8* %add.ptr259, i8** %hp, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end319, %if.end258
  %tmp161 = load i8*, i8** %hp, align 8
  %tmp162 = load i8, i8* %tmp161, align 1
  %conv260 = sext i8 %tmp162 to i32
  %cmp261 = icmp ne i32 %conv260, 13
  br i1 %cmp261, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %tmp163 = load i8*, i8** %hp, align 8
  %tmp164 = load i8, i8* %tmp163, align 1
  %conv263 = sext i8 %tmp164 to i32
  %cmp264 = icmp ne i32 %conv263, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp165 = phi i1 [ false, %while.cond ], [ %cmp264, %land.rhs ]
  br i1 %tmp165, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp166 = load i8*, i8** %hp, align 8
  %tmp167 = load i8, i8* %tmp166, align 1
  %tobool266 = icmp ne i8 %tmp167, 0
  br i1 %tobool266, label %if.then267, label %if.else302

if.then267:                                       ; preds = %while.body
  %tmp168 = load i8*, i8** %hp, align 8
  %tmp169 = load i8, i8* %tmp168, align 1
  %conv268 = sext i8 %tmp169 to i32
  %cmp269 = icmp sge i32 %conv268, 48
  br i1 %cmp269, label %land.lhs.true271, label %if.else277

land.lhs.true271:                                 ; preds = %if.then267
  %tmp170 = load i8*, i8** %hp, align 8
  %tmp171 = load i8, i8* %tmp170, align 1
  %conv272 = sext i8 %tmp171 to i32
  %cmp273 = icmp sle i32 %conv272, 57
  br i1 %cmp273, label %if.then275, label %if.else277

if.then275:                                       ; preds = %land.lhs.true271
  %tmp172 = load i8*, i8** %hp, align 8
  %incdec.ptr276 = getelementptr inbounds i8, i8* %tmp172, i32 1
  store i8* %incdec.ptr276, i8** %hp, align 8
  br label %if.end301

if.else277:                                       ; preds = %land.lhs.true271, %if.then267
  %tmp173 = load i8*, i8** %hp, align 8
  %tmp174 = load i8, i8* %tmp173, align 1
  %conv278 = sext i8 %tmp174 to i32
  %cmp279 = icmp eq i32 %conv278, 46
  br i1 %cmp279, label %if.then281, label %if.else283

if.then281:                                       ; preds = %if.else277
  %tmp175 = load i8*, i8** %hp, align 8
  %incdec.ptr282 = getelementptr inbounds i8, i8* %tmp175, i32 1
  store i8* %incdec.ptr282, i8** %hp, align 8
  br label %if.end300

if.else283:                                       ; preds = %if.else277
  br label %do.body284

do.body284:                                       ; preds = %if.else283
  br label %do.end285

do.end285:                                        ; preds = %do.body284
  %tmp176 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method286 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp176, i32 0, i32 2
  %tmp177 = load i8*, i8** %sip_method286, align 8
  %cmp287 = icmp ne i8* %tmp177, null
  br i1 %cmp287, label %if.then289, label %if.end296

if.then289:                                       ; preds = %do.end285
  %tmp178 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool290 = icmp ne void (i8*)* %tmp178, null
  br i1 %tobool290, label %if.then291, label %if.else293

if.then291:                                       ; preds = %if.then289
  %tmp179 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp180 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method292 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp180, i32 0, i32 2
  %tmp181 = load i8*, i8** %sip_method292, align 8
  call void %tmp179(i8* %tmp181)
  br label %if.end295

if.else293:                                       ; preds = %if.then289
  %tmp182 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method294 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp182, i32 0, i32 2
  %tmp183 = load i8*, i8** %sip_method294, align 8
  call void @free(i8* %tmp183) #8
  br label %if.end295

if.end295:                                        ; preds = %if.else293, %if.then291
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %do.end285
  %tmp184 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method297 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp184, i32 0, i32 2
  store i8* null, i8** %sip_method297, align 8
  %tmp185 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri298 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp185, i32 0, i32 1
  %tmp186 = load %struct.osip_uri*, %struct.osip_uri** %req_uri298, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp186)
  %tmp187 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri299 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp187, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri299, align 8
  store i32 -5, i32* %retval
  br label %return

if.end300:                                        ; preds = %if.then281
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.then275
  br label %if.end319

if.else302:                                       ; preds = %while.body
  br label %do.body303

do.body303:                                       ; preds = %if.else302
  br label %do.end304

do.end304:                                        ; preds = %do.body303
  %tmp188 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method305 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp188, i32 0, i32 2
  %tmp189 = load i8*, i8** %sip_method305, align 8
  %cmp306 = icmp ne i8* %tmp189, null
  br i1 %cmp306, label %if.then308, label %if.end315

if.then308:                                       ; preds = %do.end304
  %tmp190 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool309 = icmp ne void (i8*)* %tmp190, null
  br i1 %tobool309, label %if.then310, label %if.else312

if.then310:                                       ; preds = %if.then308
  %tmp191 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp192 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method311 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp192, i32 0, i32 2
  %tmp193 = load i8*, i8** %sip_method311, align 8
  call void %tmp191(i8* %tmp193)
  br label %if.end314

if.else312:                                       ; preds = %if.then308
  %tmp194 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method313 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp194, i32 0, i32 2
  %tmp195 = load i8*, i8** %sip_method313, align 8
  call void @free(i8* %tmp195) #8
  br label %if.end314

if.end314:                                        ; preds = %if.else312, %if.then310
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %do.end304
  %tmp196 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method316 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp196, i32 0, i32 2
  store i8* null, i8** %sip_method316, align 8
  %tmp197 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri317 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp197, i32 0, i32 1
  %tmp198 = load %struct.osip_uri*, %struct.osip_uri** %req_uri317, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp198)
  %tmp199 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri318 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp199, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri318, align 8
  store i32 -5, i32* %retval
  br label %return

if.end319:                                        ; preds = %if.end301
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp200 = load i8*, i8** %hp, align 8
  %tmp201 = load i8*, i8** %p1, align 8
  %sub.ptr.lhs.cast320 = ptrtoint i8* %tmp200 to i64
  %sub.ptr.rhs.cast321 = ptrtoint i8* %tmp201 to i64
  %sub.ptr.sub322 = sub i64 %sub.ptr.lhs.cast320, %sub.ptr.rhs.cast321
  %cmp323 = icmp slt i64 %sub.ptr.sub322, 2
  br i1 %cmp323, label %if.then325, label %if.end340

if.then325:                                       ; preds = %while.end
  %tmp202 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method326 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp202, i32 0, i32 2
  %tmp203 = load i8*, i8** %sip_method326, align 8
  %cmp327 = icmp ne i8* %tmp203, null
  br i1 %cmp327, label %if.then329, label %if.end336

if.then329:                                       ; preds = %if.then325
  %tmp204 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool330 = icmp ne void (i8*)* %tmp204, null
  br i1 %tobool330, label %if.then331, label %if.else333

if.then331:                                       ; preds = %if.then329
  %tmp205 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp206 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method332 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp206, i32 0, i32 2
  %tmp207 = load i8*, i8** %sip_method332, align 8
  call void %tmp205(i8* %tmp207)
  br label %if.end335

if.else333:                                       ; preds = %if.then329
  %tmp208 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method334 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp208, i32 0, i32 2
  %tmp209 = load i8*, i8** %sip_method334, align 8
  call void @free(i8* %tmp209) #8
  br label %if.end335

if.end335:                                        ; preds = %if.else333, %if.then331
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.then325
  %tmp210 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method337 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp210, i32 0, i32 2
  store i8* null, i8** %sip_method337, align 8
  %tmp211 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri338 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp211, i32 0, i32 1
  %tmp212 = load %struct.osip_uri*, %struct.osip_uri** %req_uri338, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp212)
  %tmp213 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri339 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp213, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri339, align 8
  store i32 -5, i32* %retval
  br label %return

if.end340:                                        ; preds = %while.end
  %tmp214 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool341 = icmp ne i8* (i64)* %tmp214, null
  br i1 %tobool341, label %cond.true342, label %cond.false347

cond.true342:                                     ; preds = %if.end340
  %tmp215 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp216 = load i8*, i8** %hp, align 8
  %tmp217 = load i8*, i8** %p1, align 8
  %sub.ptr.lhs.cast343 = ptrtoint i8* %tmp216 to i64
  %sub.ptr.rhs.cast344 = ptrtoint i8* %tmp217 to i64
  %sub.ptr.sub345 = sub i64 %sub.ptr.lhs.cast343, %sub.ptr.rhs.cast344
  %call346 = call i8* %tmp215(i64 %sub.ptr.sub345)
  br label %cond.end352

cond.false347:                                    ; preds = %if.end340
  %tmp218 = load i8*, i8** %hp, align 8
  %tmp219 = load i8*, i8** %p1, align 8
  %sub.ptr.lhs.cast348 = ptrtoint i8* %tmp218 to i64
  %sub.ptr.rhs.cast349 = ptrtoint i8* %tmp219 to i64
  %sub.ptr.sub350 = sub i64 %sub.ptr.lhs.cast348, %sub.ptr.rhs.cast349
  %call351 = call noalias i8* @malloc(i64 %sub.ptr.sub350) #8
  br label %cond.end352

cond.end352:                                      ; preds = %cond.false347, %cond.true342
  %cond353 = phi i8* [ %call346, %cond.true342 ], [ %call351, %cond.false347 ]
  %tmp220 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp220, i32 0, i32 0
  store i8* %cond353, i8** %sip_version, align 8
  %tmp221 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version354 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp221, i32 0, i32 0
  %tmp222 = load i8*, i8** %sip_version354, align 8
  %cmp355 = icmp eq i8* %tmp222, null
  br i1 %cmp355, label %if.then357, label %if.end372

if.then357:                                       ; preds = %cond.end352
  %tmp223 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method358 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp223, i32 0, i32 2
  %tmp224 = load i8*, i8** %sip_method358, align 8
  %cmp359 = icmp ne i8* %tmp224, null
  br i1 %cmp359, label %if.then361, label %if.end368

if.then361:                                       ; preds = %if.then357
  %tmp225 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool362 = icmp ne void (i8*)* %tmp225, null
  br i1 %tobool362, label %if.then363, label %if.else365

if.then363:                                       ; preds = %if.then361
  %tmp226 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp227 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method364 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp227, i32 0, i32 2
  %tmp228 = load i8*, i8** %sip_method364, align 8
  call void %tmp226(i8* %tmp228)
  br label %if.end367

if.else365:                                       ; preds = %if.then361
  %tmp229 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method366 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp229, i32 0, i32 2
  %tmp230 = load i8*, i8** %sip_method366, align 8
  call void @free(i8* %tmp230) #8
  br label %if.end367

if.end367:                                        ; preds = %if.else365, %if.then363
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then357
  %tmp231 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method369 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp231, i32 0, i32 2
  store i8* null, i8** %sip_method369, align 8
  %tmp232 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri370 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp232, i32 0, i32 1
  %tmp233 = load %struct.osip_uri*, %struct.osip_uri** %req_uri370, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp233)
  %tmp234 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri371 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp234, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri371, align 8
  store i32 -4, i32* %retval
  br label %return

if.end372:                                        ; preds = %cond.end352
  %tmp235 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version373 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp235, i32 0, i32 0
  %tmp236 = load i8*, i8** %sip_version373, align 8
  %tmp237 = load i8*, i8** %p1, align 8
  %add.ptr374 = getelementptr inbounds i8, i8* %tmp237, i64 1
  %tmp238 = load i8*, i8** %hp, align 8
  %tmp239 = load i8*, i8** %p1, align 8
  %sub.ptr.lhs.cast375 = ptrtoint i8* %tmp238 to i64
  %sub.ptr.rhs.cast376 = ptrtoint i8* %tmp239 to i64
  %sub.ptr.sub377 = sub i64 %sub.ptr.lhs.cast375, %sub.ptr.rhs.cast376
  %sub378 = sub nsw i64 %sub.ptr.sub377, 1
  %call379 = call i8* @osip_strncpy(i8* %tmp236, i8* %add.ptr374, i64 %sub378)
  %tmp240 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version380 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp240, i32 0, i32 0
  %tmp241 = load i8*, i8** %sip_version380, align 8
  %call381 = call i32 @osip_strcasecmp(i8* %tmp241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str81, i32 0, i32 0))
  %cmp382 = icmp ne i32 0, %call381
  br i1 %cmp382, label %if.then384, label %if.end387

if.then384:                                       ; preds = %if.end372
  br label %do.body385

do.body385:                                       ; preds = %if.then384
  br label %do.end386

do.end386:                                        ; preds = %do.body385
  br label %if.end387

if.end387:                                        ; preds = %do.end386, %if.end372
  %tmp242 = load i8*, i8** %hp, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %tmp242, i32 1
  store i8* %incdec.ptr388, i8** %hp, align 8
  %tmp243 = load i8*, i8** %hp, align 8
  %tmp244 = load i8, i8* %tmp243, align 1
  %conv389 = sext i8 %tmp244 to i32
  %tobool390 = icmp ne i32 %conv389, 0
  br i1 %tobool390, label %land.lhs.true391, label %if.end403

land.lhs.true391:                                 ; preds = %if.end387
  %tmp245 = load i8*, i8** %hp, align 8
  %arrayidx392 = getelementptr inbounds i8, i8* %tmp245, i64 -1
  %tmp246 = load i8, i8* %arrayidx392, align 1
  %conv393 = sext i8 %tmp246 to i32
  %cmp394 = icmp eq i32 13, %conv393
  br i1 %cmp394, label %land.lhs.true396, label %if.end403

land.lhs.true396:                                 ; preds = %land.lhs.true391
  %tmp247 = load i8*, i8** %hp, align 8
  %arrayidx397 = getelementptr inbounds i8, i8* %tmp247, i64 0
  %tmp248 = load i8, i8* %arrayidx397, align 1
  %conv398 = sext i8 %tmp248 to i32
  %cmp399 = icmp eq i32 10, %conv398
  br i1 %cmp399, label %if.then401, label %if.end403

if.then401:                                       ; preds = %land.lhs.true396
  %tmp249 = load i8*, i8** %hp, align 8
  %incdec.ptr402 = getelementptr inbounds i8, i8* %tmp249, i32 1
  store i8* %incdec.ptr402, i8** %hp, align 8
  br label %if.end403

if.end403:                                        ; preds = %if.then401, %land.lhs.true396, %land.lhs.true391, %if.end387
  %tmp250 = load i8*, i8** %hp, align 8
  %tmp251 = load i8**, i8*** %headers.addr, align 8
  store i8* %tmp250, i8** %tmp251, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end403, %if.end368, %if.end336, %if.end315, %if.end296, %if.end254, %if.end204, %if.end153, %if.end127, %if.end97, %if.end68, %if.end49, %if.then26, %do.end, %if.then7, %if.then
  %tmp252 = load i32, i32* %retval
  ret i32 %tmp252
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_parseresp(%struct.osip_message* %dest, i8* %buf, i8** %headers) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %headers.addr = alloca i8**, align 8
  %statuscode = alloca i8*, align 8
  %reasonphrase = alloca i8*, align 8
  %hp = alloca i8*, align 8
  store %struct.osip_message* %dest, %struct.osip_message** %dest.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i8** %headers, i8*** %headers.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %req_uri, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 2
  store i8* null, i8** %sip_method, align 8
  %tmp2 = load i8*, i8** %buf.addr, align 8
  %tmp3 = load i8**, i8*** %headers.addr, align 8
  store i8* %tmp2, i8** %tmp3, align 8
  %tmp4 = load i8*, i8** %buf.addr, align 8
  %call = call i8* @strchr(i8* %tmp4, i32 32) #7
  store i8* %call, i8** %statuscode, align 8
  %tmp5 = load i8*, i8** %statuscode, align 8
  %cmp = icmp eq i8* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp6, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp8 = load i8*, i8** %statuscode, align 8
  %tmp9 = load i8**, i8*** %headers.addr, align 8
  %tmp10 = load i8*, i8** %tmp9, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %call1 = call i8* %tmp7(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp11 = load i8*, i8** %statuscode, align 8
  %tmp12 = load i8**, i8*** %headers.addr, align 8
  %tmp13 = load i8*, i8** %tmp12, align 8
  %sub.ptr.lhs.cast2 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast3 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub4 = sub i64 %sub.ptr.lhs.cast2, %sub.ptr.rhs.cast3
  %add5 = add nsw i64 %sub.ptr.sub4, 1
  %call6 = call noalias i8* @malloc(i64 %add5) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call6, %cond.false ]
  %tmp14 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp14, i32 0, i32 0
  store i8* %cond, i8** %sip_version, align 8
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %sip_version7, align 8
  %cmp8 = icmp eq i8* %tmp16, null
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end10:                                         ; preds = %cond.end
  %tmp17 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version11 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %sip_version11, align 8
  %tmp19 = load i8**, i8*** %headers.addr, align 8
  %tmp20 = load i8*, i8** %tmp19, align 8
  %tmp21 = load i8*, i8** %statuscode, align 8
  %tmp22 = load i8**, i8*** %headers.addr, align 8
  %tmp23 = load i8*, i8** %tmp22, align 8
  %sub.ptr.lhs.cast12 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.rhs.cast13 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13
  %call15 = call i8* @osip_strncpy(i8* %tmp18, i8* %tmp20, i64 %sub.ptr.sub14)
  %tmp24 = load i8*, i8** %statuscode, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp24, i64 1
  %call16 = call i8* @strchr(i8* %add.ptr, i32 32) #7
  store i8* %call16, i8** %reasonphrase, align 8
  %tmp25 = load i8*, i8** %reasonphrase, align 8
  %cmp17 = icmp eq i8* %tmp25, null
  br i1 %cmp17, label %if.then18, label %if.end29

if.then18:                                        ; preds = %if.end10
  %tmp26 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version19 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %sip_version19, align 8
  %cmp20 = icmp ne i8* %tmp27, null
  br i1 %cmp20, label %if.then21, label %if.end27

if.then21:                                        ; preds = %if.then18
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool22 = icmp ne void (i8*)* %tmp28, null
  br i1 %tobool22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then21
  %tmp29 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version24 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp30, i32 0, i32 0
  %tmp31 = load i8*, i8** %sip_version24, align 8
  call void %tmp29(i8* %tmp31)
  br label %if.end26

if.else:                                          ; preds = %if.then21
  %tmp32 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version25 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp32, i32 0, i32 0
  %tmp33 = load i8*, i8** %sip_version25, align 8
  call void @free(i8* %tmp33) #8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then23
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then18
  %tmp34 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version28 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp34, i32 0, i32 0
  store i8* null, i8** %sip_version28, align 8
  store i32 -5, i32* %retval
  br label %return

if.end29:                                         ; preds = %if.end10
  %tmp35 = load i8*, i8** %statuscode, align 8
  %add.ptr30 = getelementptr inbounds i8, i8* %tmp35, i64 1
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp36, i32 0, i32 3
  %call31 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str82, i32 0, i32 0), i32* %status_code) #8
  %cmp32 = icmp ne i32 %call31, 1
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end29
  store i32 -5, i32* %retval
  br label %return

if.end34:                                         ; preds = %if.end29
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %status_code35 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 3
  %tmp38 = load i32, i32* %status_code35, align 4
  %cmp36 = icmp eq i32 %tmp38, 0
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end34
  store i32 -5, i32* %retval
  br label %return

if.end38:                                         ; preds = %if.end34
  %tmp39 = load i8*, i8** %reasonphrase, align 8
  store i8* %tmp39, i8** %hp, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end47, %if.end38
  %tmp40 = load i8*, i8** %hp, align 8
  %tmp41 = load i8, i8* %tmp40, align 1
  %conv = sext i8 %tmp41 to i32
  %cmp39 = icmp ne i32 %conv, 13
  br i1 %cmp39, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %tmp42 = load i8*, i8** %hp, align 8
  %tmp43 = load i8, i8* %tmp42, align 1
  %conv41 = sext i8 %tmp43 to i32
  %cmp42 = icmp ne i32 %conv41, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp44 = phi i1 [ false, %while.cond ], [ %cmp42, %land.rhs ]
  br i1 %tmp44, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp45 = load i8*, i8** %hp, align 8
  %tmp46 = load i8, i8* %tmp45, align 1
  %tobool44 = icmp ne i8 %tmp46, 0
  br i1 %tobool44, label %if.then45, label %if.else46

if.then45:                                        ; preds = %while.body
  %tmp47 = load i8*, i8** %hp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp47, i32 1
  store i8* %incdec.ptr, i8** %hp, align 8
  br label %if.end47

if.else46:                                        ; preds = %while.body
  br label %do.body

do.body:                                          ; preds = %if.else46
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -5, i32* %retval
  br label %return

if.end47:                                         ; preds = %if.then45
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp48 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool48 = icmp ne i8* (i64)* %tmp48, null
  br i1 %tobool48, label %cond.true49, label %cond.false54

cond.true49:                                      ; preds = %while.end
  %tmp49 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp50 = load i8*, i8** %hp, align 8
  %tmp51 = load i8*, i8** %reasonphrase, align 8
  %sub.ptr.lhs.cast50 = ptrtoint i8* %tmp50 to i64
  %sub.ptr.rhs.cast51 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51
  %call53 = call i8* %tmp49(i64 %sub.ptr.sub52)
  br label %cond.end59

cond.false54:                                     ; preds = %while.end
  %tmp52 = load i8*, i8** %hp, align 8
  %tmp53 = load i8*, i8** %reasonphrase, align 8
  %sub.ptr.lhs.cast55 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.rhs.cast56 = ptrtoint i8* %tmp53 to i64
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56
  %call58 = call noalias i8* @malloc(i64 %sub.ptr.sub57) #8
  br label %cond.end59

cond.end59:                                       ; preds = %cond.false54, %cond.true49
  %cond60 = phi i8* [ %call53, %cond.true49 ], [ %call58, %cond.false54 ]
  %tmp54 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp54, i32 0, i32 4
  store i8* %cond60, i8** %reason_phrase, align 8
  %tmp55 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %reason_phrase61 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp55, i32 0, i32 4
  %tmp56 = load i8*, i8** %reason_phrase61, align 8
  %cmp62 = icmp eq i8* %tmp56, null
  br i1 %cmp62, label %if.then64, label %if.end77

if.then64:                                        ; preds = %cond.end59
  %tmp57 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version65 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp57, i32 0, i32 0
  %tmp58 = load i8*, i8** %sip_version65, align 8
  %cmp66 = icmp ne i8* %tmp58, null
  br i1 %cmp66, label %if.then68, label %if.end75

if.then68:                                        ; preds = %if.then64
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool69 = icmp ne void (i8*)* %tmp59, null
  br i1 %tobool69, label %if.then70, label %if.else72

if.then70:                                        ; preds = %if.then68
  %tmp60 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp61 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version71 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp61, i32 0, i32 0
  %tmp62 = load i8*, i8** %sip_version71, align 8
  call void %tmp60(i8* %tmp62)
  br label %if.end74

if.else72:                                        ; preds = %if.then68
  %tmp63 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version73 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp63, i32 0, i32 0
  %tmp64 = load i8*, i8** %sip_version73, align 8
  call void @free(i8* %tmp64) #8
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then64
  %tmp65 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %sip_version76 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp65, i32 0, i32 0
  store i8* null, i8** %sip_version76, align 8
  store i32 -4, i32* %retval
  br label %return

if.end77:                                         ; preds = %cond.end59
  %tmp66 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %reason_phrase78 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp66, i32 0, i32 4
  %tmp67 = load i8*, i8** %reason_phrase78, align 8
  %tmp68 = load i8*, i8** %reasonphrase, align 8
  %add.ptr79 = getelementptr inbounds i8, i8* %tmp68, i64 1
  %tmp69 = load i8*, i8** %hp, align 8
  %tmp70 = load i8*, i8** %reasonphrase, align 8
  %sub.ptr.lhs.cast80 = ptrtoint i8* %tmp69 to i64
  %sub.ptr.rhs.cast81 = ptrtoint i8* %tmp70 to i64
  %sub.ptr.sub82 = sub i64 %sub.ptr.lhs.cast80, %sub.ptr.rhs.cast81
  %sub = sub nsw i64 %sub.ptr.sub82, 1
  %call83 = call i8* @osip_strncpy(i8* %tmp67, i8* %add.ptr79, i64 %sub)
  %tmp71 = load i8*, i8** %hp, align 8
  %incdec.ptr84 = getelementptr inbounds i8, i8* %tmp71, i32 1
  store i8* %incdec.ptr84, i8** %hp, align 8
  %tmp72 = load i8*, i8** %hp, align 8
  %tmp73 = load i8, i8* %tmp72, align 1
  %conv85 = sext i8 %tmp73 to i32
  %tobool86 = icmp ne i32 %conv85, 0
  br i1 %tobool86, label %land.lhs.true, label %if.end97

land.lhs.true:                                    ; preds = %if.end77
  %tmp74 = load i8*, i8** %hp, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp74, i64 -1
  %tmp75 = load i8, i8* %arrayidx, align 1
  %conv87 = sext i8 %tmp75 to i32
  %cmp88 = icmp eq i32 13, %conv87
  br i1 %cmp88, label %land.lhs.true90, label %if.end97

land.lhs.true90:                                  ; preds = %land.lhs.true
  %tmp76 = load i8*, i8** %hp, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %tmp76, i64 0
  %tmp77 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %tmp77 to i32
  %cmp93 = icmp eq i32 10, %conv92
  br i1 %cmp93, label %if.then95, label %if.end97

if.then95:                                        ; preds = %land.lhs.true90
  %tmp78 = load i8*, i8** %hp, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %tmp78, i32 1
  store i8* %incdec.ptr96, i8** %hp, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.then95, %land.lhs.true90, %land.lhs.true, %if.end77
  %tmp79 = load i8*, i8** %hp, align 8
  %tmp80 = load i8**, i8*** %headers.addr, align 8
  store i8* %tmp79, i8** %tmp80, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end97, %if.end75, %do.end, %if.then37, %if.then33, %if.end27, %if.then9, %if.then
  %tmp81 = load i32, i32* %retval
  ret i32 %tmp81
}

; Function Attrs: nounwind uwtable
define internal void @osip_util_replace_all_lws(i8* %sip_message) #0 {
entry:
  %sip_message.addr = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store i8* %sip_message, i8** %sip_message.addr, align 8
  %tmp1 = load i8*, i8** %sip_message.addr, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end129

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %sip_message.addr, align 8
  store i8* %tmp2, i8** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %tmp3 = load i8*, i8** %tmp, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp3, i64 0
  %tmp4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp4 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %for.body, label %for.end129.loopexit

for.body:                                         ; preds = %for.cond
  %tmp5 = load i8*, i8** %tmp, align 8
  %arrayidx3 = getelementptr inbounds i8, i8* %tmp5, i64 0
  %tmp6 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %tmp6 to i32
  %cmp5 = icmp eq i32 0, %conv4
  br i1 %cmp5, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %tmp7 = load i8*, i8** %tmp, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %tmp7, i64 1
  %tmp8 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %tmp8 to i32
  %cmp9 = icmp eq i32 0, %conv8
  br i1 %cmp9, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %tmp9 = load i8*, i8** %tmp, align 8
  %arrayidx12 = getelementptr inbounds i8, i8* %tmp9, i64 2
  %tmp10 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %tmp10 to i32
  %cmp14 = icmp eq i32 0, %conv13
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %tmp11 = load i8*, i8** %tmp, align 8
  %arrayidx17 = getelementptr inbounds i8, i8* %tmp11, i64 3
  %tmp12 = load i8, i8* %arrayidx17, align 1
  %conv18 = sext i8 %tmp12 to i32
  %cmp19 = icmp eq i32 0, %conv18
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false11, %lor.lhs.false, %for.body
  br label %for.end129

if.end22:                                         ; preds = %lor.lhs.false16
  %tmp13 = load i8*, i8** %tmp, align 8
  %arrayidx23 = getelementptr inbounds i8, i8* %tmp13, i64 0
  %tmp14 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %tmp14 to i32
  %cmp25 = icmp eq i32 13, %conv24
  br i1 %cmp25, label %land.lhs.true, label %lor.lhs.false41

land.lhs.true:                                    ; preds = %if.end22
  %tmp15 = load i8*, i8** %tmp, align 8
  %arrayidx27 = getelementptr inbounds i8, i8* %tmp15, i64 1
  %tmp16 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %tmp16 to i32
  %cmp29 = icmp eq i32 10, %conv28
  br i1 %cmp29, label %land.lhs.true31, label %lor.lhs.false41

land.lhs.true31:                                  ; preds = %land.lhs.true
  %tmp17 = load i8*, i8** %tmp, align 8
  %arrayidx32 = getelementptr inbounds i8, i8* %tmp17, i64 2
  %tmp18 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %tmp18 to i32
  %cmp34 = icmp eq i32 13, %conv33
  br i1 %cmp34, label %land.lhs.true36, label %lor.lhs.false41

land.lhs.true36:                                  ; preds = %land.lhs.true31
  %tmp19 = load i8*, i8** %tmp, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %tmp19, i64 3
  %tmp20 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %tmp20 to i32
  %cmp39 = icmp eq i32 10, %conv38
  br i1 %cmp39, label %if.then61, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %land.lhs.true36, %land.lhs.true31, %land.lhs.true, %if.end22
  %tmp21 = load i8*, i8** %tmp, align 8
  %arrayidx42 = getelementptr inbounds i8, i8* %tmp21, i64 0
  %tmp22 = load i8, i8* %arrayidx42, align 1
  %conv43 = sext i8 %tmp22 to i32
  %cmp44 = icmp eq i32 13, %conv43
  br i1 %cmp44, label %land.lhs.true46, label %lor.lhs.false51

land.lhs.true46:                                  ; preds = %lor.lhs.false41
  %tmp23 = load i8*, i8** %tmp, align 8
  %arrayidx47 = getelementptr inbounds i8, i8* %tmp23, i64 1
  %tmp24 = load i8, i8* %arrayidx47, align 1
  %conv48 = sext i8 %tmp24 to i32
  %cmp49 = icmp eq i32 13, %conv48
  br i1 %cmp49, label %if.then61, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %land.lhs.true46, %lor.lhs.false41
  %tmp25 = load i8*, i8** %tmp, align 8
  %arrayidx52 = getelementptr inbounds i8, i8* %tmp25, i64 0
  %tmp26 = load i8, i8* %arrayidx52, align 1
  %conv53 = sext i8 %tmp26 to i32
  %cmp54 = icmp eq i32 10, %conv53
  br i1 %cmp54, label %land.lhs.true56, label %if.end62

land.lhs.true56:                                  ; preds = %lor.lhs.false51
  %tmp27 = load i8*, i8** %tmp, align 8
  %arrayidx57 = getelementptr inbounds i8, i8* %tmp27, i64 1
  %tmp28 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %tmp28 to i32
  %cmp59 = icmp eq i32 10, %conv58
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %land.lhs.true56, %land.lhs.true46, %land.lhs.true36
  br label %for.end129

if.end62:                                         ; preds = %land.lhs.true56, %lor.lhs.false51
  %tmp29 = load i8*, i8** %tmp, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %tmp29, i64 0
  %tmp30 = load i8, i8* %arrayidx63, align 1
  %conv64 = sext i8 %tmp30 to i32
  %cmp65 = icmp eq i32 13, %conv64
  br i1 %cmp65, label %land.lhs.true67, label %lor.lhs.false82

land.lhs.true67:                                  ; preds = %if.end62
  %tmp31 = load i8*, i8** %tmp, align 8
  %arrayidx68 = getelementptr inbounds i8, i8* %tmp31, i64 1
  %tmp32 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %tmp32 to i32
  %cmp70 = icmp eq i32 10, %conv69
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false82

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %tmp33 = load i8*, i8** %tmp, align 8
  %arrayidx73 = getelementptr inbounds i8, i8* %tmp33, i64 2
  %tmp34 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %tmp34 to i32
  %cmp75 = icmp eq i32 32, %conv74
  br i1 %cmp75, label %if.then112, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %land.lhs.true72
  %tmp35 = load i8*, i8** %tmp, align 8
  %arrayidx78 = getelementptr inbounds i8, i8* %tmp35, i64 2
  %tmp36 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %tmp36 to i32
  %cmp80 = icmp eq i32 9, %conv79
  br i1 %cmp80, label %if.then112, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false77, %land.lhs.true67, %if.end62
  %tmp37 = load i8*, i8** %tmp, align 8
  %arrayidx83 = getelementptr inbounds i8, i8* %tmp37, i64 0
  %tmp38 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %tmp38 to i32
  %cmp85 = icmp eq i32 13, %conv84
  br i1 %cmp85, label %land.lhs.true87, label %lor.lhs.false97

land.lhs.true87:                                  ; preds = %lor.lhs.false82
  %tmp39 = load i8*, i8** %tmp, align 8
  %arrayidx88 = getelementptr inbounds i8, i8* %tmp39, i64 1
  %tmp40 = load i8, i8* %arrayidx88, align 1
  %conv89 = sext i8 %tmp40 to i32
  %cmp90 = icmp eq i32 32, %conv89
  br i1 %cmp90, label %if.then112, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %land.lhs.true87
  %tmp41 = load i8*, i8** %tmp, align 8
  %arrayidx93 = getelementptr inbounds i8, i8* %tmp41, i64 1
  %tmp42 = load i8, i8* %arrayidx93, align 1
  %conv94 = sext i8 %tmp42 to i32
  %cmp95 = icmp eq i32 9, %conv94
  br i1 %cmp95, label %if.then112, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %lor.lhs.false92, %lor.lhs.false82
  %tmp43 = load i8*, i8** %tmp, align 8
  %arrayidx98 = getelementptr inbounds i8, i8* %tmp43, i64 0
  %tmp44 = load i8, i8* %arrayidx98, align 1
  %conv99 = sext i8 %tmp44 to i32
  %cmp100 = icmp eq i32 10, %conv99
  br i1 %cmp100, label %land.lhs.true102, label %if.end127

land.lhs.true102:                                 ; preds = %lor.lhs.false97
  %tmp45 = load i8*, i8** %tmp, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %tmp45, i64 1
  %tmp46 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %tmp46 to i32
  %cmp105 = icmp eq i32 32, %conv104
  br i1 %cmp105, label %if.then112, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %land.lhs.true102
  %tmp47 = load i8*, i8** %tmp, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %tmp47, i64 1
  %tmp48 = load i8, i8* %arrayidx108, align 1
  %conv109 = sext i8 %tmp48 to i32
  %cmp110 = icmp eq i32 9, %conv109
  br i1 %cmp110, label %if.then112, label %if.end127

if.then112:                                       ; preds = %lor.lhs.false107, %land.lhs.true102, %lor.lhs.false92, %land.lhs.true87, %lor.lhs.false77, %land.lhs.true72
  %tmp49 = load i8*, i8** %tmp, align 8
  %arrayidx113 = getelementptr inbounds i8, i8* %tmp49, i64 0
  store i8 32, i8* %arrayidx113, align 1
  %tmp50 = load i8*, i8** %tmp, align 8
  %arrayidx114 = getelementptr inbounds i8, i8* %tmp50, i64 1
  store i8 32, i8* %arrayidx114, align 1
  %tmp51 = load i8*, i8** %tmp, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp51, i64 2
  store i8* %add.ptr, i8** %tmp, align 8
  br label %for.cond115

for.cond115:                                      ; preds = %for.body125, %if.then112
  %tmp52 = load i8*, i8** %tmp, align 8
  %arrayidx116 = getelementptr inbounds i8, i8* %tmp52, i64 0
  %tmp53 = load i8, i8* %arrayidx116, align 1
  %conv117 = sext i8 %tmp53 to i32
  %cmp118 = icmp eq i32 9, %conv117
  br i1 %cmp118, label %for.body125, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %for.cond115
  %tmp54 = load i8*, i8** %tmp, align 8
  %arrayidx121 = getelementptr inbounds i8, i8* %tmp54, i64 0
  %tmp55 = load i8, i8* %arrayidx121, align 1
  %conv122 = sext i8 %tmp55 to i32
  %cmp123 = icmp eq i32 32, %conv122
  br i1 %cmp123, label %for.body125, label %for.end

for.body125:                                      ; preds = %lor.lhs.false120, %for.cond115
  %tmp56 = load i8*, i8** %tmp, align 8
  %arrayidx126 = getelementptr inbounds i8, i8* %tmp56, i64 0
  store i8 32, i8* %arrayidx126, align 1
  %tmp57 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp57, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  br label %for.cond115

for.end:                                          ; preds = %lor.lhs.false120
  br label %if.end127

if.end127:                                        ; preds = %for.end, %lor.lhs.false107, %lor.lhs.false97
  br label %for.inc

for.inc:                                          ; preds = %if.end127
  %tmp58 = load i8*, i8** %tmp, align 8
  %incdec.ptr128 = getelementptr inbounds i8, i8* %tmp58, i32 1
  store i8* %incdec.ptr128, i8** %tmp, align 8
  br label %for.cond

for.end129.loopexit:                              ; preds = %for.cond
  br label %for.end129

for.end129:                                       ; preds = %for.end129.loopexit, %if.then61, %if.then21, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_contact(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %contact = alloca %struct.osip_from*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_contact_init(%struct.osip_from** %contact)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %contact, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_contact_parse(%struct.osip_from* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_from*, %struct.osip_from** %contact, align 8
  call void @osip_contact_free(%struct.osip_from* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 14
  %tmp12 = load %struct.osip_from*, %struct.osip_from** %contact, align 8
  %tmp13 = bitcast %struct.osip_from* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %contacts, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_contact_init(%struct.osip_from** %contact) #0 {
entry:
  %contact.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from** %contact, %struct.osip_from*** %contact.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %contact.addr, align 8
  %call = call i32 @osip_from_init(%struct.osip_from** %tmp)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_contact_parse(%struct.osip_from* %contact, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %contact.addr = alloca %struct.osip_from*, align 8
  %hvalue.addr = alloca i8*, align 8
  store %struct.osip_from* %contact, %struct.osip_from** %contact.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i32 @strncmp(i8* %tmp1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str83, i32 0, i32 0), i64 1) #7
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %call3 = call i8* @osip_strdup(i8* %tmp2)
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 0
  store i8* %call3, i8** %displayname, align 8
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %displayname4 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %displayname4, align 8
  %cmp5 = icmp eq i8* %tmp5, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.then2
  store i32 -4, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.then2
  store i32 0, i32* %retval
  br label %return

if.end8:                                          ; preds = %if.end
  %tmp6 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call9 = call i32 @osip_from_parse(%struct.osip_from* %tmp6, i8* %tmp7)
  store i32 %call9, i32* %retval
  br label %return

return:                                           ; preds = %if.end8, %if.end7, %if.then6, %if.then
  %tmp8 = load i32, i32* %retval
  ret i32 %tmp8
}

; Function Attrs: nounwind uwtable
define void @osip_contact_free(%struct.osip_from* %contact) #0 {
entry:
  %contact.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %contact, %struct.osip_from** %contact.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_contact(%struct.osip_message* %sip, i32 %pos, %struct.osip_from** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* null, %struct.osip_from** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp2, i32 0, i32 14
  %call = call i32 @osip_list_size(%struct.osip_list* %contacts)
  %tmp3 = load i32, i32* %pos.addr, align 4
  %cmp1 = icmp sle i32 %call, %tmp3
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts4 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp4, i32 0, i32 14
  %tmp5 = load i32, i32* %pos.addr, align 4
  %call5 = call i8* @osip_list_get(%struct.osip_list* %contacts4, i32 %tmp5)
  %tmp6 = bitcast i8* %call5 to %struct.osip_from*
  %tmp7 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* %tmp6, %struct.osip_from** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_contact_to_str(%struct.osip_from* %contact, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %contact.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_from* %contact, %struct.osip_from** %contact.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %displayname, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %displayname3 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %displayname3, align 8
  %call = call i32 @strncmp(i8* %tmp4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str83, i32 0, i32 0), i64 1) #7
  %cmp4 = icmp eq i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end10

if.then5:                                         ; preds = %if.then2
  %call6 = call i8* @osip_strdup(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str83, i32 0, i32 0))
  %tmp5 = load i8**, i8*** %dest.addr, align 8
  store i8* %call6, i8** %tmp5, align 8
  %tmp6 = load i8**, i8*** %dest.addr, align 8
  %tmp7 = load i8*, i8** %tmp6, align 8
  %cmp7 = icmp eq i8* %tmp7, null
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then5
  store i32 -4, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.then5
  store i32 0, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.then2
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %tmp8 = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %tmp9 = load i8**, i8*** %dest.addr, align 8
  %call12 = call i32 @osip_from_to_str(%struct.osip_from* %tmp8, i8** %tmp9)
  store i32 %call12, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.end9, %if.then8, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_contact_clone(%struct.osip_from* %contact, %struct.osip_from** %dest) #0 {
entry:
  %contact.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from* %contact, %struct.osip_from** %contact.addr, align 8
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %contact.addr, align 8
  %tmp1 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  %call = call i32 @osip_from_clone(%struct.osip_from* %tmp, %struct.osip_from** %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i8* @osip_message_get_reason_phrase(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 4
  %tmp1 = load i8*, i8** %reason_phrase, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_status_code(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 3
  %tmp1 = load i32, i32* %status_code, align 4
  ret i32 %tmp1
}

; Function Attrs: nounwind uwtable
define i8* @osip_message_get_method(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 2
  %tmp1 = load i8*, i8** %sip_method, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define i8* @osip_message_get_version(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %sip_version, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define %struct.osip_uri* @osip_message_get_uri(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 1
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %req_uri, align 8
  ret %struct.osip_uri* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get__property(%struct.osip_message* %sip) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 32
  %tmp2 = load i32, i32* %message_property, align 4
  store i32 %tmp2, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i32, i32* %retval
  ret i32 %tmp3
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_force_update(%struct.osip_message* %sip) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp2 = load i32, i32* %retval
  ret i32 %tmp2
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_to_str(%struct.osip_message* %sip, i8** %dest, i64* %message_length) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  %message_length.addr = alloca i64*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64* %message_length, i64** %message_length.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  %tmp2 = load i64*, i64** %message_length.addr, align 8
  %call = call i32 @_osip_message_to_str(%struct.osip_message* %tmp, i8** %tmp1, i64* %tmp2, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_to_str_sipfrag(%struct.osip_message* %sip, i8** %dest, i64* %message_length) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  %message_length.addr = alloca i64*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64* %message_length, i64** %message_length.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  %tmp2 = load i64*, i64** %message_length.addr, align 8
  %call = call i32 @_osip_message_to_str(%struct.osip_message* %tmp, i8** %tmp1, i64* %tmp2, i32 1)
  ret i32 %call
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @_osip_message_to_str(%struct.osip_message* %sip, i8** %dest, i64* %message_length, i32 %sipfrag) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  %message_length.addr = alloca i64*, align 8
  %sipfrag.addr = alloca i32, align 4
  %malloc_size = alloca i64, align 8
  %total_length = alloca i64, align 8
  %start_of_bodies = alloca i8*, align 8
  %content_length_to_modify = alloca i8*, align 8
  %message = alloca i8*, align 8
  %next = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %boundary = alloca i8*, align 8
  %table = alloca [25 x %struct.to_str_table], align 16
  %header = alloca %struct.osip_header*, align 8
  %header_len = alloca i64, align 8
  %ct_param = alloca %struct.osip_uri_param*, align 8
  %len = alloca i64, align 8
  %body = alloca %struct.osip_body*, align 8
  %body_length = alloca i64, align 8
  %size = alloca i64, align 8
  %offset_of_body = alloca i32, align 4
  %offset_content_length_to_modify = alloca i32, align 4
  %size496 = alloca i64, align 8
  %tmp2 = alloca [15 x i8], align 1
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64* %message_length, i64** %message_length.addr, align 8
  store i32 %sipfrag, i32* %sipfrag.addr, align 4
  store i64 0, i64* %total_length, align 8
  store i8* null, i8** %content_length_to_modify, align 8
  store i8* null, i8** %boundary, align 8
  store i64 8000, i64* %malloc_size, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call = call i32 @osip_message_get__property(%struct.osip_message* %tmp4)
  %cmp4 = icmp eq i32 1, %call
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then5
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length6 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 34
  %tmp8 = load i64, i64* %message_length6, align 8
  %add = add i64 %tmp8, 1
  %call7 = call i8* %tmp6(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.then5
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length8 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 34
  %tmp10 = load i64, i64* %message_length8, align 8
  %add9 = add i64 %tmp10, 1
  %call10 = call noalias i8* @malloc(i64 %add9) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call7, %cond.true ], [ %call10, %cond.false ]
  %tmp11 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp11, align 8
  %tmp12 = load i8**, i8*** %dest.addr, align 8
  %tmp13 = load i8*, i8** %tmp12, align 8
  %cmp11 = icmp eq i8* %tmp13, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end13:                                         ; preds = %cond.end
  %tmp14 = load i8**, i8*** %dest.addr, align 8
  %tmp15 = load i8*, i8** %tmp14, align 8
  %tmp16 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message14 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp16, i32 0, i32 33
  %tmp17 = load i8*, i8** %message14, align 8
  %tmp18 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length15 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp18, i32 0, i32 34
  %tmp19 = load i64, i64* %message_length15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp15, i8* %tmp17, i64 %tmp19, i32 1, i1 false)
  %tmp20 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length16 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp20, i32 0, i32 34
  %tmp21 = load i64, i64* %message_length16, align 8
  %tmp22 = load i8**, i8*** %dest.addr, align 8
  %tmp23 = load i8*, i8** %tmp22, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp23, i64 %tmp21
  store i8 0, i8* %arrayidx, align 1
  %tmp24 = load i64*, i64** %message_length.addr, align 8
  %cmp17 = icmp ne i64* %tmp24, null
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end13
  %tmp25 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length19 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp25, i32 0, i32 34
  %tmp26 = load i64, i64* %message_length19, align 8
  %tmp27 = load i64*, i64** %message_length.addr, align 8
  store i64 %tmp26, i64* %tmp27, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end13
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end
  %tmp28 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message21 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp28, i32 0, i32 33
  %tmp29 = load i8*, i8** %message21, align 8
  %cmp22 = icmp ne i8* %tmp29, null
  br i1 %cmp22, label %if.then23, label %if.end30

if.then23:                                        ; preds = %if.else
  %tmp30 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool24 = icmp ne void (i8*)* %tmp30, null
  br i1 %tobool24, label %if.then25, label %if.else27

if.then25:                                        ; preds = %if.then23
  %tmp31 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp32 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message26 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp32, i32 0, i32 33
  %tmp33 = load i8*, i8** %message26, align 8
  call void %tmp31(i8* %tmp33)
  br label %if.end29

if.else27:                                        ; preds = %if.then23
  %tmp34 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message28 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp34, i32 0, i32 33
  %tmp35 = load i8*, i8** %message28, align 8
  call void @free(i8* %tmp35) #8
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.else
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message31 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp36, i32 0, i32 33
  store i8* null, i8** %message31, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.end30
  %tmp37 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool33 = icmp ne i8* (i64)* %tmp37, null
  br i1 %tobool33, label %cond.true34, label %cond.false36

cond.true34:                                      ; preds = %if.end32
  %tmp38 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call35 = call i8* %tmp38(i64 8000)
  br label %cond.end38

cond.false36:                                     ; preds = %if.end32
  %call37 = call noalias i8* @malloc(i64 8000) #8
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false36, %cond.true34
  %cond39 = phi i8* [ %call35, %cond.true34 ], [ %call37, %cond.false36 ]
  store i8* %cond39, i8** %message, align 8
  %tmp39 = load i8*, i8** %message, align 8
  %cmp40 = icmp eq i8* %tmp39, null
  br i1 %cmp40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %cond.end38
  store i32 -4, i32* %retval
  br label %return

if.end42:                                         ; preds = %cond.end38
  %tmp40 = load i8*, i8** %message, align 8
  %tmp41 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp40, i8** %tmp41, align 8
  %tmp42 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call43 = call i32 @__osip_message_startline_to_str(%struct.osip_message* %tmp42, i8** %tmp)
  store i32 %call43, i32* %i, align 4
  %tmp43 = load i32, i32* %i, align 4
  %cmp44 = icmp ne i32 %tmp43, 0
  br i1 %cmp44, label %if.then45, label %if.else56

if.then45:                                        ; preds = %if.end42
  %tmp44 = load i32, i32* %sipfrag.addr, align 4
  %tobool46 = icmp ne i32 %tmp44, 0
  br i1 %tobool46, label %if.end55, label %if.then47

if.then47:                                        ; preds = %if.then45
  %tmp45 = load i8**, i8*** %dest.addr, align 8
  %tmp46 = load i8*, i8** %tmp45, align 8
  %cmp48 = icmp ne i8* %tmp46, null
  br i1 %cmp48, label %if.then49, label %if.end54

if.then49:                                        ; preds = %if.then47
  %tmp47 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool50 = icmp ne void (i8*)* %tmp47, null
  br i1 %tobool50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %if.then49
  %tmp48 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp49 = load i8**, i8*** %dest.addr, align 8
  %tmp50 = load i8*, i8** %tmp49, align 8
  call void %tmp48(i8* %tmp50)
  br label %if.end53

if.else52:                                        ; preds = %if.then49
  %tmp51 = load i8**, i8*** %dest.addr, align 8
  %tmp52 = load i8*, i8** %tmp51, align 8
  call void @free(i8* %tmp52) #8
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then51
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  %tmp53 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp53, align 8
  %tmp54 = load i32, i32* %i, align 4
  store i32 %tmp54, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.then45
  br label %if.end66

if.else56:                                        ; preds = %if.end42
  %tmp55 = load i8*, i8** %message, align 8
  %tmp56 = load i8*, i8** %tmp, align 8
  %call57 = call i8* @osip_str_append(i8* %tmp55, i8* %tmp56)
  store i8* %call57, i8** %message, align 8
  %tmp57 = load i8*, i8** %tmp, align 8
  %cmp58 = icmp ne i8* %tmp57, null
  br i1 %cmp58, label %if.then59, label %if.end64

if.then59:                                        ; preds = %if.else56
  %tmp58 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool60 = icmp ne void (i8*)* %tmp58, null
  br i1 %tobool60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.then59
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp60 = load i8*, i8** %tmp, align 8
  call void %tmp59(i8* %tmp60)
  br label %if.end63

if.else62:                                        ; preds = %if.then59
  %tmp61 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp61) #8
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.else56
  %tmp62 = load i8*, i8** %message, align 8
  %call65 = call i8* @osip_strn_append(i8* %tmp62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call65, i8** %message, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.end55
  %tmp63 = bitcast [25 x %struct.to_str_table]* %table to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp63, i8* getelementptr inbounds ([25 x %struct.to_str_table], [25 x %struct.to_str_table]* @_osip_message_to_str.table, i32 0, i32 0, i32 0, i32 0), i64 1600, i32 16, i1 false)
  %tmp64 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp64, i32 0, i32 28
  %arrayidx68 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 0
  %header_list = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx68, i32 0, i32 2
  store %struct.osip_list* %vias, %struct.osip_list** %header_list, align 8
  %tmp65 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp65, i32 0, i32 25
  %arrayidx69 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 1
  %header_list70 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx69, i32 0, i32 2
  store %struct.osip_list* %record_routes, %struct.osip_list** %header_list70, align 8
  %tmp66 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp66, i32 0, i32 26
  %arrayidx71 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 2
  %header_list72 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx71, i32 0, i32 2
  store %struct.osip_list* %routes, %struct.osip_list** %header_list72, align 8
  %tmp67 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp67, i32 0, i32 20
  %tmp68 = load %struct.osip_from*, %struct.osip_from** %from, align 8
  %tmp69 = bitcast %struct.osip_from* %tmp68 to i8*
  %arrayidx73 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 3
  %header_data = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx73, i32 0, i32 3
  store i8* %tmp69, i8** %header_data, align 8
  %tmp70 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp70, i32 0, i32 27
  %tmp71 = load %struct.osip_from*, %struct.osip_from** %to, align 8
  %tmp72 = bitcast %struct.osip_from* %tmp71 to i8*
  %arrayidx74 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 4
  %header_data75 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx74, i32 0, i32 3
  store i8* %tmp72, i8** %header_data75, align 8
  %tmp73 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_id = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp73, i32 0, i32 12
  %tmp74 = load %struct.osip_call_id*, %struct.osip_call_id** %call_id, align 8
  %tmp75 = bitcast %struct.osip_call_id* %tmp74 to i8*
  %arrayidx76 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 5
  %header_data77 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx76, i32 0, i32 3
  store i8* %tmp75, i8** %header_data77, align 8
  %tmp76 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp76, i32 0, i32 18
  %tmp77 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq, align 8
  %tmp78 = bitcast %struct.osip_cseq* %tmp77 to i8*
  %arrayidx78 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 6
  %header_data79 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx78, i32 0, i32 3
  store i8* %tmp78, i8** %header_data79, align 8
  %tmp79 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %contacts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp79, i32 0, i32 14
  %arrayidx80 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 7
  %header_list81 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx80, i32 0, i32 2
  store %struct.osip_list* %contacts, %struct.osip_list** %header_list81, align 8
  %tmp80 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp80, i32 0, i32 11
  %arrayidx82 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 8
  %header_list83 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx82, i32 0, i32 2
  store %struct.osip_list* %authorizations, %struct.osip_list** %header_list83, align 8
  %tmp81 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp81, i32 0, i32 29
  %arrayidx84 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 9
  %header_list85 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx84, i32 0, i32 2
  store %struct.osip_list* %www_authenticates, %struct.osip_list** %header_list85, align 8
  %tmp82 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp82, i32 0, i32 22
  %arrayidx86 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 10
  %header_list87 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx86, i32 0, i32 2
  store %struct.osip_list* %proxy_authenticates, %struct.osip_list** %header_list87, align 8
  %tmp83 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp83, i32 0, i32 24
  %arrayidx88 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 11
  %header_list89 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx88, i32 0, i32 2
  store %struct.osip_list* %proxy_authorizations, %struct.osip_list** %header_list89, align 8
  %tmp84 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp84, i32 0, i32 17
  %tmp85 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %tmp86 = bitcast %struct.osip_content_type* %tmp85 to i8*
  %arrayidx90 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 12
  %header_data91 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx90, i32 0, i32 3
  store i8* %tmp86, i8** %header_data91, align 8
  %tmp87 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp87, i32 0, i32 21
  %tmp88 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version, align 8
  %tmp89 = bitcast %struct.osip_content_length* %tmp88 to i8*
  %arrayidx92 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 13
  %header_data93 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx92, i32 0, i32 3
  store i8* %tmp89, i8** %header_data93, align 8
  %tmp90 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp90, i32 0, i32 9
  %arrayidx94 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 14
  %header_list95 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx94, i32 0, i32 2
  store %struct.osip_list* %allows, %struct.osip_list** %header_list95, align 8
  %tmp91 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp91, i32 0, i32 15
  %arrayidx96 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 15
  %header_list97 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx96, i32 0, i32 2
  store %struct.osip_list* %content_encodings, %struct.osip_list** %header_list97, align 8
  %tmp92 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp92, i32 0, i32 13
  %arrayidx98 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 16
  %header_list99 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx98, i32 0, i32 2
  store %struct.osip_list* %call_infos, %struct.osip_list** %header_list99, align 8
  %tmp93 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp93, i32 0, i32 8
  %arrayidx100 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 17
  %header_list101 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx100, i32 0, i32 2
  store %struct.osip_list* %alert_infos, %struct.osip_list** %header_list101, align 8
  %tmp94 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp94, i32 0, i32 19
  %arrayidx102 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 18
  %header_list103 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx102, i32 0, i32 2
  store %struct.osip_list* %error_infos, %struct.osip_list** %header_list103, align 8
  %tmp95 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp95, i32 0, i32 5
  %arrayidx104 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 19
  %header_list105 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx104, i32 0, i32 2
  store %struct.osip_list* %accepts, %struct.osip_list** %header_list105, align 8
  %tmp96 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp96, i32 0, i32 6
  %arrayidx106 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 20
  %header_list107 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx106, i32 0, i32 2
  store %struct.osip_list* %accept_encodings, %struct.osip_list** %header_list107, align 8
  %tmp97 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp97, i32 0, i32 7
  %arrayidx108 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 21
  %header_list109 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx108, i32 0, i32 2
  store %struct.osip_list* %accept_languages, %struct.osip_list** %header_list109, align 8
  %tmp98 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp98, i32 0, i32 10
  %arrayidx110 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 22
  %header_list111 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx110, i32 0, i32 2
  store %struct.osip_list* %authentication_infos, %struct.osip_list** %header_list111, align 8
  %tmp99 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp99, i32 0, i32 23
  %arrayidx112 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 23
  %header_list113 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx112, i32 0, i32 2
  store %struct.osip_list* %proxy_authentication_infos, %struct.osip_list** %header_list113, align 8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end162, %if.end66
  %tmp100 = load i32, i32* %pos, align 4
  %idxprom = sext i32 %tmp100 to i64
  %arrayidx114 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom
  %header_name = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx114, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [30 x i8], [30 x i8]* %header_name, i32 0, i64 0
  %tmp101 = load i8, i8* %arrayidx115, align 1
  %conv = sext i8 %tmp101 to i32
  %cmp116 = icmp ne i32 %conv, 0
  br i1 %cmp116, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %arrayidx118 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 13
  %header_list119 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx118, i32 0, i32 2
  %tmp102 = load %struct.osip_list*, %struct.osip_list** %header_list119, align 8
  %cmp120 = icmp eq %struct.osip_list* %tmp102, null
  br i1 %cmp120, label %if.then122, label %if.end135

if.then122:                                       ; preds = %while.body
  %tmp103 = load i8**, i8*** %dest.addr, align 8
  %tmp104 = load i32, i32* %pos, align 4
  %idxprom123 = sext i32 %tmp104 to i64
  %arrayidx124 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom123
  %header_data125 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx124, i32 0, i32 3
  %tmp105 = load i8*, i8** %header_data125, align 8
  %tmp106 = load i32, i32* %pos, align 4
  %idxprom126 = sext i32 %tmp106 to i64
  %arrayidx127 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom126
  %header_name128 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx127, i32 0, i32 0
  %arraydecay = getelementptr inbounds [30 x i8], [30 x i8]* %header_name128, i32 0, i32 0
  %tmp107 = load i32, i32* %pos, align 4
  %idxprom129 = sext i32 %tmp107 to i64
  %arrayidx130 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom129
  %header_length = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx130, i32 0, i32 1
  %tmp108 = load i32, i32* %header_length, align 4
  %conv131 = sext i32 %tmp108 to i64
  %tmp109 = load i32, i32* %pos, align 4
  %idxprom132 = sext i32 %tmp109 to i64
  %arrayidx133 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom132
  %to_str = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx133, i32 0, i32 4
  %tmp110 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %to_str, align 8
  %call134 = call i32 @strcat_simple_header(i8** %tmp103, i64* %malloc_size, i8** %message, i8* %tmp105, i8* %arraydecay, i64 %conv131, i32 (i8*, i8**)* %tmp110, i8** %next)
  store i32 %call134, i32* %i, align 4
  br label %if.end135

if.end135:                                        ; preds = %if.then122, %while.body
  %tmp111 = load i8**, i8*** %dest.addr, align 8
  %tmp112 = load i32, i32* %pos, align 4
  %idxprom136 = sext i32 %tmp112 to i64
  %arrayidx137 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom136
  %header_list138 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx137, i32 0, i32 2
  %tmp113 = load %struct.osip_list*, %struct.osip_list** %header_list138, align 8
  %tmp114 = load i32, i32* %pos, align 4
  %idxprom139 = sext i32 %tmp114 to i64
  %arrayidx140 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom139
  %header_name141 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx140, i32 0, i32 0
  %arraydecay142 = getelementptr inbounds [30 x i8], [30 x i8]* %header_name141, i32 0, i32 0
  %tmp115 = load i32, i32* %pos, align 4
  %idxprom143 = sext i32 %tmp115 to i64
  %arrayidx144 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom143
  %header_length145 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx144, i32 0, i32 1
  %tmp116 = load i32, i32* %header_length145, align 4
  %conv146 = sext i32 %tmp116 to i64
  %tmp117 = load i32, i32* %pos, align 4
  %idxprom147 = sext i32 %tmp117 to i64
  %arrayidx148 = getelementptr inbounds [25 x %struct.to_str_table], [25 x %struct.to_str_table]* %table, i32 0, i64 %idxprom147
  %to_str149 = getelementptr inbounds %struct.to_str_table, %struct.to_str_table* %arrayidx148, i32 0, i32 4
  %tmp118 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %to_str149, align 8
  %call150 = call i32 @strcat_headers_one_per_line(i8** %tmp111, i64* %malloc_size, i8** %message, %struct.osip_list* %tmp113, i8* %arraydecay142, i64 %conv146, i32 (i8*, i8**)* %tmp118, i8** %next)
  store i32 %call150, i32* %i, align 4
  %tmp119 = load i32, i32* %i, align 4
  %cmp151 = icmp ne i32 %tmp119, 0
  br i1 %cmp151, label %if.then153, label %if.end162

if.then153:                                       ; preds = %if.end135
  %tmp120 = load i8**, i8*** %dest.addr, align 8
  %tmp121 = load i8*, i8** %tmp120, align 8
  %cmp154 = icmp ne i8* %tmp121, null
  br i1 %cmp154, label %if.then156, label %if.end161

if.then156:                                       ; preds = %if.then153
  %tmp122 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool157 = icmp ne void (i8*)* %tmp122, null
  br i1 %tobool157, label %if.then158, label %if.else159

if.then158:                                       ; preds = %if.then156
  %tmp123 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp124 = load i8**, i8*** %dest.addr, align 8
  %tmp125 = load i8*, i8** %tmp124, align 8
  call void %tmp123(i8* %tmp125)
  br label %if.end160

if.else159:                                       ; preds = %if.then156
  %tmp126 = load i8**, i8*** %dest.addr, align 8
  %tmp127 = load i8*, i8** %tmp126, align 8
  call void @free(i8* %tmp127) #8
  br label %if.end160

if.end160:                                        ; preds = %if.else159, %if.then158
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then153
  %tmp128 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp128, align 8
  %tmp129 = load i32, i32* %i, align 4
  store i32 %tmp129, i32* %retval
  br label %return

if.end162:                                        ; preds = %if.end135
  %tmp130 = load i8*, i8** %next, align 8
  store i8* %tmp130, i8** %message, align 8
  %tmp131 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp131, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %pos, align 4
  br label %while.cond163

while.cond163:                                    ; preds = %if.end207, %while.end
  %tmp132 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp132, i32 0, i32 30
  %tmp133 = load i32, i32* %pos, align 4
  %call164 = call i32 @osip_list_eol(%struct.osip_list* %headers, i32 %tmp133)
  %tobool165 = icmp ne i32 %call164, 0
  %lnot = xor i1 %tobool165, true
  br i1 %lnot, label %while.body166, label %while.end210

while.body166:                                    ; preds = %while.cond163
  store i64 0, i64* %header_len, align 8
  %tmp134 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers169 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp134, i32 0, i32 30
  %tmp135 = load i32, i32* %pos, align 4
  %call170 = call i8* @osip_list_get(%struct.osip_list* %headers169, i32 %tmp135)
  %tmp136 = bitcast i8* %call170 to %struct.osip_header*
  store %struct.osip_header* %tmp136, %struct.osip_header** %header, align 8
  %tmp137 = load %struct.osip_header*, %struct.osip_header** %header, align 8
  %call171 = call i32 @osip_header_to_str(%struct.osip_header* %tmp137, i8** %tmp)
  store i32 %call171, i32* %i, align 4
  %tmp138 = load i32, i32* %i, align 4
  %cmp172 = icmp ne i32 %tmp138, 0
  br i1 %cmp172, label %if.then174, label %if.end183

if.then174:                                       ; preds = %while.body166
  %tmp139 = load i8**, i8*** %dest.addr, align 8
  %tmp140 = load i8*, i8** %tmp139, align 8
  %cmp175 = icmp ne i8* %tmp140, null
  br i1 %cmp175, label %if.then177, label %if.end182

if.then177:                                       ; preds = %if.then174
  %tmp141 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool178 = icmp ne void (i8*)* %tmp141, null
  br i1 %tobool178, label %if.then179, label %if.else180

if.then179:                                       ; preds = %if.then177
  %tmp142 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp143 = load i8**, i8*** %dest.addr, align 8
  %tmp144 = load i8*, i8** %tmp143, align 8
  call void %tmp142(i8* %tmp144)
  br label %if.end181

if.else180:                                       ; preds = %if.then177
  %tmp145 = load i8**, i8*** %dest.addr, align 8
  %tmp146 = load i8*, i8** %tmp145, align 8
  call void @free(i8* %tmp146) #8
  br label %if.end181

if.end181:                                        ; preds = %if.else180, %if.then179
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then174
  %tmp147 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp147, align 8
  %tmp148 = load i32, i32* %i, align 4
  store i32 %tmp148, i32* %retval
  br label %return

if.end183:                                        ; preds = %while.body166
  %tmp149 = load i8*, i8** %tmp, align 8
  %call184 = call i64 @strlen(i8* %tmp149) #7
  store i64 %call184, i64* %header_len, align 8
  %tmp150 = load i8**, i8*** %dest.addr, align 8
  %tmp151 = load i64, i64* %header_len, align 8
  %add185 = add i64 %tmp151, 3
  %call186 = call i32 @_osip_message_realloc(i8** %message, i8** %tmp150, i64 %add185, i64* %malloc_size)
  %cmp187 = icmp slt i32 %call186, 0
  br i1 %cmp187, label %if.then189, label %if.end198

if.then189:                                       ; preds = %if.end183
  %tmp152 = load i8*, i8** %tmp, align 8
  %cmp190 = icmp ne i8* %tmp152, null
  br i1 %cmp190, label %if.then192, label %if.end197

if.then192:                                       ; preds = %if.then189
  %tmp153 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool193 = icmp ne void (i8*)* %tmp153, null
  br i1 %tobool193, label %if.then194, label %if.else195

if.then194:                                       ; preds = %if.then192
  %tmp154 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp155 = load i8*, i8** %tmp, align 8
  call void %tmp154(i8* %tmp155)
  br label %if.end196

if.else195:                                       ; preds = %if.then192
  %tmp156 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp156) #8
  br label %if.end196

if.end196:                                        ; preds = %if.else195, %if.then194
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then189
  %tmp157 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp157, align 8
  store i32 -4, i32* %retval
  br label %return

if.end198:                                        ; preds = %if.end183
  %tmp158 = load i8*, i8** %message, align 8
  %tmp159 = load i8*, i8** %tmp, align 8
  %call199 = call i8* @osip_str_append(i8* %tmp158, i8* %tmp159)
  store i8* %call199, i8** %message, align 8
  %tmp160 = load i8*, i8** %tmp, align 8
  %cmp200 = icmp ne i8* %tmp160, null
  br i1 %cmp200, label %if.then202, label %if.end207

if.then202:                                       ; preds = %if.end198
  %tmp161 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool203 = icmp ne void (i8*)* %tmp161, null
  br i1 %tobool203, label %if.then204, label %if.else205

if.then204:                                       ; preds = %if.then202
  %tmp162 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp163 = load i8*, i8** %tmp, align 8
  call void %tmp162(i8* %tmp163)
  br label %if.end206

if.else205:                                       ; preds = %if.then202
  %tmp164 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp164) #8
  br label %if.end206

if.end206:                                        ; preds = %if.else205, %if.then204
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end198
  %tmp165 = load i8*, i8** %message, align 8
  %call208 = call i8* @osip_strn_append(i8* %tmp165, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call208, i8** %message, align 8
  %tmp166 = load i32, i32* %pos, align 4
  %inc209 = add nsw i32 %tmp166, 1
  store i32 %inc209, i32* %pos, align 4
  br label %while.cond163

while.end210:                                     ; preds = %while.cond163
  %tmp167 = load i8**, i8*** %dest.addr, align 8
  %call211 = call i32 @_osip_message_realloc(i8** %message, i8** %tmp167, i64 16, i64* %malloc_size)
  %cmp212 = icmp slt i32 %call211, 0
  br i1 %cmp212, label %if.then214, label %if.end215

if.then214:                                       ; preds = %while.end210
  store i32 -4, i32* %retval
  br label %return

if.end215:                                        ; preds = %while.end210
  %tmp168 = load i32, i32* %sipfrag.addr, align 4
  %tobool216 = icmp ne i32 %tmp168, 0
  br i1 %tobool216, label %land.lhs.true, label %if.end231

land.lhs.true:                                    ; preds = %if.end215
  %tmp169 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp169, i32 0, i32 31
  %call217 = call i32 @osip_list_eol(%struct.osip_list* %bodies, i32 0)
  %tobool218 = icmp ne i32 %call217, 0
  br i1 %tobool218, label %if.then219, label %if.end231

if.then219:                                       ; preds = %land.lhs.true
  %tmp170 = load i8*, i8** %message, align 8
  %call220 = call i8* @osip_strncpy(i8* %tmp170, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  %tmp171 = load i8*, i8** %message, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp171, i64 2
  store i8* %add.ptr, i8** %message, align 8
  %tmp172 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp172, i32 0, i32 32
  store i32 1, i32* %message_property, align 4
  %tmp173 = load i8**, i8*** %dest.addr, align 8
  %tmp174 = load i8*, i8** %tmp173, align 8
  %call221 = call i8* @osip_strdup(i8* %tmp174)
  %tmp175 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message222 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp175, i32 0, i32 33
  store i8* %call221, i8** %message222, align 8
  %tmp176 = load i8*, i8** %message, align 8
  %tmp177 = load i8**, i8*** %dest.addr, align 8
  %tmp178 = load i8*, i8** %tmp177, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp176 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp178 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tmp179 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length223 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp179, i32 0, i32 34
  store i64 %sub.ptr.sub, i64* %message_length223, align 8
  %tmp180 = load i64*, i64** %message_length.addr, align 8
  %cmp224 = icmp ne i64* %tmp180, null
  br i1 %cmp224, label %if.then226, label %if.end230

if.then226:                                       ; preds = %if.then219
  %tmp181 = load i8*, i8** %message, align 8
  %tmp182 = load i8**, i8*** %dest.addr, align 8
  %tmp183 = load i8*, i8** %tmp182, align 8
  %sub.ptr.lhs.cast227 = ptrtoint i8* %tmp181 to i64
  %sub.ptr.rhs.cast228 = ptrtoint i8* %tmp183 to i64
  %sub.ptr.sub229 = sub i64 %sub.ptr.lhs.cast227, %sub.ptr.rhs.cast228
  %tmp184 = load i64*, i64** %message_length.addr, align 8
  store i64 %sub.ptr.sub229, i64* %tmp184, align 8
  br label %if.end230

if.end230:                                        ; preds = %if.then226, %if.then219
  store i32 0, i32* %retval
  br label %return

if.end231:                                        ; preds = %land.lhs.true, %if.end215
  %tmp185 = load i8*, i8** %message, align 8
  %call232 = call i8* @osip_strncpy(i8* %tmp185, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str189, i32 0, i32 0), i64 16)
  %tmp186 = load i8*, i8** %message, align 8
  %add.ptr233 = getelementptr inbounds i8, i8* %tmp186, i64 16
  store i8* %add.ptr233, i8** %message, align 8
  %tmp187 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies234 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp187, i32 0, i32 31
  %call235 = call i32 @osip_list_eol(%struct.osip_list* %bodies234, i32 0)
  %tobool236 = icmp ne i32 %call235, 0
  br i1 %tobool236, label %if.then237, label %if.else239

if.then237:                                       ; preds = %if.end231
  %tmp188 = load i8*, i8** %message, align 8
  %call238 = call i8* @osip_strn_append(i8* %tmp188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str290, i32 0, i32 0), i64 1)
  store i8* %call238, i8** %message, align 8
  br label %if.end241

if.else239:                                       ; preds = %if.end231
  %tmp189 = load i8*, i8** %message, align 8
  store i8* %tmp189, i8** %content_length_to_modify, align 8
  %tmp190 = load i8*, i8** %message, align 8
  %call240 = call i8* @osip_str_append(i8* %tmp190, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str391, i32 0, i32 0))
  store i8* %call240, i8** %message, align 8
  br label %if.end241

if.end241:                                        ; preds = %if.else239, %if.then237
  %tmp191 = load i8*, i8** %message, align 8
  %call242 = call i8* @osip_strn_append(i8* %tmp191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call242, i8** %message, align 8
  %tmp192 = load i8*, i8** %message, align 8
  %call243 = call i8* @osip_strn_append(i8* %tmp192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call243, i8** %message, align 8
  %tmp193 = load i8*, i8** %message, align 8
  store i8* %tmp193, i8** %start_of_bodies, align 8
  %tmp194 = load i8*, i8** %start_of_bodies, align 8
  %tmp195 = load i8**, i8*** %dest.addr, align 8
  %tmp196 = load i8*, i8** %tmp195, align 8
  %sub.ptr.lhs.cast244 = ptrtoint i8* %tmp194 to i64
  %sub.ptr.rhs.cast245 = ptrtoint i8* %tmp196 to i64
  %sub.ptr.sub246 = sub i64 %sub.ptr.lhs.cast244, %sub.ptr.rhs.cast245
  store i64 %sub.ptr.sub246, i64* %total_length, align 8
  %tmp197 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies247 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp197, i32 0, i32 31
  %call248 = call i32 @osip_list_eol(%struct.osip_list* %bodies247, i32 0)
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.then250, label %if.end259

if.then250:                                       ; preds = %if.end241
  %tmp198 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property251 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp198, i32 0, i32 32
  store i32 1, i32* %message_property251, align 4
  %tmp199 = load i8**, i8*** %dest.addr, align 8
  %tmp200 = load i8*, i8** %tmp199, align 8
  %call252 = call i8* @osip_strdup(i8* %tmp200)
  %tmp201 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message253 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp201, i32 0, i32 33
  store i8* %call252, i8** %message253, align 8
  %tmp202 = load i64, i64* %total_length, align 8
  %tmp203 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length254 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp203, i32 0, i32 34
  store i64 %tmp202, i64* %message_length254, align 8
  %tmp204 = load i64*, i64** %message_length.addr, align 8
  %cmp255 = icmp ne i64* %tmp204, null
  br i1 %cmp255, label %if.then257, label %if.end258

if.then257:                                       ; preds = %if.then250
  %tmp205 = load i64, i64* %total_length, align 8
  %tmp206 = load i64*, i64** %message_length.addr, align 8
  store i64 %tmp205, i64* %tmp206, align 8
  br label %if.end258

if.end258:                                        ; preds = %if.then257, %if.then250
  store i32 0, i32* %retval
  br label %return

if.end259:                                        ; preds = %if.end241
  %tmp207 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version260 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp207, i32 0, i32 21
  %tmp208 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version260, align 8
  %cmp261 = icmp ne %struct.osip_content_length* %tmp208, null
  br i1 %cmp261, label %land.lhs.true263, label %if.end347

land.lhs.true263:                                 ; preds = %if.end259
  %tmp209 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type264 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp209, i32 0, i32 17
  %tmp210 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type264, align 8
  %tobool265 = icmp ne %struct.osip_content_type* %tmp210, null
  br i1 %tobool265, label %land.lhs.true266, label %if.end347

land.lhs.true266:                                 ; preds = %land.lhs.true263
  %tmp211 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type267 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp211, i32 0, i32 17
  %tmp212 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type267, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp212, i32 0, i32 0
  %tmp213 = load i8*, i8** %type, align 8
  %tobool268 = icmp ne i8* %tmp213, null
  br i1 %tobool268, label %land.lhs.true269, label %if.end347

land.lhs.true269:                                 ; preds = %land.lhs.true266
  %tmp214 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type270 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp214, i32 0, i32 17
  %tmp215 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type270, align 8
  %type271 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp215, i32 0, i32 0
  %tmp216 = load i8*, i8** %type271, align 8
  %call272 = call i32 @osip_strcasecmp(i8* %tmp216, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str492, i32 0, i32 0))
  %tobool273 = icmp ne i32 %call272, 0
  br i1 %tobool273, label %if.end347, label %if.then274

if.then274:                                       ; preds = %land.lhs.true269
  store %struct.osip_uri_param* null, %struct.osip_uri_param** %ct_param, align 8
  %tmp217 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type276 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp217, i32 0, i32 17
  %tmp218 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type276, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp218, i32 0, i32 2
  %call277 = call i32 @osip_uri_param_get_byname(%struct.osip_list* %gen_params, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str593, i32 0, i32 0), %struct.osip_uri_param** %ct_param)
  store i32 %call277, i32* %i, align 4
  %tmp219 = load i32, i32* %i, align 4
  %cmp278 = icmp sge i32 %tmp219, 0
  br i1 %cmp278, label %land.lhs.true280, label %if.end346

land.lhs.true280:                                 ; preds = %if.then274
  %tmp220 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %tobool281 = icmp ne %struct.osip_uri_param* %tmp220, null
  br i1 %tobool281, label %land.lhs.true282, label %if.end346

land.lhs.true282:                                 ; preds = %land.lhs.true280
  %tmp221 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp221, i32 0, i32 1
  %tmp222 = load i8*, i8** %gvalue, align 8
  %tobool283 = icmp ne i8* %tmp222, null
  br i1 %tobool283, label %if.then284, label %if.end346

if.then284:                                       ; preds = %land.lhs.true282
  %tmp223 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue286 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp223, i32 0, i32 1
  %tmp224 = load i8*, i8** %gvalue286, align 8
  %call287 = call i64 @strlen(i8* %tmp224) #7
  store i64 %call287, i64* %len, align 8
  %tmp225 = load i64, i64* %len, align 8
  %cmp288 = icmp ugt i64 %tmp225, 70
  br i1 %cmp288, label %if.then290, label %if.end299

if.then290:                                       ; preds = %if.then284
  %tmp226 = load i8**, i8*** %dest.addr, align 8
  %tmp227 = load i8*, i8** %tmp226, align 8
  %cmp291 = icmp ne i8* %tmp227, null
  br i1 %cmp291, label %if.then293, label %if.end298

if.then293:                                       ; preds = %if.then290
  %tmp228 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool294 = icmp ne void (i8*)* %tmp228, null
  br i1 %tobool294, label %if.then295, label %if.else296

if.then295:                                       ; preds = %if.then293
  %tmp229 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp230 = load i8**, i8*** %dest.addr, align 8
  %tmp231 = load i8*, i8** %tmp230, align 8
  call void %tmp229(i8* %tmp231)
  br label %if.end297

if.else296:                                       ; preds = %if.then293
  %tmp232 = load i8**, i8*** %dest.addr, align 8
  %tmp233 = load i8*, i8** %tmp232, align 8
  call void @free(i8* %tmp233) #8
  br label %if.end297

if.end297:                                        ; preds = %if.else296, %if.then295
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.then290
  %tmp234 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp234, align 8
  store i32 -5, i32* %retval
  br label %return

if.end299:                                        ; preds = %if.then284
  %tmp235 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool300 = icmp ne i8* (i64)* %tmp235, null
  br i1 %tobool300, label %cond.true301, label %cond.false304

cond.true301:                                     ; preds = %if.end299
  %tmp236 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp237 = load i64, i64* %len, align 8
  %add302 = add i64 %tmp237, 5
  %call303 = call i8* %tmp236(i64 %add302)
  br label %cond.end307

cond.false304:                                    ; preds = %if.end299
  %tmp238 = load i64, i64* %len, align 8
  %add305 = add i64 %tmp238, 5
  %call306 = call noalias i8* @malloc(i64 %add305) #8
  br label %cond.end307

cond.end307:                                      ; preds = %cond.false304, %cond.true301
  %cond308 = phi i8* [ %call303, %cond.true301 ], [ %call306, %cond.false304 ]
  store i8* %cond308, i8** %boundary, align 8
  %tmp239 = load i8*, i8** %boundary, align 8
  %cmp309 = icmp eq i8* %tmp239, null
  br i1 %cmp309, label %if.then311, label %if.end320

if.then311:                                       ; preds = %cond.end307
  %tmp240 = load i8**, i8*** %dest.addr, align 8
  %tmp241 = load i8*, i8** %tmp240, align 8
  %cmp312 = icmp ne i8* %tmp241, null
  br i1 %cmp312, label %if.then314, label %if.end319

if.then314:                                       ; preds = %if.then311
  %tmp242 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool315 = icmp ne void (i8*)* %tmp242, null
  br i1 %tobool315, label %if.then316, label %if.else317

if.then316:                                       ; preds = %if.then314
  %tmp243 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp244 = load i8**, i8*** %dest.addr, align 8
  %tmp245 = load i8*, i8** %tmp244, align 8
  call void %tmp243(i8* %tmp245)
  br label %if.end318

if.else317:                                       ; preds = %if.then314
  %tmp246 = load i8**, i8*** %dest.addr, align 8
  %tmp247 = load i8*, i8** %tmp246, align 8
  call void @free(i8* %tmp247) #8
  br label %if.end318

if.end318:                                        ; preds = %if.else317, %if.then316
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then311
  %tmp248 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp248, align 8
  store i32 -4, i32* %retval
  br label %return

if.end320:                                        ; preds = %cond.end307
  %tmp249 = load i8*, i8** %boundary, align 8
  %call321 = call i8* @osip_strncpy(i8* %tmp249, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  %tmp250 = load i8*, i8** %boundary, align 8
  %add.ptr322 = getelementptr inbounds i8, i8* %tmp250, i64 2
  %call323 = call i8* @osip_strncpy(i8* %add.ptr322, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str694, i32 0, i32 0), i64 2)
  %tmp251 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue324 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp251, i32 0, i32 1
  %tmp252 = load i8*, i8** %gvalue324, align 8
  %arrayidx325 = getelementptr inbounds i8, i8* %tmp252, i64 0
  %tmp253 = load i8, i8* %arrayidx325, align 1
  %conv326 = sext i8 %tmp253 to i32
  %cmp327 = icmp eq i32 %conv326, 34
  br i1 %cmp327, label %land.lhs.true329, label %if.else341

land.lhs.true329:                                 ; preds = %if.end320
  %tmp254 = load i64, i64* %len, align 8
  %sub = sub i64 %tmp254, 1
  %tmp255 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue330 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp255, i32 0, i32 1
  %tmp256 = load i8*, i8** %gvalue330, align 8
  %arrayidx331 = getelementptr inbounds i8, i8* %tmp256, i64 %sub
  %tmp257 = load i8, i8* %arrayidx331, align 1
  %conv332 = sext i8 %tmp257 to i32
  %cmp333 = icmp eq i32 %conv332, 34
  br i1 %cmp333, label %if.then335, label %if.else341

if.then335:                                       ; preds = %land.lhs.true329
  %tmp258 = load i8*, i8** %boundary, align 8
  %add.ptr336 = getelementptr inbounds i8, i8* %tmp258, i64 4
  %tmp259 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue337 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp259, i32 0, i32 1
  %tmp260 = load i8*, i8** %gvalue337, align 8
  %add.ptr338 = getelementptr inbounds i8, i8* %tmp260, i64 1
  %tmp261 = load i64, i64* %len, align 8
  %sub339 = sub i64 %tmp261, 2
  %call340 = call i8* @osip_strncpy(i8* %add.ptr336, i8* %add.ptr338, i64 %sub339)
  br label %if.end345

if.else341:                                       ; preds = %land.lhs.true329, %if.end320
  %tmp262 = load i8*, i8** %boundary, align 8
  %add.ptr342 = getelementptr inbounds i8, i8* %tmp262, i64 4
  %tmp263 = load %struct.osip_uri_param*, %struct.osip_uri_param** %ct_param, align 8
  %gvalue343 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp263, i32 0, i32 1
  %tmp264 = load i8*, i8** %gvalue343, align 8
  %tmp265 = load i64, i64* %len, align 8
  %call344 = call i8* @osip_strncpy(i8* %add.ptr342, i8* %tmp264, i64 %tmp265)
  br label %if.end345

if.end345:                                        ; preds = %if.else341, %if.then335
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %land.lhs.true282, %land.lhs.true280, %if.then274
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %land.lhs.true269, %land.lhs.true266, %land.lhs.true263, %if.end259
  store i32 0, i32* %pos, align 4
  br label %while.cond348

while.cond348:                                    ; preds = %if.end465, %if.end347
  %tmp266 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies349 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp266, i32 0, i32 31
  %tmp267 = load i32, i32* %pos, align 4
  %call350 = call i32 @osip_list_eol(%struct.osip_list* %bodies349, i32 %tmp267)
  %tobool351 = icmp ne i32 %call350, 0
  %lnot352 = xor i1 %tobool351, true
  br i1 %lnot352, label %while.body353, label %while.end468

while.body353:                                    ; preds = %while.cond348
  %tmp268 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies356 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp268, i32 0, i32 31
  %tmp269 = load i32, i32* %pos, align 4
  %call357 = call i8* @osip_list_get(%struct.osip_list* %bodies356, i32 %tmp269)
  %tmp270 = bitcast i8* %call357 to %struct.osip_body*
  store %struct.osip_body* %tmp270, %struct.osip_body** %body, align 8
  %tmp271 = load i8*, i8** %boundary, align 8
  %tobool358 = icmp ne i8* %tmp271, null
  br i1 %tobool358, label %if.then359, label %if.end362

if.then359:                                       ; preds = %while.body353
  %tmp272 = load i8*, i8** %message, align 8
  %tmp273 = load i8*, i8** %boundary, align 8
  %call360 = call i8* @osip_str_append(i8* %tmp272, i8* %tmp273)
  store i8* %call360, i8** %message, align 8
  %tmp274 = load i8*, i8** %message, align 8
  %call361 = call i8* @osip_strn_append(i8* %tmp274, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call361, i8** %message, align 8
  br label %if.end362

if.end362:                                        ; preds = %if.then359, %while.body353
  %tmp275 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %call363 = call i32 @osip_body_to_str(%struct.osip_body* %tmp275, i8** %tmp, i64* %body_length)
  store i32 %call363, i32* %i, align 4
  %tmp276 = load i32, i32* %i, align 4
  %cmp364 = icmp ne i32 %tmp276, 0
  br i1 %cmp364, label %if.then366, label %if.end386

if.then366:                                       ; preds = %if.end362
  %tmp277 = load i8**, i8*** %dest.addr, align 8
  %tmp278 = load i8*, i8** %tmp277, align 8
  %cmp367 = icmp ne i8* %tmp278, null
  br i1 %cmp367, label %if.then369, label %if.end374

if.then369:                                       ; preds = %if.then366
  %tmp279 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool370 = icmp ne void (i8*)* %tmp279, null
  br i1 %tobool370, label %if.then371, label %if.else372

if.then371:                                       ; preds = %if.then369
  %tmp280 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp281 = load i8**, i8*** %dest.addr, align 8
  %tmp282 = load i8*, i8** %tmp281, align 8
  call void %tmp280(i8* %tmp282)
  br label %if.end373

if.else372:                                       ; preds = %if.then369
  %tmp283 = load i8**, i8*** %dest.addr, align 8
  %tmp284 = load i8*, i8** %tmp283, align 8
  call void @free(i8* %tmp284) #8
  br label %if.end373

if.end373:                                        ; preds = %if.else372, %if.then371
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %if.then366
  %tmp285 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp285, align 8
  %tmp286 = load i8*, i8** %boundary, align 8
  %tobool375 = icmp ne i8* %tmp286, null
  br i1 %tobool375, label %if.then376, label %if.end385

if.then376:                                       ; preds = %if.end374
  %tmp287 = load i8*, i8** %boundary, align 8
  %cmp377 = icmp ne i8* %tmp287, null
  br i1 %cmp377, label %if.then379, label %if.end384

if.then379:                                       ; preds = %if.then376
  %tmp288 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool380 = icmp ne void (i8*)* %tmp288, null
  br i1 %tobool380, label %if.then381, label %if.else382

if.then381:                                       ; preds = %if.then379
  %tmp289 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp290 = load i8*, i8** %boundary, align 8
  call void %tmp289(i8* %tmp290)
  br label %if.end383

if.else382:                                       ; preds = %if.then379
  %tmp291 = load i8*, i8** %boundary, align 8
  call void @free(i8* %tmp291) #8
  br label %if.end383

if.end383:                                        ; preds = %if.else382, %if.then381
  br label %if.end384

if.end384:                                        ; preds = %if.end383, %if.then376
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.end374
  %tmp292 = load i32, i32* %i, align 4
  store i32 %tmp292, i32* %retval
  br label %return

if.end386:                                        ; preds = %if.end362
  %tmp293 = load i64, i64* %malloc_size, align 8
  %tmp294 = load i8*, i8** %message, align 8
  %tmp295 = load i8**, i8*** %dest.addr, align 8
  %tmp296 = load i8*, i8** %tmp295, align 8
  %sub.ptr.lhs.cast387 = ptrtoint i8* %tmp294 to i64
  %sub.ptr.rhs.cast388 = ptrtoint i8* %tmp296 to i64
  %sub.ptr.sub389 = sub i64 %sub.ptr.lhs.cast387, %sub.ptr.rhs.cast388
  %add390 = add nsw i64 %sub.ptr.sub389, 100
  %tmp297 = load i64, i64* %body_length, align 8
  %add391 = add i64 %add390, %tmp297
  %cmp392 = icmp ult i64 %tmp293, %add391
  br i1 %cmp392, label %if.then394, label %if.end456

if.then394:                                       ; preds = %if.end386
  %tmp298 = load i8*, i8** %message, align 8
  %tmp299 = load i8**, i8*** %dest.addr, align 8
  %tmp300 = load i8*, i8** %tmp299, align 8
  %sub.ptr.lhs.cast396 = ptrtoint i8* %tmp298 to i64
  %sub.ptr.rhs.cast397 = ptrtoint i8* %tmp300 to i64
  %sub.ptr.sub398 = sub i64 %sub.ptr.lhs.cast396, %sub.ptr.rhs.cast397
  store i64 %sub.ptr.sub398, i64* %size, align 8
  store i32 0, i32* %offset_content_length_to_modify, align 4
  %tmp301 = load i8*, i8** %start_of_bodies, align 8
  %tmp302 = load i8**, i8*** %dest.addr, align 8
  %tmp303 = load i8*, i8** %tmp302, align 8
  %sub.ptr.lhs.cast401 = ptrtoint i8* %tmp301 to i64
  %sub.ptr.rhs.cast402 = ptrtoint i8* %tmp303 to i64
  %sub.ptr.sub403 = sub i64 %sub.ptr.lhs.cast401, %sub.ptr.rhs.cast402
  %conv404 = trunc i64 %sub.ptr.sub403 to i32
  store i32 %conv404, i32* %offset_of_body, align 4
  %tmp304 = load i8*, i8** %content_length_to_modify, align 8
  %cmp405 = icmp ne i8* %tmp304, null
  br i1 %cmp405, label %if.then407, label %if.end412

if.then407:                                       ; preds = %if.then394
  %tmp305 = load i8*, i8** %content_length_to_modify, align 8
  %tmp306 = load i8**, i8*** %dest.addr, align 8
  %tmp307 = load i8*, i8** %tmp306, align 8
  %sub.ptr.lhs.cast408 = ptrtoint i8* %tmp305 to i64
  %sub.ptr.rhs.cast409 = ptrtoint i8* %tmp307 to i64
  %sub.ptr.sub410 = sub i64 %sub.ptr.lhs.cast408, %sub.ptr.rhs.cast409
  %conv411 = trunc i64 %sub.ptr.sub410 to i32
  store i32 %conv411, i32* %offset_content_length_to_modify, align 4
  br label %if.end412

if.end412:                                        ; preds = %if.then407, %if.then394
  %tmp308 = load i8*, i8** %message, align 8
  %tmp309 = load i8**, i8*** %dest.addr, align 8
  %tmp310 = load i8*, i8** %tmp309, align 8
  %sub.ptr.lhs.cast413 = ptrtoint i8* %tmp308 to i64
  %sub.ptr.rhs.cast414 = ptrtoint i8* %tmp310 to i64
  %sub.ptr.sub415 = sub i64 %sub.ptr.lhs.cast413, %sub.ptr.rhs.cast414
  %tmp311 = load i64, i64* %body_length, align 8
  %add416 = add i64 %sub.ptr.sub415, %tmp311
  %add417 = add i64 %add416, 100
  store i64 %add417, i64* %malloc_size, align 8
  %tmp312 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool418 = icmp ne i8* (i8*, i64)* %tmp312, null
  br i1 %tobool418, label %cond.true419, label %cond.false421

cond.true419:                                     ; preds = %if.end412
  %tmp313 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp314 = load i8**, i8*** %dest.addr, align 8
  %tmp315 = load i8*, i8** %tmp314, align 8
  %tmp316 = load i64, i64* %malloc_size, align 8
  %call420 = call i8* %tmp313(i8* %tmp315, i64 %tmp316)
  br label %cond.end423

cond.false421:                                    ; preds = %if.end412
  %tmp317 = load i8**, i8*** %dest.addr, align 8
  %tmp318 = load i8*, i8** %tmp317, align 8
  %tmp319 = load i64, i64* %malloc_size, align 8
  %call422 = call i8* @realloc(i8* %tmp318, i64 %tmp319) #8
  br label %cond.end423

cond.end423:                                      ; preds = %cond.false421, %cond.true419
  %cond424 = phi i8* [ %call420, %cond.true419 ], [ %call422, %cond.false421 ]
  %tmp320 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond424, i8** %tmp320, align 8
  %tmp321 = load i8**, i8*** %dest.addr, align 8
  %tmp322 = load i8*, i8** %tmp321, align 8
  %cmp425 = icmp eq i8* %tmp322, null
  br i1 %cmp425, label %if.then427, label %if.end447

if.then427:                                       ; preds = %cond.end423
  %tmp323 = load i8*, i8** %tmp, align 8
  %cmp428 = icmp ne i8* %tmp323, null
  br i1 %cmp428, label %if.then430, label %if.end435

if.then430:                                       ; preds = %if.then427
  %tmp324 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool431 = icmp ne void (i8*)* %tmp324, null
  br i1 %tobool431, label %if.then432, label %if.else433

if.then432:                                       ; preds = %if.then430
  %tmp325 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp326 = load i8*, i8** %tmp, align 8
  call void %tmp325(i8* %tmp326)
  br label %if.end434

if.else433:                                       ; preds = %if.then430
  %tmp327 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp327) #8
  br label %if.end434

if.end434:                                        ; preds = %if.else433, %if.then432
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %if.then427
  %tmp328 = load i8*, i8** %boundary, align 8
  %tobool436 = icmp ne i8* %tmp328, null
  br i1 %tobool436, label %if.then437, label %if.end446

if.then437:                                       ; preds = %if.end435
  %tmp329 = load i8*, i8** %boundary, align 8
  %cmp438 = icmp ne i8* %tmp329, null
  br i1 %cmp438, label %if.then440, label %if.end445

if.then440:                                       ; preds = %if.then437
  %tmp330 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool441 = icmp ne void (i8*)* %tmp330, null
  br i1 %tobool441, label %if.then442, label %if.else443

if.then442:                                       ; preds = %if.then440
  %tmp331 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp332 = load i8*, i8** %boundary, align 8
  call void %tmp331(i8* %tmp332)
  br label %if.end444

if.else443:                                       ; preds = %if.then440
  %tmp333 = load i8*, i8** %boundary, align 8
  call void @free(i8* %tmp333) #8
  br label %if.end444

if.end444:                                        ; preds = %if.else443, %if.then442
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.then437
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.end435
  store i32 -4, i32* %retval
  br label %return

if.end447:                                        ; preds = %cond.end423
  %tmp334 = load i8**, i8*** %dest.addr, align 8
  %tmp335 = load i8*, i8** %tmp334, align 8
  %tmp336 = load i32, i32* %offset_of_body, align 4
  %idx.ext = sext i32 %tmp336 to i64
  %add.ptr448 = getelementptr inbounds i8, i8* %tmp335, i64 %idx.ext
  store i8* %add.ptr448, i8** %start_of_bodies, align 8
  %tmp337 = load i8*, i8** %content_length_to_modify, align 8
  %cmp449 = icmp ne i8* %tmp337, null
  br i1 %cmp449, label %if.then451, label %if.end454

if.then451:                                       ; preds = %if.end447
  %tmp338 = load i8**, i8*** %dest.addr, align 8
  %tmp339 = load i8*, i8** %tmp338, align 8
  %tmp340 = load i32, i32* %offset_content_length_to_modify, align 4
  %idx.ext452 = sext i32 %tmp340 to i64
  %add.ptr453 = getelementptr inbounds i8, i8* %tmp339, i64 %idx.ext452
  store i8* %add.ptr453, i8** %content_length_to_modify, align 8
  br label %if.end454

if.end454:                                        ; preds = %if.then451, %if.end447
  %tmp341 = load i8**, i8*** %dest.addr, align 8
  %tmp342 = load i8*, i8** %tmp341, align 8
  %tmp343 = load i64, i64* %size, align 8
  %add.ptr455 = getelementptr inbounds i8, i8* %tmp342, i64 %tmp343
  store i8* %add.ptr455, i8** %message, align 8
  br label %if.end456

if.end456:                                        ; preds = %if.end454, %if.end386
  %tmp344 = load i8*, i8** %message, align 8
  %tmp345 = load i8*, i8** %tmp, align 8
  %tmp346 = load i64, i64* %body_length, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp344, i8* %tmp345, i64 %tmp346, i32 1, i1 false)
  %tmp347 = load i64, i64* %body_length, align 8
  %tmp348 = load i8*, i8** %message, align 8
  %arrayidx457 = getelementptr inbounds i8, i8* %tmp348, i64 %tmp347
  store i8 0, i8* %arrayidx457, align 1
  %tmp349 = load i8*, i8** %tmp, align 8
  %cmp458 = icmp ne i8* %tmp349, null
  br i1 %cmp458, label %if.then460, label %if.end465

if.then460:                                       ; preds = %if.end456
  %tmp350 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool461 = icmp ne void (i8*)* %tmp350, null
  br i1 %tobool461, label %if.then462, label %if.else463

if.then462:                                       ; preds = %if.then460
  %tmp351 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp352 = load i8*, i8** %tmp, align 8
  call void %tmp351(i8* %tmp352)
  br label %if.end464

if.else463:                                       ; preds = %if.then460
  %tmp353 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp353) #8
  br label %if.end464

if.end464:                                        ; preds = %if.else463, %if.then462
  br label %if.end465

if.end465:                                        ; preds = %if.end464, %if.end456
  %tmp354 = load i8*, i8** %message, align 8
  %tmp355 = load i64, i64* %body_length, align 8
  %add.ptr466 = getelementptr inbounds i8, i8* %tmp354, i64 %tmp355
  store i8* %add.ptr466, i8** %message, align 8
  %tmp356 = load i32, i32* %pos, align 4
  %inc467 = add nsw i32 %tmp356, 1
  store i32 %inc467, i32* %pos, align 4
  br label %while.cond348

while.end468:                                     ; preds = %while.cond348
  %tmp357 = load i8*, i8** %boundary, align 8
  %tobool469 = icmp ne i8* %tmp357, null
  br i1 %tobool469, label %if.then470, label %if.end482

if.then470:                                       ; preds = %while.end468
  %tmp358 = load i8*, i8** %message, align 8
  %tmp359 = load i8*, i8** %boundary, align 8
  %call471 = call i8* @osip_str_append(i8* %tmp358, i8* %tmp359)
  store i8* %call471, i8** %message, align 8
  %tmp360 = load i8*, i8** %message, align 8
  %call472 = call i8* @osip_strn_append(i8* %tmp360, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str694, i32 0, i32 0), i64 2)
  store i8* %call472, i8** %message, align 8
  %tmp361 = load i8*, i8** %message, align 8
  %call473 = call i8* @osip_strn_append(i8* %tmp361, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call473, i8** %message, align 8
  %tmp362 = load i8*, i8** %boundary, align 8
  %cmp474 = icmp ne i8* %tmp362, null
  br i1 %cmp474, label %if.then476, label %if.end481

if.then476:                                       ; preds = %if.then470
  %tmp363 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool477 = icmp ne void (i8*)* %tmp363, null
  br i1 %tobool477, label %if.then478, label %if.else479

if.then478:                                       ; preds = %if.then476
  %tmp364 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp365 = load i8*, i8** %boundary, align 8
  call void %tmp364(i8* %tmp365)
  br label %if.end480

if.else479:                                       ; preds = %if.then476
  %tmp366 = load i8*, i8** %boundary, align 8
  call void @free(i8* %tmp366) #8
  br label %if.end480

if.end480:                                        ; preds = %if.else479, %if.then478
  br label %if.end481

if.end481:                                        ; preds = %if.end480, %if.then470
  store i8* null, i8** %boundary, align 8
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %while.end468
  %tmp367 = load i8*, i8** %content_length_to_modify, align 8
  %cmp483 = icmp eq i8* %tmp367, null
  br i1 %cmp483, label %if.then485, label %if.end494

if.then485:                                       ; preds = %if.end482
  %tmp368 = load i8**, i8*** %dest.addr, align 8
  %tmp369 = load i8*, i8** %tmp368, align 8
  %cmp486 = icmp ne i8* %tmp369, null
  br i1 %cmp486, label %if.then488, label %if.end493

if.then488:                                       ; preds = %if.then485
  %tmp370 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool489 = icmp ne void (i8*)* %tmp370, null
  br i1 %tobool489, label %if.then490, label %if.else491

if.then490:                                       ; preds = %if.then488
  %tmp371 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp372 = load i8**, i8*** %dest.addr, align 8
  %tmp373 = load i8*, i8** %tmp372, align 8
  call void %tmp371(i8* %tmp373)
  br label %if.end492

if.else491:                                       ; preds = %if.then488
  %tmp374 = load i8**, i8*** %dest.addr, align 8
  %tmp375 = load i8*, i8** %tmp374, align 8
  call void @free(i8* %tmp375) #8
  br label %if.end492

if.end492:                                        ; preds = %if.else491, %if.then490
  br label %if.end493

if.end493:                                        ; preds = %if.end492, %if.then485
  %tmp376 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp376, align 8
  store i32 -5, i32* %retval
  br label %return

if.end494:                                        ; preds = %if.end482
  %tmp377 = load i8*, i8** %message, align 8
  %tmp378 = load i8*, i8** %start_of_bodies, align 8
  %sub.ptr.lhs.cast497 = ptrtoint i8* %tmp377 to i64
  %sub.ptr.rhs.cast498 = ptrtoint i8* %tmp378 to i64
  %sub.ptr.sub499 = sub i64 %sub.ptr.lhs.cast497, %sub.ptr.rhs.cast498
  store i64 %sub.ptr.sub499, i64* %size496, align 8
  %tmp379 = load i64, i64* %size496, align 8
  %tmp380 = load i64, i64* %total_length, align 8
  %add501 = add i64 %tmp380, %tmp379
  store i64 %add501, i64* %total_length, align 8
  %arraydecay502 = getelementptr inbounds [15 x i8], [15 x i8]* %tmp2, i32 0, i32 0
  %tmp381 = load i64, i64* %size496, align 8
  %conv503 = trunc i64 %tmp381 to i32
  %call504 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay502, i64 15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str795, i32 0, i32 0), i32 %conv503) #8
  %tmp382 = load i8*, i8** %content_length_to_modify, align 8
  %add.ptr505 = getelementptr inbounds i8, i8* %tmp382, i64 5
  %arraydecay506 = getelementptr inbounds [15 x i8], [15 x i8]* %tmp2, i32 0, i32 0
  %call507 = call i64 @strlen(i8* %arraydecay506) #7
  %idx.neg = sub i64 0, %call507
  %add.ptr508 = getelementptr inbounds i8, i8* %add.ptr505, i64 %idx.neg
  %arraydecay509 = getelementptr inbounds [15 x i8], [15 x i8]* %tmp2, i32 0, i32 0
  %arraydecay510 = getelementptr inbounds [15 x i8], [15 x i8]* %tmp2, i32 0, i32 0
  %call511 = call i64 @strlen(i8* %arraydecay510) #7
  %call512 = call i8* @strncpy(i8* %add.ptr508, i8* %arraydecay509, i64 %call511) #8
  %tmp383 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property513 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp383, i32 0, i32 32
  store i32 1, i32* %message_property513, align 4
  %tmp384 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool514 = icmp ne i8* (i64)* %tmp384, null
  br i1 %tobool514, label %cond.true515, label %cond.false518

cond.true515:                                     ; preds = %if.end494
  %tmp385 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp386 = load i64, i64* %total_length, align 8
  %add516 = add i64 %tmp386, 1
  %call517 = call i8* %tmp385(i64 %add516)
  br label %cond.end521

cond.false518:                                    ; preds = %if.end494
  %tmp387 = load i64, i64* %total_length, align 8
  %add519 = add i64 %tmp387, 1
  %call520 = call noalias i8* @malloc(i64 %add519) #8
  br label %cond.end521

cond.end521:                                      ; preds = %cond.false518, %cond.true515
  %cond522 = phi i8* [ %call517, %cond.true515 ], [ %call520, %cond.false518 ]
  %tmp388 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message523 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp388, i32 0, i32 33
  store i8* %cond522, i8** %message523, align 8
  %tmp389 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message524 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp389, i32 0, i32 33
  %tmp390 = load i8*, i8** %message524, align 8
  %cmp525 = icmp ne i8* %tmp390, null
  br i1 %cmp525, label %if.then527, label %if.end536

if.then527:                                       ; preds = %cond.end521
  %tmp391 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message528 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp391, i32 0, i32 33
  %tmp392 = load i8*, i8** %message528, align 8
  %tmp393 = load i8**, i8*** %dest.addr, align 8
  %tmp394 = load i8*, i8** %tmp393, align 8
  %tmp395 = load i64, i64* %total_length, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp392, i8* %tmp394, i64 %tmp395, i32 1, i1 false)
  %tmp396 = load i64, i64* %total_length, align 8
  %tmp397 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message529 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp397, i32 0, i32 33
  %tmp398 = load i8*, i8** %message529, align 8
  %arrayidx530 = getelementptr inbounds i8, i8* %tmp398, i64 %tmp396
  store i8 0, i8* %arrayidx530, align 1
  %tmp399 = load i64, i64* %total_length, align 8
  %tmp400 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_length531 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp400, i32 0, i32 34
  store i64 %tmp399, i64* %message_length531, align 8
  %tmp401 = load i64*, i64** %message_length.addr, align 8
  %cmp532 = icmp ne i64* %tmp401, null
  br i1 %cmp532, label %if.then534, label %if.end535

if.then534:                                       ; preds = %if.then527
  %tmp402 = load i64, i64* %total_length, align 8
  %tmp403 = load i64*, i64** %message_length.addr, align 8
  store i64 %tmp402, i64* %tmp403, align 8
  br label %if.end535

if.end535:                                        ; preds = %if.then534, %if.then527
  br label %if.end536

if.end536:                                        ; preds = %if.end535, %cond.end521
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end536, %if.end493, %if.end446, %if.end385, %if.end319, %if.end298, %if.end258, %if.end230, %if.then214, %if.end197, %if.end182, %if.end161, %if.end54, %if.then41, %if.end20, %if.then12, %if.then
  %tmp404 = load i32, i32* %retval
  ret i32 %tmp404
}

; Function Attrs: nounwind uwtable
define internal i32 @_osip_message_realloc(i8** %message, i8** %dest, i64 %needed, i64* %malloc_size) #0 {
entry:
  %retval = alloca i32, align 4
  %message.addr = alloca i8**, align 8
  %dest.addr = alloca i8**, align 8
  %needed.addr = alloca i64, align 8
  %malloc_size.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  store i8** %message, i8*** %message.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64 %needed, i64* %needed.addr, align 8
  store i64* %malloc_size, i64** %malloc_size.addr, align 8
  %tmp = load i8**, i8*** %message.addr, align 8
  %tmp1 = load i8*, i8** %tmp, align 8
  %tmp2 = load i8**, i8*** %dest.addr, align 8
  %tmp3 = load i8*, i8** %tmp2, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i64 %sub.ptr.sub, i64* %size, align 8
  %tmp4 = load i64*, i64** %malloc_size.addr, align 8
  %tmp5 = load i64, i64* %tmp4, align 8
  %tmp6 = load i64, i64* %size, align 8
  %tmp7 = load i64, i64* %needed.addr, align 8
  %add = add i64 %tmp6, %tmp7
  %add1 = add i64 %add, 100
  %cmp = icmp ult i64 %tmp5, %add1
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %tmp8 = load i64, i64* %size, align 8
  %tmp9 = load i64, i64* %needed.addr, align 8
  %add2 = add i64 %tmp8, %tmp9
  %add3 = add i64 %add2, 100
  %tmp10 = load i64*, i64** %malloc_size.addr, align 8
  store i64 %add3, i64* %tmp10, align 8
  %tmp11 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool = icmp ne i8* (i8*, i64)* %tmp11, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %tmp12 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp13 = load i8**, i8*** %dest.addr, align 8
  %tmp14 = load i8*, i8** %tmp13, align 8
  %tmp15 = load i64*, i64** %malloc_size.addr, align 8
  %tmp16 = load i64, i64* %tmp15, align 8
  %call = call i8* %tmp12(i8* %tmp14, i64 %tmp16)
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %tmp17 = load i8**, i8*** %dest.addr, align 8
  %tmp18 = load i8*, i8** %tmp17, align 8
  %tmp19 = load i64*, i64** %malloc_size.addr, align 8
  %tmp20 = load i64, i64* %tmp19, align 8
  %call4 = call i8* @realloc(i8* %tmp18, i64 %tmp20) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call4, %cond.false ]
  %tmp21 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp21, align 8
  %tmp22 = load i8**, i8*** %dest.addr, align 8
  %tmp23 = load i8*, i8** %tmp22, align 8
  %cmp5 = icmp eq i8* %tmp23, null
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp24 = load i8**, i8*** %dest.addr, align 8
  %tmp25 = load i8*, i8** %tmp24, align 8
  %tmp26 = load i64, i64* %size, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp25, i64 %tmp26
  %tmp27 = load i8**, i8*** %message.addr, align 8
  store i8* %add.ptr, i8** %tmp27, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end7, %if.then6
  %tmp28 = load i32, i32* %retval
  ret i32 %tmp28
}

; Function Attrs: nounwind uwtable
define internal i32 @strcat_headers_one_per_line(i8** %_string, i64* %malloc_size, i8** %_message, %struct.osip_list* %headers, i8* %header, i64 %size_of_header, i32 (i8*, i8**)* %xxx_to_str, i8** %next) #0 {
entry:
  %retval = alloca i32, align 4
  %_string.addr = alloca i8**, align 8
  %malloc_size.addr = alloca i64*, align 8
  %_message.addr = alloca i8**, align 8
  %headers.addr = alloca %struct.osip_list*, align 8
  %header.addr = alloca i8*, align 8
  %size_of_header.addr = alloca i64, align 8
  %xxx_to_str.addr = alloca i32 (i8*, i8**)*, align 8
  %next.addr = alloca i8**, align 8
  %string = alloca i8*, align 8
  %message = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %elt = alloca i8*, align 8
  %size = alloca i64, align 8
  %size43 = alloca i64, align 8
  store i8** %_string, i8*** %_string.addr, align 8
  store i64* %malloc_size, i64** %malloc_size.addr, align 8
  store i8** %_message, i8*** %_message.addr, align 8
  store %struct.osip_list* %headers, %struct.osip_list** %headers.addr, align 8
  store i8* %header, i8** %header.addr, align 8
  store i64 %size_of_header, i64* %size_of_header.addr, align 8
  store i32 (i8*, i8**)* %xxx_to_str, i32 (i8*, i8**)** %xxx_to_str.addr, align 8
  store i8** %next, i8*** %next.addr, align 8
  store i32 0, i32* %pos, align 4
  %tmp1 = load i8**, i8*** %_string.addr, align 8
  %tmp2 = load i8*, i8** %tmp1, align 8
  store i8* %tmp2, i8** %string, align 8
  %tmp3 = load i8**, i8*** %_message.addr, align 8
  %tmp4 = load i8*, i8** %tmp3, align 8
  store i8* %tmp4, i8** %message, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end79, %entry
  %tmp5 = load %struct.osip_list*, %struct.osip_list** %headers.addr, align 8
  %tmp6 = load i32, i32* %pos, align 4
  %call = call i32 @osip_list_eol(%struct.osip_list* %tmp5, i32 %tmp6)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp7 = load %struct.osip_list*, %struct.osip_list** %headers.addr, align 8
  %tmp8 = load i32, i32* %pos, align 4
  %call4 = call i8* @osip_list_get(%struct.osip_list* %tmp7, i32 %tmp8)
  store i8* %call4, i8** %elt, align 8
  %tmp9 = load i64*, i64** %malloc_size.addr, align 8
  %tmp10 = load i64, i64* %tmp9, align 8
  %tmp11 = load i8*, i8** %message, align 8
  %tmp12 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 100
  %tmp13 = load i64, i64* %size_of_header.addr, align 8
  %add5 = add i64 %add, %tmp13
  %cmp = icmp ult i64 %tmp10, %add5
  br i1 %cmp, label %if.then, label %if.end26

if.then:                                          ; preds = %while.body
  %tmp14 = load i8*, i8** %message, align 8
  %tmp15 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast7 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.rhs.cast8 = ptrtoint i8* %tmp15 to i64
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8
  store i64 %sub.ptr.sub9, i64* %size, align 8
  %tmp16 = load i8*, i8** %message, align 8
  %tmp17 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast10 = ptrtoint i8* %tmp16 to i64
  %sub.ptr.rhs.cast11 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %tmp18 = load i64, i64* %size_of_header.addr, align 8
  %add13 = add i64 %sub.ptr.sub12, %tmp18
  %add14 = add i64 %add13, 100
  %tmp19 = load i64*, i64** %malloc_size.addr, align 8
  store i64 %add14, i64* %tmp19, align 8
  %tmp20 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool15 = icmp ne i8* (i8*, i64)* %tmp20, null
  br i1 %tobool15, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %tmp21 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp22 = load i8*, i8** %string, align 8
  %tmp23 = load i64*, i64** %malloc_size.addr, align 8
  %tmp24 = load i64, i64* %tmp23, align 8
  %call16 = call i8* %tmp21(i8* %tmp22, i64 %tmp24)
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %tmp25 = load i8*, i8** %string, align 8
  %tmp26 = load i64*, i64** %malloc_size.addr, align 8
  %tmp27 = load i64, i64* %tmp26, align 8
  %call17 = call i8* @realloc(i8* %tmp25, i64 %tmp27) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call16, %cond.true ], [ %call17, %cond.false ]
  store i8* %cond, i8** %string, align 8
  %tmp28 = load i8*, i8** %string, align 8
  %cmp18 = icmp eq i8* %tmp28, null
  br i1 %cmp18, label %if.then19, label %if.end25

if.then19:                                        ; preds = %cond.end
  %tmp29 = load i8**, i8*** %_string.addr, align 8
  %tmp30 = load i8*, i8** %tmp29, align 8
  %cmp20 = icmp ne i8* %tmp30, null
  br i1 %cmp20, label %if.then21, label %if.end24

if.then21:                                        ; preds = %if.then19
  %tmp31 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool22 = icmp ne void (i8*)* %tmp31, null
  br i1 %tobool22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then21
  %tmp32 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp33 = load i8**, i8*** %_string.addr, align 8
  %tmp34 = load i8*, i8** %tmp33, align 8
  call void %tmp32(i8* %tmp34)
  br label %if.end

if.else:                                          ; preds = %if.then21
  %tmp35 = load i8**, i8*** %_string.addr, align 8
  %tmp36 = load i8*, i8** %tmp35, align 8
  call void @free(i8* %tmp36) #8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then23
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then19
  %tmp37 = load i8**, i8*** %_string.addr, align 8
  store i8* null, i8** %tmp37, align 8
  %tmp38 = load i8**, i8*** %_message.addr, align 8
  store i8* null, i8** %tmp38, align 8
  store i32 -4, i32* %retval
  br label %return

if.end25:                                         ; preds = %cond.end
  %tmp39 = load i8*, i8** %string, align 8
  %tmp40 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp39, i8** %tmp40, align 8
  %tmp41 = load i8*, i8** %string, align 8
  %tmp42 = load i64, i64* %size, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp41, i64 %tmp42
  store i8* %add.ptr, i8** %message, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %while.body
  %tmp43 = load i8*, i8** %message, align 8
  %tmp44 = load i8*, i8** %header.addr, align 8
  %tmp45 = load i64, i64* %size_of_header.addr, align 8
  %call27 = call i8* @osip_strncpy(i8* %tmp43, i8* %tmp44, i64 %tmp45)
  %tmp46 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %xxx_to_str.addr, align 8
  %tmp47 = load i8*, i8** %elt, align 8
  %call28 = call i32 %tmp46(i8* %tmp47, i8** %tmp)
  store i32 %call28, i32* %i, align 4
  %tmp48 = load i32, i32* %i, align 4
  %cmp29 = icmp ne i32 %tmp48, 0
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end26
  %tmp49 = load i8*, i8** %string, align 8
  %tmp50 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp49, i8** %tmp50, align 8
  %tmp51 = load i8*, i8** %message, align 8
  %tmp52 = load i8**, i8*** %_message.addr, align 8
  store i8* %tmp51, i8** %tmp52, align 8
  %tmp53 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp53, align 8
  %tmp54 = load i32, i32* %i, align 4
  store i32 %tmp54, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.end26
  %tmp55 = load i8*, i8** %message, align 8
  %tmp56 = load i8*, i8** %message, align 8
  %call32 = call i64 @strlen(i8* %tmp56) #7
  %add.ptr33 = getelementptr inbounds i8, i8* %tmp55, i64 %call32
  store i8* %add.ptr33, i8** %message, align 8
  %tmp57 = load i64*, i64** %malloc_size.addr, align 8
  %tmp58 = load i64, i64* %tmp57, align 8
  %tmp59 = load i8*, i8** %message, align 8
  %tmp60 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast34 = ptrtoint i8* %tmp59 to i64
  %sub.ptr.rhs.cast35 = ptrtoint i8* %tmp60 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %tmp61 = load i8*, i8** %tmp, align 8
  %call37 = call i64 @strlen(i8* %tmp61) #7
  %add38 = add i64 %sub.ptr.sub36, %call37
  %add39 = add i64 %add38, 100
  %cmp40 = icmp ult i64 %tmp58, %add39
  br i1 %cmp40, label %if.then41, label %if.end71

if.then41:                                        ; preds = %if.end31
  %tmp62 = load i8*, i8** %message, align 8
  %tmp63 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast44 = ptrtoint i8* %tmp62 to i64
  %sub.ptr.rhs.cast45 = ptrtoint i8* %tmp63 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  store i64 %sub.ptr.sub46, i64* %size43, align 8
  %tmp64 = load i8*, i8** %message, align 8
  %tmp65 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast47 = ptrtoint i8* %tmp64 to i64
  %sub.ptr.rhs.cast48 = ptrtoint i8* %tmp65 to i64
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48
  %tmp66 = load i8*, i8** %tmp, align 8
  %call50 = call i64 @strlen(i8* %tmp66) #7
  %add51 = add i64 %sub.ptr.sub49, %call50
  %add52 = add i64 %add51, 100
  %tmp67 = load i64*, i64** %malloc_size.addr, align 8
  store i64 %add52, i64* %tmp67, align 8
  %tmp68 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool53 = icmp ne i8* (i8*, i64)* %tmp68, null
  br i1 %tobool53, label %cond.true54, label %cond.false56

cond.true54:                                      ; preds = %if.then41
  %tmp69 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp70 = load i8*, i8** %string, align 8
  %tmp71 = load i64*, i64** %malloc_size.addr, align 8
  %tmp72 = load i64, i64* %tmp71, align 8
  %call55 = call i8* %tmp69(i8* %tmp70, i64 %tmp72)
  br label %cond.end58

cond.false56:                                     ; preds = %if.then41
  %tmp73 = load i8*, i8** %string, align 8
  %tmp74 = load i64*, i64** %malloc_size.addr, align 8
  %tmp75 = load i64, i64* %tmp74, align 8
  %call57 = call i8* @realloc(i8* %tmp73, i64 %tmp75) #8
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false56, %cond.true54
  %cond59 = phi i8* [ %call55, %cond.true54 ], [ %call57, %cond.false56 ]
  store i8* %cond59, i8** %string, align 8
  %tmp76 = load i8*, i8** %string, align 8
  %cmp60 = icmp eq i8* %tmp76, null
  br i1 %cmp60, label %if.then61, label %if.end69

if.then61:                                        ; preds = %cond.end58
  %tmp77 = load i8**, i8*** %_string.addr, align 8
  %tmp78 = load i8*, i8** %tmp77, align 8
  %cmp62 = icmp ne i8* %tmp78, null
  br i1 %cmp62, label %if.then63, label %if.end68

if.then63:                                        ; preds = %if.then61
  %tmp79 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool64 = icmp ne void (i8*)* %tmp79, null
  br i1 %tobool64, label %if.then65, label %if.else66

if.then65:                                        ; preds = %if.then63
  %tmp80 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp81 = load i8**, i8*** %_string.addr, align 8
  %tmp82 = load i8*, i8** %tmp81, align 8
  call void %tmp80(i8* %tmp82)
  br label %if.end67

if.else66:                                        ; preds = %if.then63
  %tmp83 = load i8**, i8*** %_string.addr, align 8
  %tmp84 = load i8*, i8** %tmp83, align 8
  call void @free(i8* %tmp84) #8
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then61
  %tmp85 = load i8**, i8*** %_string.addr, align 8
  store i8* null, i8** %tmp85, align 8
  %tmp86 = load i8**, i8*** %_message.addr, align 8
  store i8* null, i8** %tmp86, align 8
  store i32 -4, i32* %retval
  br label %return

if.end69:                                         ; preds = %cond.end58
  %tmp87 = load i8*, i8** %string, align 8
  %tmp88 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp87, i8** %tmp88, align 8
  %tmp89 = load i8*, i8** %string, align 8
  %tmp90 = load i64, i64* %size43, align 8
  %add.ptr70 = getelementptr inbounds i8, i8* %tmp89, i64 %tmp90
  store i8* %add.ptr70, i8** %message, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.end69, %if.end31
  %tmp91 = load i8*, i8** %message, align 8
  %tmp92 = load i8*, i8** %tmp, align 8
  %call72 = call i8* @osip_str_append(i8* %tmp91, i8* %tmp92)
  store i8* %call72, i8** %message, align 8
  %tmp93 = load i8*, i8** %tmp, align 8
  %cmp73 = icmp ne i8* %tmp93, null
  br i1 %cmp73, label %if.then74, label %if.end79

if.then74:                                        ; preds = %if.end71
  %tmp94 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool75 = icmp ne void (i8*)* %tmp94, null
  br i1 %tobool75, label %if.then76, label %if.else77

if.then76:                                        ; preds = %if.then74
  %tmp95 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp96 = load i8*, i8** %tmp, align 8
  call void %tmp95(i8* %tmp96)
  br label %if.end78

if.else77:                                        ; preds = %if.then74
  %tmp97 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp97) #8
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end71
  %tmp98 = load i8*, i8** %message, align 8
  %call80 = call i8* @osip_strn_append(i8* %tmp98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call80, i8** %message, align 8
  %tmp99 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp99, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp100 = load i8*, i8** %string, align 8
  %tmp101 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp100, i8** %tmp101, align 8
  %tmp102 = load i8*, i8** %message, align 8
  %tmp103 = load i8**, i8*** %_message.addr, align 8
  store i8* %tmp102, i8** %tmp103, align 8
  %tmp104 = load i8*, i8** %message, align 8
  %tmp105 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp104, i8** %tmp105, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.end68, %if.then30, %if.end24
  %tmp106 = load i32, i32* %retval
  ret i32 %tmp106
}

; Function Attrs: nounwind uwtable
define internal i32 @strcat_simple_header(i8** %_string, i64* %malloc_size, i8** %_message, i8* %ptr_header, i8* %header_name, i64 %size_of_header, i32 (i8*, i8**)* %xxx_to_str, i8** %next) #0 {
entry:
  %retval = alloca i32, align 4
  %_string.addr = alloca i8**, align 8
  %malloc_size.addr = alloca i64*, align 8
  %_message.addr = alloca i8**, align 8
  %ptr_header.addr = alloca i8*, align 8
  %header_name.addr = alloca i8*, align 8
  %size_of_header.addr = alloca i64, align 8
  %xxx_to_str.addr = alloca i32 (i8*, i8**)*, align 8
  %next.addr = alloca i8**, align 8
  %string = alloca i8*, align 8
  %message = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %i = alloca i32, align 4
  %size = alloca i64, align 8
  %size38 = alloca i64, align 8
  store i8** %_string, i8*** %_string.addr, align 8
  store i64* %malloc_size, i64** %malloc_size.addr, align 8
  store i8** %_message, i8*** %_message.addr, align 8
  store i8* %ptr_header, i8** %ptr_header.addr, align 8
  store i8* %header_name, i8** %header_name.addr, align 8
  store i64 %size_of_header, i64* %size_of_header.addr, align 8
  store i32 (i8*, i8**)* %xxx_to_str, i32 (i8*, i8**)** %xxx_to_str.addr, align 8
  store i8** %next, i8*** %next.addr, align 8
  %tmp1 = load i8**, i8*** %_string.addr, align 8
  %tmp2 = load i8*, i8** %tmp1, align 8
  store i8* %tmp2, i8** %string, align 8
  %tmp3 = load i8**, i8*** %_message.addr, align 8
  %tmp4 = load i8*, i8** %tmp3, align 8
  store i8* %tmp4, i8** %message, align 8
  %tmp5 = load i8*, i8** %ptr_header.addr, align 8
  %cmp = icmp ne i8* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end76

if.then:                                          ; preds = %entry
  %tmp6 = load i64*, i64** %malloc_size.addr, align 8
  %tmp7 = load i64, i64* %tmp6, align 8
  %tmp8 = load i8*, i8** %message, align 8
  %tmp9 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 100
  %tmp10 = load i64, i64* %size_of_header.addr, align 8
  %add2 = add i64 %add, %tmp10
  %cmp3 = icmp ult i64 %tmp7, %add2
  br i1 %cmp3, label %if.then4, label %if.end23

if.then4:                                         ; preds = %if.then
  %tmp11 = load i8*, i8** %message, align 8
  %tmp12 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast6 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast7 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7
  store i64 %sub.ptr.sub8, i64* %size, align 8
  %tmp13 = load i8*, i8** %message, align 8
  %tmp14 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast9 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.rhs.cast10 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10
  %tmp15 = load i64, i64* %size_of_header.addr, align 8
  %add12 = add i64 %sub.ptr.sub11, %tmp15
  %add13 = add i64 %add12, 100
  %tmp16 = load i64*, i64** %malloc_size.addr, align 8
  store i64 %add13, i64* %tmp16, align 8
  %tmp17 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool = icmp ne i8* (i8*, i64)* %tmp17, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then4
  %tmp18 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp19 = load i8*, i8** %string, align 8
  %tmp20 = load i64*, i64** %malloc_size.addr, align 8
  %tmp21 = load i64, i64* %tmp20, align 8
  %call = call i8* %tmp18(i8* %tmp19, i64 %tmp21)
  br label %cond.end

cond.false:                                       ; preds = %if.then4
  %tmp22 = load i8*, i8** %string, align 8
  %tmp23 = load i64*, i64** %malloc_size.addr, align 8
  %tmp24 = load i64, i64* %tmp23, align 8
  %call14 = call i8* @realloc(i8* %tmp22, i64 %tmp24) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call14, %cond.false ]
  store i8* %cond, i8** %string, align 8
  %tmp25 = load i8*, i8** %string, align 8
  %cmp15 = icmp eq i8* %tmp25, null
  br i1 %cmp15, label %if.then16, label %if.end22

if.then16:                                        ; preds = %cond.end
  %tmp26 = load i8**, i8*** %_string.addr, align 8
  %tmp27 = load i8*, i8** %tmp26, align 8
  %cmp17 = icmp ne i8* %tmp27, null
  br i1 %cmp17, label %if.then18, label %if.end21

if.then18:                                        ; preds = %if.then16
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp28, null
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then18
  %tmp29 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp30 = load i8**, i8*** %_string.addr, align 8
  %tmp31 = load i8*, i8** %tmp30, align 8
  call void %tmp29(i8* %tmp31)
  br label %if.end

if.else:                                          ; preds = %if.then18
  %tmp32 = load i8**, i8*** %_string.addr, align 8
  %tmp33 = load i8*, i8** %tmp32, align 8
  call void @free(i8* %tmp33) #8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then20
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then16
  %tmp34 = load i8**, i8*** %_string.addr, align 8
  store i8* null, i8** %tmp34, align 8
  %tmp35 = load i8**, i8*** %_message.addr, align 8
  store i8* null, i8** %tmp35, align 8
  store i32 -4, i32* %retval
  br label %return

if.end22:                                         ; preds = %cond.end
  %tmp36 = load i8*, i8** %string, align 8
  %tmp37 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp36, i8** %tmp37, align 8
  %tmp38 = load i8*, i8** %string, align 8
  %tmp39 = load i64, i64* %size, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp38, i64 %tmp39
  store i8* %add.ptr, i8** %message, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then
  %tmp40 = load i8*, i8** %message, align 8
  %tmp41 = load i8*, i8** %header_name.addr, align 8
  %tmp42 = load i64, i64* %size_of_header.addr, align 8
  %call24 = call i8* @osip_strn_append(i8* %tmp40, i8* %tmp41, i64 %tmp42)
  store i8* %call24, i8** %message, align 8
  %tmp43 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %xxx_to_str.addr, align 8
  %tmp44 = load i8*, i8** %ptr_header.addr, align 8
  %call25 = call i32 %tmp43(i8* %tmp44, i8** %tmp)
  store i32 %call25, i32* %i, align 4
  %tmp45 = load i32, i32* %i, align 4
  %cmp26 = icmp ne i32 %tmp45, 0
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end23
  %tmp46 = load i8*, i8** %string, align 8
  %tmp47 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp46, i8** %tmp47, align 8
  %tmp48 = load i8*, i8** %message, align 8
  %tmp49 = load i8**, i8*** %_message.addr, align 8
  store i8* %tmp48, i8** %tmp49, align 8
  %tmp50 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp50, align 8
  %tmp51 = load i32, i32* %i, align 4
  store i32 %tmp51, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.end23
  %tmp52 = load i64*, i64** %malloc_size.addr, align 8
  %tmp53 = load i64, i64* %tmp52, align 8
  %tmp54 = load i8*, i8** %message, align 8
  %tmp55 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast29 = ptrtoint i8* %tmp54 to i64
  %sub.ptr.rhs.cast30 = ptrtoint i8* %tmp55 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %tmp56 = load i8*, i8** %tmp, align 8
  %call32 = call i64 @strlen(i8* %tmp56) #7
  %add33 = add i64 %sub.ptr.sub31, %call32
  %add34 = add i64 %add33, 100
  %cmp35 = icmp ult i64 %tmp53, %add34
  br i1 %cmp35, label %if.then36, label %if.end66

if.then36:                                        ; preds = %if.end28
  %tmp57 = load i8*, i8** %message, align 8
  %tmp58 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %tmp57 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %tmp58 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  store i64 %sub.ptr.sub41, i64* %size38, align 8
  %tmp59 = load i8*, i8** %message, align 8
  %tmp60 = load i8*, i8** %string, align 8
  %sub.ptr.lhs.cast42 = ptrtoint i8* %tmp59 to i64
  %sub.ptr.rhs.cast43 = ptrtoint i8* %tmp60 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %tmp61 = load i8*, i8** %tmp, align 8
  %call45 = call i64 @strlen(i8* %tmp61) #7
  %add46 = add i64 %sub.ptr.sub44, %call45
  %add47 = add i64 %add46, 100
  %tmp62 = load i64*, i64** %malloc_size.addr, align 8
  store i64 %add47, i64* %tmp62, align 8
  %tmp63 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool48 = icmp ne i8* (i8*, i64)* %tmp63, null
  br i1 %tobool48, label %cond.true49, label %cond.false51

cond.true49:                                      ; preds = %if.then36
  %tmp64 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp65 = load i8*, i8** %string, align 8
  %tmp66 = load i64*, i64** %malloc_size.addr, align 8
  %tmp67 = load i64, i64* %tmp66, align 8
  %call50 = call i8* %tmp64(i8* %tmp65, i64 %tmp67)
  br label %cond.end53

cond.false51:                                     ; preds = %if.then36
  %tmp68 = load i8*, i8** %string, align 8
  %tmp69 = load i64*, i64** %malloc_size.addr, align 8
  %tmp70 = load i64, i64* %tmp69, align 8
  %call52 = call i8* @realloc(i8* %tmp68, i64 %tmp70) #8
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i8* [ %call50, %cond.true49 ], [ %call52, %cond.false51 ]
  store i8* %cond54, i8** %string, align 8
  %tmp71 = load i8*, i8** %string, align 8
  %cmp55 = icmp eq i8* %tmp71, null
  br i1 %cmp55, label %if.then56, label %if.end64

if.then56:                                        ; preds = %cond.end53
  %tmp72 = load i8**, i8*** %_string.addr, align 8
  %tmp73 = load i8*, i8** %tmp72, align 8
  %cmp57 = icmp ne i8* %tmp73, null
  br i1 %cmp57, label %if.then58, label %if.end63

if.then58:                                        ; preds = %if.then56
  %tmp74 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool59 = icmp ne void (i8*)* %tmp74, null
  br i1 %tobool59, label %if.then60, label %if.else61

if.then60:                                        ; preds = %if.then58
  %tmp75 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp76 = load i8**, i8*** %_string.addr, align 8
  %tmp77 = load i8*, i8** %tmp76, align 8
  call void %tmp75(i8* %tmp77)
  br label %if.end62

if.else61:                                        ; preds = %if.then58
  %tmp78 = load i8**, i8*** %_string.addr, align 8
  %tmp79 = load i8*, i8** %tmp78, align 8
  call void @free(i8* %tmp79) #8
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then60
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then56
  %tmp80 = load i8**, i8*** %_string.addr, align 8
  store i8* null, i8** %tmp80, align 8
  %tmp81 = load i8**, i8*** %_message.addr, align 8
  store i8* null, i8** %tmp81, align 8
  store i32 -4, i32* %retval
  br label %return

if.end64:                                         ; preds = %cond.end53
  %tmp82 = load i8*, i8** %string, align 8
  %tmp83 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp82, i8** %tmp83, align 8
  %tmp84 = load i8*, i8** %string, align 8
  %tmp85 = load i64, i64* %size38, align 8
  %add.ptr65 = getelementptr inbounds i8, i8* %tmp84, i64 %tmp85
  store i8* %add.ptr65, i8** %message, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.end28
  %tmp86 = load i8*, i8** %message, align 8
  %tmp87 = load i8*, i8** %tmp, align 8
  %call67 = call i8* @osip_str_append(i8* %tmp86, i8* %tmp87)
  store i8* %call67, i8** %message, align 8
  %tmp88 = load i8*, i8** %tmp, align 8
  %cmp68 = icmp ne i8* %tmp88, null
  br i1 %cmp68, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.end66
  %tmp89 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool70 = icmp ne void (i8*)* %tmp89, null
  br i1 %tobool70, label %if.then71, label %if.else72

if.then71:                                        ; preds = %if.then69
  %tmp90 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp91 = load i8*, i8** %tmp, align 8
  call void %tmp90(i8* %tmp91)
  br label %if.end73

if.else72:                                        ; preds = %if.then69
  %tmp92 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp92) #8
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then71
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end66
  %tmp93 = load i8*, i8** %message, align 8
  %call75 = call i8* @osip_strn_append(i8* %tmp93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str88, i32 0, i32 0), i64 2)
  store i8* %call75, i8** %message, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.end74, %entry
  %tmp94 = load i8*, i8** %string, align 8
  %tmp95 = load i8**, i8*** %_string.addr, align 8
  store i8* %tmp94, i8** %tmp95, align 8
  %tmp96 = load i8*, i8** %message, align 8
  %tmp97 = load i8**, i8*** %_message.addr, align 8
  store i8* %tmp96, i8** %tmp97, align 8
  %tmp98 = load i8*, i8** %message, align 8
  %tmp99 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp98, i8** %tmp99, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end76, %if.end63, %if.then27, %if.end21
  %tmp100 = load i32, i32* %retval
  ret i32 %tmp100
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_to_str(%struct.osip_message* %sip, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 2
  %tmp1 = load i8*, i8** %sip_method, align 8
  %cmp = icmp ne i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp3 = load i8**, i8*** %dest.addr, align 8
  %call = call i32 @__osip_message_startline_to_strreq(%struct.osip_message* %tmp2, i8** %tmp3)
  store i32 %call, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp4, i32 0, i32 3
  %tmp5 = load i32, i32* %status_code, align 4
  %cmp1 = icmp ne i32 %tmp5, 0
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %tmp6 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp7 = load i8**, i8*** %dest.addr, align 8
  %call3 = call i32 @__osip_message_startline_to_strresp(%struct.osip_message* %tmp6, i8** %tmp7)
  store i32 %call3, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end4
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -2, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then2, %if.then
  %tmp8 = load i32, i32* %retval
  ret i32 %tmp8
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_to_strresp(%struct.osip_message* %sip, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  %tmp = alloca i8*, align 8
  %sip_version = alloca i8*, align 8
  %status_code = alloca [5 x i8], align 1
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 4
  %tmp4 = load i8*, i8** %reason_phrase, align 8
  %cmp3 = icmp eq i8* %tmp4, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code5 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 3
  %tmp6 = load i32, i32* %status_code5, align 4
  %cmp6 = icmp slt i32 %tmp6, 100
  br i1 %cmp6, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code8 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 3
  %tmp8 = load i32, i32* %status_code8, align 4
  %cmp9 = icmp sgt i32 %tmp8, 699
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false7
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version10 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %sip_version10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end
  %tmp11 = load i8*, i8** @osip_protocol_version, align 8
  store i8* %tmp11, i8** %sip_version, align 8
  br label %if.end14

if.else:                                          ; preds = %if.end
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version13 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %sip_version13, align 8
  store i8* %tmp13, i8** %sip_version, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %status_code, i32 0, i32 0
  %tmp14 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %status_code15 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp14, i32 0, i32 3
  %tmp15 = load i32, i32* %status_code15, align 4
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str896, i32 0, i32 0), i32 %tmp15) #8
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp16, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end14
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp18 = load i8*, i8** %sip_version, align 8
  %call16 = call i64 @strlen(i8* %tmp18) #7
  %add = add i64 %call16, 3
  %tmp19 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp19, i32 0, i32 4
  %tmp20 = load i8*, i8** %reason_phrase17, align 8
  %call18 = call i64 @strlen(i8* %tmp20) #7
  %add19 = add i64 %add, %call18
  %add20 = add i64 %add19, 4
  %call21 = call i8* %tmp17(i64 %add20)
  br label %cond.end

cond.false:                                       ; preds = %if.end14
  %tmp21 = load i8*, i8** %sip_version, align 8
  %call22 = call i64 @strlen(i8* %tmp21) #7
  %add23 = add i64 %call22, 3
  %tmp22 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase24 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp22, i32 0, i32 4
  %tmp23 = load i8*, i8** %reason_phrase24, align 8
  %call25 = call i64 @strlen(i8* %tmp23) #7
  %add26 = add i64 %add23, %call25
  %add27 = add i64 %add26, 4
  %call28 = call noalias i8* @malloc(i64 %add27) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call21, %cond.true ], [ %call28, %cond.false ]
  %tmp24 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp24, align 8
  %tmp25 = load i8**, i8*** %dest.addr, align 8
  %tmp26 = load i8*, i8** %tmp25, align 8
  %cmp29 = icmp eq i8* %tmp26, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end31:                                         ; preds = %cond.end
  %tmp27 = load i8**, i8*** %dest.addr, align 8
  %tmp28 = load i8*, i8** %tmp27, align 8
  store i8* %tmp28, i8** %tmp, align 8
  %tmp29 = load i8*, i8** %tmp, align 8
  %tmp30 = load i8*, i8** %sip_version, align 8
  %call32 = call i8* @osip_str_append(i8* %tmp29, i8* %tmp30)
  store i8* %call32, i8** %tmp, align 8
  %tmp31 = load i8*, i8** %tmp, align 8
  store i8 32, i8* %tmp31, align 1
  %tmp32 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp32, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  %tmp33 = load i8*, i8** %tmp, align 8
  %arraydecay33 = getelementptr inbounds [5 x i8], [5 x i8]* %status_code, i32 0, i32 0
  %call34 = call i8* @osip_strn_append(i8* %tmp33, i8* %arraydecay33, i64 3)
  store i8* %call34, i8** %tmp, align 8
  %tmp34 = load i8*, i8** %tmp, align 8
  store i8 32, i8* %tmp34, align 1
  %tmp35 = load i8*, i8** %tmp, align 8
  %incdec.ptr35 = getelementptr inbounds i8, i8* %tmp35, i32 1
  store i8* %incdec.ptr35, i8** %tmp, align 8
  %tmp36 = load i8*, i8** %tmp, align 8
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %reason_phrase36 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 4
  %tmp38 = load i8*, i8** %reason_phrase36, align 8
  %call37 = call i8* @strcpy(i8* %tmp36, i8* %tmp38) #8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end31, %if.then30, %if.then
  %tmp39 = load i32, i32* %retval
  ret i32 %tmp39
}

; Function Attrs: nounwind uwtable
define internal i32 @__osip_message_startline_to_strreq(%struct.osip_message* %sip, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %dest.addr = alloca i8**, align 8
  %sip_version = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %rquri = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 1
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %req_uri, align 8
  %cmp3 = icmp eq %struct.osip_uri* %tmp4, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 2
  %tmp6 = load i8*, i8** %sip_method, align 8
  %cmp5 = icmp eq i8* %tmp6, null
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false4
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %req_uri6 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 1
  %tmp8 = load %struct.osip_uri*, %struct.osip_uri** %req_uri6, align 8
  %call = call i32 @osip_uri_to_str(%struct.osip_uri* %tmp8, i8** %rquri)
  store i32 %call, i32* %i, align 4
  %tmp9 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp9, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %tmp10 = load i32, i32* %i, align 4
  store i32 %tmp10, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version10 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 0
  %tmp12 = load i8*, i8** %sip_version10, align 8
  %cmp11 = icmp eq i8* %tmp12, null
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  %tmp13 = load i8*, i8** @osip_protocol_version, align 8
  store i8* %tmp13, i8** %sip_version, align 8
  br label %if.end14

if.else:                                          ; preds = %if.end9
  %tmp14 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_version13 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp14, i32 0, i32 0
  %tmp15 = load i8*, i8** %sip_version13, align 8
  store i8* %tmp15, i8** %sip_version, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp16, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end14
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp18 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method15 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp18, i32 0, i32 2
  %tmp19 = load i8*, i8** %sip_method15, align 8
  %call16 = call i64 @strlen(i8* %tmp19) #7
  %tmp20 = load i8*, i8** %rquri, align 8
  %call17 = call i64 @strlen(i8* %tmp20) #7
  %add = add i64 %call16, %call17
  %tmp21 = load i8*, i8** %sip_version, align 8
  %call18 = call i64 @strlen(i8* %tmp21) #7
  %add19 = add i64 %add, %call18
  %add20 = add i64 %add19, 3
  %call21 = call i8* %tmp17(i64 %add20)
  br label %cond.end

cond.false:                                       ; preds = %if.end14
  %tmp22 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method22 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp22, i32 0, i32 2
  %tmp23 = load i8*, i8** %sip_method22, align 8
  %call23 = call i64 @strlen(i8* %tmp23) #7
  %tmp24 = load i8*, i8** %rquri, align 8
  %call24 = call i64 @strlen(i8* %tmp24) #7
  %add25 = add i64 %call23, %call24
  %tmp25 = load i8*, i8** %sip_version, align 8
  %call26 = call i64 @strlen(i8* %tmp25) #7
  %add27 = add i64 %add25, %call26
  %add28 = add i64 %add27, 3
  %call29 = call noalias i8* @malloc(i64 %add28) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call21, %cond.true ], [ %call29, %cond.false ]
  %tmp26 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp26, align 8
  %tmp27 = load i8**, i8*** %dest.addr, align 8
  %tmp28 = load i8*, i8** %tmp27, align 8
  %cmp30 = icmp eq i8* %tmp28, null
  br i1 %cmp30, label %if.then31, label %if.end39

if.then31:                                        ; preds = %cond.end
  %tmp29 = load i8*, i8** %rquri, align 8
  %cmp32 = icmp ne i8* %tmp29, null
  br i1 %cmp32, label %if.then33, label %if.end38

if.then33:                                        ; preds = %if.then31
  %tmp30 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool34 = icmp ne void (i8*)* %tmp30, null
  br i1 %tobool34, label %if.then35, label %if.else36

if.then35:                                        ; preds = %if.then33
  %tmp31 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp32 = load i8*, i8** %rquri, align 8
  call void %tmp31(i8* %tmp32)
  br label %if.end37

if.else36:                                        ; preds = %if.then33
  %tmp33 = load i8*, i8** %rquri, align 8
  call void @free(i8* %tmp33) #8
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then35
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then31
  store i32 -4, i32* %retval
  br label %return

if.end39:                                         ; preds = %cond.end
  %tmp34 = load i8**, i8*** %dest.addr, align 8
  %tmp35 = load i8*, i8** %tmp34, align 8
  store i8* %tmp35, i8** %tmp, align 8
  %tmp36 = load i8*, i8** %tmp, align 8
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %sip_method40 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 2
  %tmp38 = load i8*, i8** %sip_method40, align 8
  %call41 = call i8* @osip_str_append(i8* %tmp36, i8* %tmp38)
  store i8* %call41, i8** %tmp, align 8
  %tmp39 = load i8*, i8** %tmp, align 8
  store i8 32, i8* %tmp39, align 1
  %tmp40 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp40, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  %tmp41 = load i8*, i8** %tmp, align 8
  %tmp42 = load i8*, i8** %rquri, align 8
  %call42 = call i8* @osip_str_append(i8* %tmp41, i8* %tmp42)
  store i8* %call42, i8** %tmp, align 8
  %tmp43 = load i8*, i8** %tmp, align 8
  store i8 32, i8* %tmp43, align 1
  %tmp44 = load i8*, i8** %tmp, align 8
  %incdec.ptr43 = getelementptr inbounds i8, i8* %tmp44, i32 1
  store i8* %incdec.ptr43, i8** %tmp, align 8
  %tmp45 = load i8*, i8** %tmp, align 8
  %tmp46 = load i8*, i8** %sip_version, align 8
  %call44 = call i8* @strcpy(i8* %tmp45, i8* %tmp46) #8
  %tmp47 = load i8*, i8** %rquri, align 8
  %cmp45 = icmp ne i8* %tmp47, null
  br i1 %cmp45, label %if.then46, label %if.end51

if.then46:                                        ; preds = %if.end39
  %tmp48 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool47 = icmp ne void (i8*)* %tmp48, null
  br i1 %tobool47, label %if.then48, label %if.else49

if.then48:                                        ; preds = %if.then46
  %tmp49 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp50 = load i8*, i8** %rquri, align 8
  call void %tmp49(i8* %tmp50)
  br label %if.end50

if.else49:                                        ; preds = %if.then46
  %tmp51 = load i8*, i8** %rquri, align 8
  call void @free(i8* %tmp51) #8
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end39
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end51, %if.end38, %if.then8, %if.then
  %tmp52 = load i32, i32* %retval
  ret i32 %tmp52
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_length_init(%struct.osip_content_length** %cl) #0 {
entry:
  %retval = alloca i32, align 4
  %cl.addr = alloca %struct.osip_content_length**, align 8
  store %struct.osip_content_length** %cl, %struct.osip_content_length*** %cl.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 8)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 8) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_content_length*
  %tmp3 = load %struct.osip_content_length**, %struct.osip_content_length*** %cl.addr, align 8
  store %struct.osip_content_length* %tmp2, %struct.osip_content_length** %tmp3, align 8
  %tmp4 = load %struct.osip_content_length**, %struct.osip_content_length*** %cl.addr, align 8
  %tmp5 = load %struct.osip_content_length*, %struct.osip_content_length** %tmp4, align 8
  %cmp = icmp eq %struct.osip_content_length* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_content_length**, %struct.osip_content_length*** %cl.addr, align 8
  %tmp7 = load %struct.osip_content_length*, %struct.osip_content_length** %tmp6, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp7, i32 0, i32 0
  store i8* null, i8** %value, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp8 = load i32, i32* %retval
  ret i32 %tmp8
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_content_length(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 16
  %tmp4 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  %cmp3 = icmp ne %struct.osip_content_length* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 16
  %call = call i32 @osip_content_length_init(%struct.osip_content_length** %content_length7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 16
  %tmp10 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_content_length_parse(%struct.osip_content_length* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 16
  %tmp14 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length17, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 16
  store %struct.osip_content_length* null, %struct.osip_content_length** %content_length18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_length_parse(%struct.osip_content_length* %content_length, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %content_length.addr = alloca %struct.osip_content_length*, align 8
  %hvalue.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.osip_content_length* %content_length, %struct.osip_content_length** %content_length.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i64 @strlen(i8* %tmp1) #7
  store i64 %call, i64* %len, align 8
  %tmp2 = load i64, i64* %len, align 8
  %add = add i64 %tmp2, 1
  %cmp1 = icmp ult i64 %add, 2
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp3 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp3, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end3
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp5 = load i64, i64* %len, align 8
  %add4 = add i64 %tmp5, 1
  %call5 = call i8* %tmp4(i64 %add4)
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  %tmp6 = load i64, i64* %len, align 8
  %add6 = add i64 %tmp6, 1
  %call7 = call noalias i8* @malloc(i64 %add6) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call7, %cond.false ]
  %tmp7 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp7, i32 0, i32 0
  store i8* %cond, i8** %value, align 8
  %tmp8 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value8 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp8, i32 0, i32 0
  %tmp9 = load i8*, i8** %value8, align 8
  %cmp9 = icmp eq i8* %tmp9, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end11:                                         ; preds = %cond.end
  %tmp10 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value12 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %value12, align 8
  %tmp12 = load i8*, i8** %hvalue.addr, align 8
  %tmp13 = load i64, i64* %len, align 8
  %call13 = call i8* @osip_strncpy(i8* %tmp11, i8* %tmp12, i64 %tmp13)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then2, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define void @osip_content_length_free(%struct.osip_content_length* %content_length) #0 {
entry:
  %content_length.addr = alloca %struct.osip_content_length*, align 8
  store %struct.osip_content_length* %content_length, %struct.osip_content_length** %content_length.addr, align 8
  %tmp = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %cmp = icmp eq %struct.osip_content_length* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end14

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %value, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value4 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %value4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %value5 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %value5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %cmp8 = icmp ne %struct.osip_content_length* %tmp9, null
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end7
  %tmp10 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp10, null
  br i1 %tobool10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.then9
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp12 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %tmp13 = bitcast %struct.osip_content_length* %tmp12 to i8*
  call void %tmp11(i8* %tmp13)
  br label %if.end13

if.else12:                                        ; preds = %if.then9
  %tmp14 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length.addr, align 8
  %tmp15 = bitcast %struct.osip_content_length* %tmp14 to i8*
  call void @free(i8* %tmp15) #8
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then11
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end7, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_content_length* @osip_message_get_content_length(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_length = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 16
  %tmp1 = load %struct.osip_content_length*, %struct.osip_content_length** %content_length, align 8
  ret %struct.osip_content_length* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_length_to_str(%struct.osip_content_length* %cl, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %cl.addr = alloca %struct.osip_content_length*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_content_length* %cl, %struct.osip_content_length** %cl.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load %struct.osip_content_length*, %struct.osip_content_length** %cl.addr, align 8
  %cmp = icmp eq %struct.osip_content_length* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_content_length*, %struct.osip_content_length** %cl.addr, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %value, align 8
  %call = call i8* @osip_strdup(i8* %tmp2)
  %tmp3 = load i8**, i8*** %dest.addr, align 8
  store i8* %call, i8** %tmp3, align 8
  %tmp4 = load i8**, i8*** %dest.addr, align 8
  %tmp5 = load i8*, i8** %tmp4, align 8
  %cmp1 = icmp eq i8* %tmp5, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -4, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp6 = load i32, i32* %retval
  ret i32 %tmp6
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_length_clone(%struct.osip_content_length* %ctl, %struct.osip_content_length** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ctl.addr = alloca %struct.osip_content_length*, align 8
  %dest.addr = alloca %struct.osip_content_length**, align 8
  %i = alloca i32, align 4
  %cl = alloca %struct.osip_content_length*, align 8
  store %struct.osip_content_length* %ctl, %struct.osip_content_length** %ctl.addr, align 8
  store %struct.osip_content_length** %dest, %struct.osip_content_length*** %dest.addr, align 8
  %tmp = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* null, %struct.osip_content_length** %tmp, align 8
  %tmp1 = load %struct.osip_content_length*, %struct.osip_content_length** %ctl.addr, align 8
  %cmp = icmp eq %struct.osip_content_length* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_content_length_init(%struct.osip_content_length** %cl)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_content_length*, %struct.osip_content_length** %ctl.addr, align 8
  %value = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %value, align 8
  %cmp4 = icmp ne i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end3
  %tmp6 = load %struct.osip_content_length*, %struct.osip_content_length** %ctl.addr, align 8
  %value6 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %value6, align 8
  %call7 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_content_length*, %struct.osip_content_length** %cl, align 8
  %value8 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp8, i32 0, i32 0
  store i8* %call7, i8** %value8, align 8
  %tmp9 = load %struct.osip_content_length*, %struct.osip_content_length** %cl, align 8
  %value9 = getelementptr inbounds %struct.osip_content_length, %struct.osip_content_length* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %value9, align 8
  %cmp10 = icmp eq i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then5
  %tmp11 = load %struct.osip_content_length*, %struct.osip_content_length** %cl, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end3
  %tmp12 = load %struct.osip_content_length*, %struct.osip_content_length** %cl, align 8
  %tmp13 = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* %tmp12, %struct.osip_content_length** %tmp13, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end13, %if.then11, %if.then2, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @parser_init() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %hash = alloca i64, align 8
  store i32 0, i32* %i, align 4
  %tmp = load i32, i32* %i, align 4
  %idxprom = sext i32 %tmp to i64
  %arrayidx = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom
  %hname = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str109, i32 0, i32 0), i8** %hname, align 8
  %tmp1 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %tmp1 to i64
  %arrayidx2 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom1
  %ignored_when_invalid = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx2, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid, align 4
  %tmp2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp2, 1
  store i32 %inc, i32* %i, align 4
  %idxprom3 = sext i32 %tmp2 to i64
  %arrayidx4 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom3
  %setheader = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx4, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_accept, i32 (%struct.osip_message*, i8*)** %setheader, align 8
  %tmp3 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %tmp3 to i64
  %arrayidx6 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom5
  %hname7 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx6, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str1110, i32 0, i32 0), i8** %hname7, align 8
  %tmp4 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %tmp4 to i64
  %arrayidx9 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom8
  %ignored_when_invalid10 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx9, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid10, align 4
  %tmp5 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %tmp5, 1
  store i32 %inc11, i32* %i, align 4
  %idxprom12 = sext i32 %tmp5 to i64
  %arrayidx13 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom12
  %setheader14 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx13, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_accept_encoding, i32 (%struct.osip_message*, i8*)** %setheader14, align 8
  %tmp6 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %tmp6 to i64
  %arrayidx16 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom15
  %hname17 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx16, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str2111, i32 0, i32 0), i8** %hname17, align 8
  %tmp7 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %tmp7 to i64
  %arrayidx19 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom18
  %ignored_when_invalid20 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx19, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid20, align 4
  %tmp8 = load i32, i32* %i, align 4
  %inc21 = add nsw i32 %tmp8, 1
  store i32 %inc21, i32* %i, align 4
  %idxprom22 = sext i32 %tmp8 to i64
  %arrayidx23 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom22
  %setheader24 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx23, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_accept_language, i32 (%struct.osip_message*, i8*)** %setheader24, align 8
  %tmp9 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %tmp9 to i64
  %arrayidx26 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom25
  %hname27 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx26, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str3112, i32 0, i32 0), i8** %hname27, align 8
  %tmp10 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %tmp10 to i64
  %arrayidx29 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom28
  %ignored_when_invalid30 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx29, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid30, align 4
  %tmp11 = load i32, i32* %i, align 4
  %inc31 = add nsw i32 %tmp11, 1
  store i32 %inc31, i32* %i, align 4
  %idxprom32 = sext i32 %tmp11 to i64
  %arrayidx33 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom32
  %setheader34 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx33, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_alert_info, i32 (%struct.osip_message*, i8*)** %setheader34, align 8
  %tmp12 = load i32, i32* %i, align 4
  %idxprom35 = sext i32 %tmp12 to i64
  %arrayidx36 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom35
  %hname37 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx36, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str4113, i32 0, i32 0), i8** %hname37, align 8
  %tmp13 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %tmp13 to i64
  %arrayidx39 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom38
  %ignored_when_invalid40 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx39, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid40, align 4
  %tmp14 = load i32, i32* %i, align 4
  %inc41 = add nsw i32 %tmp14, 1
  store i32 %inc41, i32* %i, align 4
  %idxprom42 = sext i32 %tmp14 to i64
  %arrayidx43 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom42
  %setheader44 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx43, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_allow, i32 (%struct.osip_message*, i8*)** %setheader44, align 8
  %tmp15 = load i32, i32* %i, align 4
  %idxprom45 = sext i32 %tmp15 to i64
  %arrayidx46 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom45
  %hname47 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx46, i32 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str5114, i32 0, i32 0), i8** %hname47, align 8
  %tmp16 = load i32, i32* %i, align 4
  %idxprom48 = sext i32 %tmp16 to i64
  %arrayidx49 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom48
  %ignored_when_invalid50 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx49, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid50, align 4
  %tmp17 = load i32, i32* %i, align 4
  %inc51 = add nsw i32 %tmp17, 1
  store i32 %inc51, i32* %i, align 4
  %idxprom52 = sext i32 %tmp17 to i64
  %arrayidx53 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom52
  %setheader54 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx53, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_authentication_info, i32 (%struct.osip_message*, i8*)** %setheader54, align 8
  %tmp18 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %tmp18 to i64
  %arrayidx56 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom55
  %hname57 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx56, i32 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str6115, i32 0, i32 0), i8** %hname57, align 8
  %tmp19 = load i32, i32* %i, align 4
  %idxprom58 = sext i32 %tmp19 to i64
  %arrayidx59 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom58
  %ignored_when_invalid60 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx59, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid60, align 4
  %tmp20 = load i32, i32* %i, align 4
  %inc61 = add nsw i32 %tmp20, 1
  store i32 %inc61, i32* %i, align 4
  %idxprom62 = sext i32 %tmp20 to i64
  %arrayidx63 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom62
  %setheader64 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx63, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_authorization, i32 (%struct.osip_message*, i8*)** %setheader64, align 8
  %tmp21 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %tmp21 to i64
  %arrayidx66 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom65
  %hname67 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx66, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str7116, i32 0, i32 0), i8** %hname67, align 8
  %tmp22 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %tmp22 to i64
  %arrayidx69 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom68
  %ignored_when_invalid70 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx69, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid70, align 4
  %tmp23 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %tmp23, 1
  store i32 %inc71, i32* %i, align 4
  %idxprom72 = sext i32 %tmp23 to i64
  %arrayidx73 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom72
  %setheader74 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx73, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_type, i32 (%struct.osip_message*, i8*)** %setheader74, align 8
  %tmp24 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %tmp24 to i64
  %arrayidx76 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom75
  %hname77 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx76, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str8117, i32 0, i32 0), i8** %hname77, align 8
  %tmp25 = load i32, i32* %i, align 4
  %idxprom78 = sext i32 %tmp25 to i64
  %arrayidx79 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom78
  %ignored_when_invalid80 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx79, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid80, align 4
  %tmp26 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %tmp26, 1
  store i32 %inc81, i32* %i, align 4
  %idxprom82 = sext i32 %tmp26 to i64
  %arrayidx83 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom82
  %setheader84 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx83, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_call_id, i32 (%struct.osip_message*, i8*)** %setheader84, align 8
  %tmp27 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %tmp27 to i64
  %arrayidx86 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom85
  %hname87 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx86, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str9118, i32 0, i32 0), i8** %hname87, align 8
  %tmp28 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %tmp28 to i64
  %arrayidx89 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom88
  %ignored_when_invalid90 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx89, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid90, align 4
  %tmp29 = load i32, i32* %i, align 4
  %inc91 = add nsw i32 %tmp29, 1
  store i32 %inc91, i32* %i, align 4
  %idxprom92 = sext i32 %tmp29 to i64
  %arrayidx93 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom92
  %setheader94 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx93, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_call_info, i32 (%struct.osip_message*, i8*)** %setheader94, align 8
  %tmp30 = load i32, i32* %i, align 4
  %idxprom95 = sext i32 %tmp30 to i64
  %arrayidx96 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom95
  %hname97 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx96, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str10119, i32 0, i32 0), i8** %hname97, align 8
  %tmp31 = load i32, i32* %i, align 4
  %idxprom98 = sext i32 %tmp31 to i64
  %arrayidx99 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom98
  %ignored_when_invalid100 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx99, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid100, align 4
  %tmp32 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %tmp32, 1
  store i32 %inc101, i32* %i, align 4
  %idxprom102 = sext i32 %tmp32 to i64
  %arrayidx103 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom102
  %setheader104 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx103, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_contact, i32 (%struct.osip_message*, i8*)** %setheader104, align 8
  %tmp33 = load i32, i32* %i, align 4
  %idxprom105 = sext i32 %tmp33 to i64
  %arrayidx106 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom105
  %hname107 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx106, i32 0, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str11120, i32 0, i32 0), i8** %hname107, align 8
  %tmp34 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %tmp34 to i64
  %arrayidx109 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom108
  %ignored_when_invalid110 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx109, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid110, align 4
  %tmp35 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %tmp35, 1
  store i32 %inc111, i32* %i, align 4
  %idxprom112 = sext i32 %tmp35 to i64
  %arrayidx113 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom112
  %setheader114 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx113, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_encoding, i32 (%struct.osip_message*, i8*)** %setheader114, align 8
  %tmp36 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %tmp36 to i64
  %arrayidx116 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom115
  %hname117 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx116, i32 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str12121, i32 0, i32 0), i8** %hname117, align 8
  %tmp37 = load i32, i32* %i, align 4
  %idxprom118 = sext i32 %tmp37 to i64
  %arrayidx119 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom118
  %ignored_when_invalid120 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx119, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid120, align 4
  %tmp38 = load i32, i32* %i, align 4
  %inc121 = add nsw i32 %tmp38, 1
  store i32 %inc121, i32* %i, align 4
  %idxprom122 = sext i32 %tmp38 to i64
  %arrayidx123 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom122
  %setheader124 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx123, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_length, i32 (%struct.osip_message*, i8*)** %setheader124, align 8
  %tmp39 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %tmp39 to i64
  %arrayidx126 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom125
  %hname127 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx126, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str13122, i32 0, i32 0), i8** %hname127, align 8
  %tmp40 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %tmp40 to i64
  %arrayidx129 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom128
  %ignored_when_invalid130 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx129, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid130, align 4
  %tmp41 = load i32, i32* %i, align 4
  %inc131 = add nsw i32 %tmp41, 1
  store i32 %inc131, i32* %i, align 4
  %idxprom132 = sext i32 %tmp41 to i64
  %arrayidx133 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom132
  %setheader134 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx133, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_type, i32 (%struct.osip_message*, i8*)** %setheader134, align 8
  %tmp42 = load i32, i32* %i, align 4
  %idxprom135 = sext i32 %tmp42 to i64
  %arrayidx136 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom135
  %hname137 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx136, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str14123, i32 0, i32 0), i8** %hname137, align 8
  %tmp43 = load i32, i32* %i, align 4
  %idxprom138 = sext i32 %tmp43 to i64
  %arrayidx139 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom138
  %ignored_when_invalid140 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx139, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid140, align 4
  %tmp44 = load i32, i32* %i, align 4
  %inc141 = add nsw i32 %tmp44, 1
  store i32 %inc141, i32* %i, align 4
  %idxprom142 = sext i32 %tmp44 to i64
  %arrayidx143 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom142
  %setheader144 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx143, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_cseq, i32 (%struct.osip_message*, i8*)** %setheader144, align 8
  %tmp45 = load i32, i32* %i, align 4
  %idxprom145 = sext i32 %tmp45 to i64
  %arrayidx146 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom145
  %hname147 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx146, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str15124, i32 0, i32 0), i8** %hname147, align 8
  %tmp46 = load i32, i32* %i, align 4
  %idxprom148 = sext i32 %tmp46 to i64
  %arrayidx149 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom148
  %ignored_when_invalid150 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx149, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid150, align 4
  %tmp47 = load i32, i32* %i, align 4
  %inc151 = add nsw i32 %tmp47, 1
  store i32 %inc151, i32* %i, align 4
  %idxprom152 = sext i32 %tmp47 to i64
  %arrayidx153 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom152
  %setheader154 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx153, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_encoding, i32 (%struct.osip_message*, i8*)** %setheader154, align 8
  %tmp48 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %tmp48 to i64
  %arrayidx156 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom155
  %hname157 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx156, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str16125, i32 0, i32 0), i8** %hname157, align 8
  %tmp49 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %tmp49 to i64
  %arrayidx159 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom158
  %ignored_when_invalid160 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx159, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid160, align 4
  %tmp50 = load i32, i32* %i, align 4
  %inc161 = add nsw i32 %tmp50, 1
  store i32 %inc161, i32* %i, align 4
  %idxprom162 = sext i32 %tmp50 to i64
  %arrayidx163 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom162
  %setheader164 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx163, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_error_info, i32 (%struct.osip_message*, i8*)** %setheader164, align 8
  %tmp51 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %tmp51 to i64
  %arrayidx166 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom165
  %hname167 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx166, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str17126, i32 0, i32 0), i8** %hname167, align 8
  %tmp52 = load i32, i32* %i, align 4
  %idxprom168 = sext i32 %tmp52 to i64
  %arrayidx169 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom168
  %ignored_when_invalid170 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx169, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid170, align 4
  %tmp53 = load i32, i32* %i, align 4
  %inc171 = add nsw i32 %tmp53, 1
  store i32 %inc171, i32* %i, align 4
  %idxprom172 = sext i32 %tmp53 to i64
  %arrayidx173 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom172
  %setheader174 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx173, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_from, i32 (%struct.osip_message*, i8*)** %setheader174, align 8
  %tmp54 = load i32, i32* %i, align 4
  %idxprom175 = sext i32 %tmp54 to i64
  %arrayidx176 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom175
  %hname177 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx176, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str18127, i32 0, i32 0), i8** %hname177, align 8
  %tmp55 = load i32, i32* %i, align 4
  %idxprom178 = sext i32 %tmp55 to i64
  %arrayidx179 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom178
  %ignored_when_invalid180 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx179, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid180, align 4
  %tmp56 = load i32, i32* %i, align 4
  %inc181 = add nsw i32 %tmp56, 1
  store i32 %inc181, i32* %i, align 4
  %idxprom182 = sext i32 %tmp56 to i64
  %arrayidx183 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom182
  %setheader184 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx183, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_from, i32 (%struct.osip_message*, i8*)** %setheader184, align 8
  %tmp57 = load i32, i32* %i, align 4
  %idxprom185 = sext i32 %tmp57 to i64
  %arrayidx186 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom185
  %hname187 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx186, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str19128, i32 0, i32 0), i8** %hname187, align 8
  %tmp58 = load i32, i32* %i, align 4
  %idxprom188 = sext i32 %tmp58 to i64
  %arrayidx189 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom188
  %ignored_when_invalid190 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx189, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid190, align 4
  %tmp59 = load i32, i32* %i, align 4
  %inc191 = add nsw i32 %tmp59, 1
  store i32 %inc191, i32* %i, align 4
  %idxprom192 = sext i32 %tmp59 to i64
  %arrayidx193 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom192
  %setheader194 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx193, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_call_id, i32 (%struct.osip_message*, i8*)** %setheader194, align 8
  %tmp60 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %tmp60 to i64
  %arrayidx196 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom195
  %hname197 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx196, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str20129, i32 0, i32 0), i8** %hname197, align 8
  %tmp61 = load i32, i32* %i, align 4
  %idxprom198 = sext i32 %tmp61 to i64
  %arrayidx199 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom198
  %ignored_when_invalid200 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx199, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid200, align 4
  %tmp62 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %tmp62, 1
  store i32 %inc201, i32* %i, align 4
  %idxprom202 = sext i32 %tmp62 to i64
  %arrayidx203 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom202
  %setheader204 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx203, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_content_length, i32 (%struct.osip_message*, i8*)** %setheader204, align 8
  %tmp63 = load i32, i32* %i, align 4
  %idxprom205 = sext i32 %tmp63 to i64
  %arrayidx206 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom205
  %hname207 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx206, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str21130, i32 0, i32 0), i8** %hname207, align 8
  %tmp64 = load i32, i32* %i, align 4
  %idxprom208 = sext i32 %tmp64 to i64
  %arrayidx209 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom208
  %ignored_when_invalid210 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx209, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid210, align 4
  %tmp65 = load i32, i32* %i, align 4
  %inc211 = add nsw i32 %tmp65, 1
  store i32 %inc211, i32* %i, align 4
  %idxprom212 = sext i32 %tmp65 to i64
  %arrayidx213 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom212
  %setheader214 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx213, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_contact, i32 (%struct.osip_message*, i8*)** %setheader214, align 8
  %tmp66 = load i32, i32* %i, align 4
  %idxprom215 = sext i32 %tmp66 to i64
  %arrayidx216 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom215
  %hname217 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx216, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str22131, i32 0, i32 0), i8** %hname217, align 8
  %tmp67 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %tmp67 to i64
  %arrayidx219 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom218
  %ignored_when_invalid220 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx219, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid220, align 4
  %tmp68 = load i32, i32* %i, align 4
  %inc221 = add nsw i32 %tmp68, 1
  store i32 %inc221, i32* %i, align 4
  %idxprom222 = sext i32 %tmp68 to i64
  %arrayidx223 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom222
  %setheader224 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx223, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_mime_version, i32 (%struct.osip_message*, i8*)** %setheader224, align 8
  %tmp69 = load i32, i32* %i, align 4
  %idxprom225 = sext i32 %tmp69 to i64
  %arrayidx226 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom225
  %hname227 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx226, i32 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str23132, i32 0, i32 0), i8** %hname227, align 8
  %tmp70 = load i32, i32* %i, align 4
  %idxprom228 = sext i32 %tmp70 to i64
  %arrayidx229 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom228
  %ignored_when_invalid230 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx229, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid230, align 4
  %tmp71 = load i32, i32* %i, align 4
  %inc231 = add nsw i32 %tmp71, 1
  store i32 %inc231, i32* %i, align 4
  %idxprom232 = sext i32 %tmp71 to i64
  %arrayidx233 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom232
  %setheader234 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx233, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_proxy_authenticate, i32 (%struct.osip_message*, i8*)** %setheader234, align 8
  %tmp72 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %tmp72 to i64
  %arrayidx236 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom235
  %hname237 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx236, i32 0, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str24133, i32 0, i32 0), i8** %hname237, align 8
  %tmp73 = load i32, i32* %i, align 4
  %idxprom238 = sext i32 %tmp73 to i64
  %arrayidx239 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom238
  %ignored_when_invalid240 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx239, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid240, align 4
  %tmp74 = load i32, i32* %i, align 4
  %inc241 = add nsw i32 %tmp74, 1
  store i32 %inc241, i32* %i, align 4
  %idxprom242 = sext i32 %tmp74 to i64
  %arrayidx243 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom242
  %setheader244 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx243, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_proxy_authentication_info, i32 (%struct.osip_message*, i8*)** %setheader244, align 8
  %tmp75 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %tmp75 to i64
  %arrayidx246 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom245
  %hname247 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx246, i32 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str25134, i32 0, i32 0), i8** %hname247, align 8
  %tmp76 = load i32, i32* %i, align 4
  %idxprom248 = sext i32 %tmp76 to i64
  %arrayidx249 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom248
  %ignored_when_invalid250 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx249, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid250, align 4
  %tmp77 = load i32, i32* %i, align 4
  %inc251 = add nsw i32 %tmp77, 1
  store i32 %inc251, i32* %i, align 4
  %idxprom252 = sext i32 %tmp77 to i64
  %arrayidx253 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom252
  %setheader254 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx253, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_proxy_authorization, i32 (%struct.osip_message*, i8*)** %setheader254, align 8
  %tmp78 = load i32, i32* %i, align 4
  %idxprom255 = sext i32 %tmp78 to i64
  %arrayidx256 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom255
  %hname257 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx256, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str26135, i32 0, i32 0), i8** %hname257, align 8
  %tmp79 = load i32, i32* %i, align 4
  %idxprom258 = sext i32 %tmp79 to i64
  %arrayidx259 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom258
  %ignored_when_invalid260 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx259, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid260, align 4
  %tmp80 = load i32, i32* %i, align 4
  %inc261 = add nsw i32 %tmp80, 1
  store i32 %inc261, i32* %i, align 4
  %idxprom262 = sext i32 %tmp80 to i64
  %arrayidx263 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom262
  %setheader264 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx263, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_record_route, i32 (%struct.osip_message*, i8*)** %setheader264, align 8
  %tmp81 = load i32, i32* %i, align 4
  %idxprom265 = sext i32 %tmp81 to i64
  %arrayidx266 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom265
  %hname267 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx266, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str27136, i32 0, i32 0), i8** %hname267, align 8
  %tmp82 = load i32, i32* %i, align 4
  %idxprom268 = sext i32 %tmp82 to i64
  %arrayidx269 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom268
  %ignored_when_invalid270 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx269, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid270, align 4
  %tmp83 = load i32, i32* %i, align 4
  %inc271 = add nsw i32 %tmp83, 1
  store i32 %inc271, i32* %i, align 4
  %idxprom272 = sext i32 %tmp83 to i64
  %arrayidx273 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom272
  %setheader274 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx273, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_route, i32 (%struct.osip_message*, i8*)** %setheader274, align 8
  %tmp84 = load i32, i32* %i, align 4
  %idxprom275 = sext i32 %tmp84 to i64
  %arrayidx276 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom275
  %hname277 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx276, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str28137, i32 0, i32 0), i8** %hname277, align 8
  %tmp85 = load i32, i32* %i, align 4
  %idxprom278 = sext i32 %tmp85 to i64
  %arrayidx279 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom278
  %ignored_when_invalid280 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx279, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid280, align 4
  %tmp86 = load i32, i32* %i, align 4
  %inc281 = add nsw i32 %tmp86, 1
  store i32 %inc281, i32* %i, align 4
  %idxprom282 = sext i32 %tmp86 to i64
  %arrayidx283 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom282
  %setheader284 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx283, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_to, i32 (%struct.osip_message*, i8*)** %setheader284, align 8
  %tmp87 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %tmp87 to i64
  %arrayidx286 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom285
  %hname287 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx286, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str29138, i32 0, i32 0), i8** %hname287, align 8
  %tmp88 = load i32, i32* %i, align 4
  %idxprom288 = sext i32 %tmp88 to i64
  %arrayidx289 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom288
  %ignored_when_invalid290 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx289, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid290, align 4
  %tmp89 = load i32, i32* %i, align 4
  %inc291 = add nsw i32 %tmp89, 1
  store i32 %inc291, i32* %i, align 4
  %idxprom292 = sext i32 %tmp89 to i64
  %arrayidx293 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom292
  %setheader294 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx293, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_to, i32 (%struct.osip_message*, i8*)** %setheader294, align 8
  %tmp90 = load i32, i32* %i, align 4
  %idxprom295 = sext i32 %tmp90 to i64
  %arrayidx296 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom295
  %hname297 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx296, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str30139, i32 0, i32 0), i8** %hname297, align 8
  %tmp91 = load i32, i32* %i, align 4
  %idxprom298 = sext i32 %tmp91 to i64
  %arrayidx299 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom298
  %ignored_when_invalid300 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx299, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid300, align 4
  %tmp92 = load i32, i32* %i, align 4
  %inc301 = add nsw i32 %tmp92, 1
  store i32 %inc301, i32* %i, align 4
  %idxprom302 = sext i32 %tmp92 to i64
  %arrayidx303 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom302
  %setheader304 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx303, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_via, i32 (%struct.osip_message*, i8*)** %setheader304, align 8
  %tmp93 = load i32, i32* %i, align 4
  %idxprom305 = sext i32 %tmp93 to i64
  %arrayidx306 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom305
  %hname307 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx306, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str31140, i32 0, i32 0), i8** %hname307, align 8
  %tmp94 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %tmp94 to i64
  %arrayidx309 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom308
  %ignored_when_invalid310 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx309, i32 0, i32 2
  store i32 0, i32* %ignored_when_invalid310, align 4
  %tmp95 = load i32, i32* %i, align 4
  %inc311 = add nsw i32 %tmp95, 1
  store i32 %inc311, i32* %i, align 4
  %idxprom312 = sext i32 %tmp95 to i64
  %arrayidx313 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom312
  %setheader314 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx313, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_via, i32 (%struct.osip_message*, i8*)** %setheader314, align 8
  %tmp96 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %tmp96 to i64
  %arrayidx316 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom315
  %hname317 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx316, i32 0, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str32141, i32 0, i32 0), i8** %hname317, align 8
  %tmp97 = load i32, i32* %i, align 4
  %idxprom318 = sext i32 %tmp97 to i64
  %arrayidx319 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom318
  %ignored_when_invalid320 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx319, i32 0, i32 2
  store i32 1, i32* %ignored_when_invalid320, align 4
  %tmp98 = load i32, i32* %i, align 4
  %inc321 = add nsw i32 %tmp98, 1
  store i32 %inc321, i32* %i, align 4
  %idxprom322 = sext i32 %tmp98 to i64
  %arrayidx323 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom322
  %setheader324 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx323, i32 0, i32 1
  store i32 (%struct.osip_message*, i8*)* @osip_message_set_www_authenticate, i32 (%struct.osip_message*, i8*)** %setheader324, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tmp99 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %tmp99, 150
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp100 = load i32, i32* %i, align 4
  %idxprom325 = sext i32 %tmp100 to i64
  %arrayidx326 = getelementptr inbounds [150 x i32], [150 x i32]* @hdr_ref_table, i32 0, i64 %idxprom325
  store i32 -1, i32* %arrayidx326, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp101 = load i32, i32* %i, align 4
  %inc327 = add nsw i32 %tmp101, 1
  store i32 %inc327, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond328

for.cond328:                                      ; preds = %for.inc337, %for.end
  %tmp102 = load i32, i32* %i, align 4
  %cmp329 = icmp slt i32 %tmp102, 33
  br i1 %cmp329, label %for.body330, label %for.end339

for.body330:                                      ; preds = %for.cond328
  %tmp103 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %tmp103 to i64
  %arrayidx332 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom331
  %hname333 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx332, i32 0, i32 0
  %tmp104 = load i8*, i8** %hname333, align 8
  %call = call i64 @osip_hash(i8* %tmp104)
  store i64 %call, i64* %hash, align 8
  %tmp105 = load i64, i64* %hash, align 8
  %rem = urem i64 %tmp105, 150
  store i64 %rem, i64* %hash, align 8
  %tmp106 = load i64, i64* %hash, align 8
  %arrayidx334 = getelementptr inbounds [150 x i32], [150 x i32]* @hdr_ref_table, i32 0, i64 %tmp106
  %tmp107 = load i32, i32* %arrayidx334, align 4
  %cmp335 = icmp eq i32 %tmp107, -1
  br i1 %cmp335, label %if.then, label %if.else

if.then:                                          ; preds = %for.body330
  %tmp108 = load i32, i32* %i, align 4
  %tmp109 = load i64, i64* %hash, align 8
  %arrayidx336 = getelementptr inbounds [150 x i32], [150 x i32]* @hdr_ref_table, i32 0, i64 %tmp109
  store i32 %tmp108, i32* %arrayidx336, align 4
  br label %if.end

if.else:                                          ; preds = %for.body330
  br label %do.body

do.body:                                          ; preds = %if.else
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %for.inc337

for.inc337:                                       ; preds = %if.end
  %tmp110 = load i32, i32* %i, align 4
  %inc338 = add nsw i32 %tmp110, 1
  store i32 %inc338, i32* %i, align 4
  br label %for.cond328

for.end339:                                       ; preds = %for.cond328
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end339, %do.end
  %tmp111 = load i32, i32* %retval
  ret i32 %tmp111
}

; Function Attrs: nounwind uwtable
define i32 @__osip_message_is_known_header(i8* %hname) #0 {
entry:
  %hname.addr = alloca i8*, align 8
  %hash = alloca i64, align 8
  %result = alloca i32, align 4
  %index = alloca i32, align 4
  store i8* %hname, i8** %hname.addr, align 8
  store i32 -1, i32* %result, align 4
  %tmp = load i8*, i8** %hname.addr, align 8
  %call = call i64 @osip_hash(i8* %tmp)
  store i64 %call, i64* %hash, align 8
  %tmp1 = load i64, i64* %hash, align 8
  %rem = urem i64 %tmp1, 150
  store i64 %rem, i64* %hash, align 8
  %tmp2 = load i64, i64* %hash, align 8
  %arrayidx = getelementptr inbounds [150 x i32], [150 x i32]* @hdr_ref_table, i32 0, i64 %tmp2
  %tmp3 = load i32, i32* %arrayidx, align 4
  store i32 %tmp3, i32* %index, align 4
  %tmp4 = load i32, i32* %index, align 4
  %cmp = icmp ne i32 %tmp4, -1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %tmp5 = load i32, i32* %index, align 4
  %idxprom = sext i32 %tmp5 to i64
  %arrayidx1 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom
  %hname2 = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx1, i32 0, i32 0
  %tmp6 = load i8*, i8** %hname2, align 8
  %tmp7 = load i8*, i8** %hname.addr, align 8
  %call3 = call i32 @strcmp(i8* %tmp6, i8* %tmp7) #7
  %cmp4 = icmp eq i32 0, %call3
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %tmp8 = load i32, i32* %index, align 4
  store i32 %tmp8, i32* %result, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %tmp9 = load i32, i32* %result, align 4
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @__osip_message_call_method(i32 %i, %struct.osip_message* %dest, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store %struct.osip_message* %dest, %struct.osip_message** %dest.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i32, i32* %i.addr, align 4
  %idxprom = sext i32 %tmp to i64
  %arrayidx = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom
  %setheader = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx, i32 0, i32 1
  %tmp1 = load i32 (%struct.osip_message*, i8*)*, i32 (%struct.osip_message*, i8*)** %setheader, align 8
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %dest.addr, align 8
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %call = call i32 %tmp1(%struct.osip_message* %tmp2, i8* %tmp3)
  store i32 %call, i32* %err, align 4
  %tmp4 = load i32, i32* %err, align 4
  %cmp = icmp slt i32 %tmp4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %tmp5 = load i32, i32* %i.addr, align 4
  %idxprom1 = sext i32 %tmp5 to i64
  %arrayidx2 = getelementptr inbounds [33 x %struct.___osip_message_config_t], [33 x %struct.___osip_message_config_t]* @pconfig, i32 0, i64 %idxprom1
  %ignored_when_invalid = getelementptr inbounds %struct.___osip_message_config_t, %struct.___osip_message_config_t* %arrayidx2, i32 0, i32 2
  %tmp6 = load i32, i32* %ignored_when_invalid, align 4
  %cmp3 = icmp eq i32 %tmp6, 1
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  %tmp7 = load i32, i32* %err, align 4
  store i32 %tmp7, i32* %retval
  br label %return

return:                                           ; preds = %if.end5, %if.then4
  %tmp8 = load i32, i32* %retval
  ret i32 %tmp8
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_type_init(%struct.osip_content_type** %content_type) #0 {
entry:
  %retval = alloca i32, align 4
  %content_type.addr = alloca %struct.osip_content_type**, align 8
  store %struct.osip_content_type** %content_type, %struct.osip_content_type*** %content_type.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 32)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_content_type*
  %tmp3 = load %struct.osip_content_type**, %struct.osip_content_type*** %content_type.addr, align 8
  store %struct.osip_content_type* %tmp2, %struct.osip_content_type** %tmp3, align 8
  %tmp4 = load %struct.osip_content_type**, %struct.osip_content_type*** %content_type.addr, align 8
  %tmp5 = load %struct.osip_content_type*, %struct.osip_content_type** %tmp4, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_content_type**, %struct.osip_content_type*** %content_type.addr, align 8
  %tmp7 = load %struct.osip_content_type*, %struct.osip_content_type** %tmp6, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp7, i32 0, i32 0
  store i8* null, i8** %type, align 8
  %tmp8 = load %struct.osip_content_type**, %struct.osip_content_type*** %content_type.addr, align 8
  %tmp9 = load %struct.osip_content_type*, %struct.osip_content_type** %tmp8, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp9, i32 0, i32 1
  store i8* null, i8** %subtype, align 8
  %tmp10 = load %struct.osip_content_type**, %struct.osip_content_type*** %content_type.addr, align 8
  %tmp11 = load %struct.osip_content_type*, %struct.osip_content_type** %tmp10, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp11, i32 0, i32 2
  %call2 = call i32 @osip_list_init(%struct.osip_list* %gen_params)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp12 = load i32, i32* %retval
  ret i32 %tmp12
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_content_type(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 17
  %tmp1 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp = icmp ne %struct.osip_content_type* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %cmp1 = icmp eq i8* %tmp2, null
  br i1 %cmp1, label %if.then4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp3, i64 0
  %tmp4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp4 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval
  br label %return

if.end5:                                          ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type6 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 17
  %call = call i32 @osip_content_type_init(%struct.osip_content_type** %content_type6)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp6, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end5
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end5
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type11 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 17
  %tmp10 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type11, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call12 = call i32 @osip_content_type_parse(%struct.osip_content_type* %tmp10, i8* %tmp11)
  store i32 %call12, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp13 = icmp ne i32 %tmp12, 0
  br i1 %cmp13, label %if.then15, label %if.end18

if.then15:                                        ; preds = %if.end10
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type16 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 17
  %tmp14 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type16, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 17
  store %struct.osip_content_type* null, %struct.osip_content_type** %content_type17, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end18:                                         ; preds = %if.end10
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end18, %if.then15, %if.then9, %if.then4, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_type_parse(%struct.osip_content_type* %content_type, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %content_type.addr = alloca %struct.osip_content_type*, align 8
  %hvalue.addr = alloca i8*, align 8
  %subtype = alloca i8*, align 8
  %osip_content_type_params = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_content_type* %content_type, %struct.osip_content_type** %content_type.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp3, i32 47) #7
  store i8* %call, i8** %subtype, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %call3 = call i8* @strchr(i8* %tmp4, i32 59) #7
  store i8* %call3, i8** %osip_content_type_params, align 8
  %tmp5 = load i8*, i8** %subtype, align 8
  %cmp4 = icmp eq i8* %tmp5, null
  br i1 %cmp4, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end
  %tmp6 = load i8*, i8** %osip_content_type_params, align 8
  %cmp8 = icmp ne i8* %tmp6, null
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end7
  %tmp7 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp7, i32 0, i32 2
  %tmp8 = load i8*, i8** %osip_content_type_params, align 8
  %call11 = call i32 @__osip_generic_param_parseall(%struct.osip_list* %gen_params, i8* %tmp8)
  store i32 %call11, i32* %i, align 4
  %tmp9 = load i32, i32* %i, align 4
  %cmp12 = icmp ne i32 %tmp9, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then10
  %tmp10 = load i32, i32* %i, align 4
  store i32 %tmp10, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.then10
  br label %if.end17

if.else:                                          ; preds = %if.end7
  %tmp11 = load i8*, i8** %subtype, align 8
  %tmp12 = load i8*, i8** %subtype, align 8
  %call16 = call i64 @strlen(i8* %tmp12) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp11, i64 %call16
  store i8* %add.ptr, i8** %osip_content_type_params, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end15
  %tmp13 = load i8*, i8** %subtype, align 8
  %tmp14 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp13 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp18 = icmp slt i64 %add, 2
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end17
  store i32 -5, i32* %retval
  br label %return

if.end21:                                         ; preds = %if.end17
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp15, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end21
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp17 = load i8*, i8** %subtype, align 8
  %tmp18 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast22 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.rhs.cast23 = ptrtoint i8* %tmp18 to i64
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23
  %add25 = add nsw i64 %sub.ptr.sub24, 1
  %call26 = call i8* %tmp16(i64 %add25)
  br label %cond.end

cond.false:                                       ; preds = %if.end21
  %tmp19 = load i8*, i8** %subtype, align 8
  %tmp20 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast27 = ptrtoint i8* %tmp19 to i64
  %sub.ptr.rhs.cast28 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28
  %add30 = add nsw i64 %sub.ptr.sub29, 1
  %call31 = call noalias i8* @malloc(i64 %add30) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call26, %cond.true ], [ %call31, %cond.false ]
  %tmp21 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp21, i32 0, i32 0
  store i8* %cond, i8** %type, align 8
  %tmp22 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type32 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp22, i32 0, i32 0
  %tmp23 = load i8*, i8** %type32, align 8
  %cmp33 = icmp eq i8* %tmp23, null
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end36:                                         ; preds = %cond.end
  %tmp24 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type37 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %type37, align 8
  %tmp26 = load i8*, i8** %hvalue.addr, align 8
  %tmp27 = load i8*, i8** %subtype, align 8
  %tmp28 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast38 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.rhs.cast39 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39
  %call41 = call i8* @osip_clrncpy(i8* %tmp25, i8* %tmp26, i64 %sub.ptr.sub40)
  %tmp29 = load i8*, i8** %osip_content_type_params, align 8
  %tmp30 = load i8*, i8** %subtype, align 8
  %sub.ptr.lhs.cast42 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.rhs.cast43 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %cmp45 = icmp slt i64 %sub.ptr.sub44, 2
  br i1 %cmp45, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end36
  store i32 -5, i32* %retval
  br label %return

if.end48:                                         ; preds = %if.end36
  %tmp31 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool49 = icmp ne i8* (i64)* %tmp31, null
  br i1 %tobool49, label %cond.true50, label %cond.false55

cond.true50:                                      ; preds = %if.end48
  %tmp32 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp33 = load i8*, i8** %osip_content_type_params, align 8
  %tmp34 = load i8*, i8** %subtype, align 8
  %sub.ptr.lhs.cast51 = ptrtoint i8* %tmp33 to i64
  %sub.ptr.rhs.cast52 = ptrtoint i8* %tmp34 to i64
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52
  %call54 = call i8* %tmp32(i64 %sub.ptr.sub53)
  br label %cond.end60

cond.false55:                                     ; preds = %if.end48
  %tmp35 = load i8*, i8** %osip_content_type_params, align 8
  %tmp36 = load i8*, i8** %subtype, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %tmp35 to i64
  %sub.ptr.rhs.cast57 = ptrtoint i8* %tmp36 to i64
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57
  %call59 = call noalias i8* @malloc(i64 %sub.ptr.sub58) #8
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false55, %cond.true50
  %cond61 = phi i8* [ %call54, %cond.true50 ], [ %call59, %cond.false55 ]
  %tmp37 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype62 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp37, i32 0, i32 1
  store i8* %cond61, i8** %subtype62, align 8
  %tmp38 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype63 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp38, i32 0, i32 1
  %tmp39 = load i8*, i8** %subtype63, align 8
  %cmp64 = icmp eq i8* %tmp39, null
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %cond.end60
  store i32 -4, i32* %retval
  br label %return

if.end67:                                         ; preds = %cond.end60
  %tmp40 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype68 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %subtype68, align 8
  %tmp42 = load i8*, i8** %subtype, align 8
  %add.ptr69 = getelementptr inbounds i8, i8* %tmp42, i64 1
  %tmp43 = load i8*, i8** %osip_content_type_params, align 8
  %tmp44 = load i8*, i8** %subtype, align 8
  %sub.ptr.lhs.cast70 = ptrtoint i8* %tmp43 to i64
  %sub.ptr.rhs.cast71 = ptrtoint i8* %tmp44 to i64
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71
  %sub = sub nsw i64 %sub.ptr.sub72, 1
  %call73 = call i8* @osip_clrncpy(i8* %tmp41, i8* %add.ptr69, i64 %sub)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end67, %if.then66, %if.then47, %if.then35, %if.then20, %if.then14, %if.then6, %if.then
  %tmp45 = load i32, i32* %retval
  ret i32 %tmp45
}

; Function Attrs: nounwind uwtable
define void @osip_content_type_free(%struct.osip_content_type* %content_type) #0 {
entry:
  %content_type.addr = alloca %struct.osip_content_type*, align 8
  store %struct.osip_content_type* %content_type, %struct.osip_content_type** %content_type.addr, align 8
  %tmp = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end25

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %type, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type4 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %type4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type5 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %type5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %subtype, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype12 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %subtype12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype14 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %subtype14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp17, i32 0, i32 2
  call void @osip_uri_param_freelist(%struct.osip_list* %gen_params)
  %tmp18 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type17 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp18, i32 0, i32 0
  store i8* null, i8** %type17, align 8
  %tmp19 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype18 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp19, i32 0, i32 1
  store i8* null, i8** %subtype18, align 8
  %tmp20 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %cmp19 = icmp ne %struct.osip_content_type* %tmp20, null
  br i1 %cmp19, label %if.then20, label %if.end25

if.then20:                                        ; preds = %if.end16
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool21 = icmp ne void (i8*)* %tmp21, null
  br i1 %tobool21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.then20
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp23 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %tmp24 = bitcast %struct.osip_content_type* %tmp23 to i8*
  call void %tmp22(i8* %tmp24)
  br label %if.end24

if.else23:                                        ; preds = %if.then20
  %tmp25 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %tmp26 = bitcast %struct.osip_content_type* %tmp25 to i8*
  call void @free(i8* %tmp26) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_content_type* @osip_message_get_content_type(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 17
  %tmp1 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  ret %struct.osip_content_type* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_type_to_str(%struct.osip_content_type* %content_type, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %content_type.addr = alloca %struct.osip_content_type*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %len = alloca i64, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %tmp_len = alloca i64, align 8
  store %struct.osip_content_type* %content_type, %struct.osip_content_type** %content_type.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %type, align 8
  %cmp2 = icmp eq i8* %tmp4, null
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp5, i32 0, i32 1
  %tmp6 = load i8*, i8** %subtype, align 8
  %cmp4 = icmp eq i8* %tmp6, null
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false3
  %tmp7 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type5 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %type5, align 8
  %call = call i64 @strlen(i8* %tmp8) #7
  %tmp9 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype6 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %subtype6, align 8
  %call7 = call i64 @strlen(i8* %tmp10) #7
  %add = add i64 %call, %call7
  %add8 = add i64 %add, 4
  %tmp11 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp11, i32 0, i32 2
  %call9 = call i32 @osip_list_size(%struct.osip_list* %gen_params)
  %mul = mul nsw i32 10, %call9
  %conv = sext i32 %mul to i64
  %add10 = add i64 %add8, %conv
  store i64 %add10, i64* %len, align 8
  %tmp12 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp12, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp13 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp14 = load i64, i64* %len, align 8
  %call11 = call i8* %tmp13(i64 %tmp14)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp15 = load i64, i64* %len, align 8
  %call12 = call noalias i8* @malloc(i64 %tmp15) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call11, %cond.true ], [ %call12, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp16 = load i8*, i8** %buf, align 8
  %cmp13 = icmp eq i8* %tmp16, null
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end16:                                         ; preds = %cond.end
  %tmp17 = load i8*, i8** %buf, align 8
  store i8* %tmp17, i8** %tmp, align 8
  %tmp18 = load i8*, i8** %tmp, align 8
  %tmp19 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %type17 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp19, i32 0, i32 0
  %tmp20 = load i8*, i8** %type17, align 8
  %tmp21 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %subtype18 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp21, i32 0, i32 1
  %tmp22 = load i8*, i8** %subtype18, align 8
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str148, i32 0, i32 0), i8* %tmp20, i8* %tmp22) #8
  %tmp23 = load i8*, i8** %tmp, align 8
  %tmp24 = load i8*, i8** %tmp, align 8
  %call20 = call i64 @strlen(i8* %tmp24) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp23, i64 %call20
  store i8* %add.ptr, i8** %tmp, align 8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end60, %if.end16
  %tmp25 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %gen_params23 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp25, i32 0, i32 2
  %tmp26 = load i32, i32* %pos, align 4
  %call24 = call i32 @osip_list_eol(%struct.osip_list* %gen_params23, i32 %tmp26)
  %tobool25 = icmp ne i32 %call24, 0
  %lnot = xor i1 %tobool25, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp27 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type.addr, align 8
  %gen_params27 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp27, i32 0, i32 2
  %tmp28 = load i32, i32* %pos, align 4
  %call28 = call i8* @osip_list_get(%struct.osip_list* %gen_params27, i32 %tmp28)
  %tmp29 = bitcast i8* %call28 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp29, %struct.osip_uri_param** %u_param, align 8
  %tmp30 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp30, i32 0, i32 1
  %tmp31 = load i8*, i8** %gvalue, align 8
  %cmp29 = icmp eq i8* %tmp31, null
  br i1 %cmp29, label %if.then31, label %if.end39

if.then31:                                        ; preds = %while.body
  %tmp32 = load i8*, i8** %buf, align 8
  %cmp32 = icmp ne i8* %tmp32, null
  br i1 %cmp32, label %if.then34, label %if.end38

if.then34:                                        ; preds = %if.then31
  %tmp33 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool35 = icmp ne void (i8*)* %tmp33, null
  br i1 %tobool35, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.then34
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp35 = load i8*, i8** %buf, align 8
  call void %tmp34(i8* %tmp35)
  br label %if.end37

if.else:                                          ; preds = %if.then34
  %tmp36 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp36) #8
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then36
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then31
  store i32 -5, i32* %retval
  br label %return

if.end39:                                         ; preds = %while.body
  %tmp37 = load i8*, i8** %buf, align 8
  %call40 = call i64 @strlen(i8* %tmp37) #7
  %add41 = add i64 %call40, 4
  %tmp38 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp38, i32 0, i32 0
  %tmp39 = load i8*, i8** %gname, align 8
  %call42 = call i64 @strlen(i8* %tmp39) #7
  %add43 = add i64 %add41, %call42
  %tmp40 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue44 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %gvalue44, align 8
  %call45 = call i64 @strlen(i8* %tmp41) #7
  %add46 = add i64 %add43, %call45
  %add47 = add i64 %add46, 1
  store i64 %add47, i64* %tmp_len, align 8
  %tmp42 = load i64, i64* %len, align 8
  %tmp43 = load i64, i64* %tmp_len, align 8
  %cmp48 = icmp ult i64 %tmp42, %tmp43
  br i1 %cmp48, label %if.then50, label %if.end60

if.then50:                                        ; preds = %if.end39
  %tmp44 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool51 = icmp ne i8* (i8*, i64)* %tmp44, null
  br i1 %tobool51, label %cond.true52, label %cond.false54

cond.true52:                                      ; preds = %if.then50
  %tmp45 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp46 = load i8*, i8** %buf, align 8
  %tmp47 = load i64, i64* %tmp_len, align 8
  %call53 = call i8* %tmp45(i8* %tmp46, i64 %tmp47)
  br label %cond.end56

cond.false54:                                     ; preds = %if.then50
  %tmp48 = load i8*, i8** %buf, align 8
  %tmp49 = load i64, i64* %tmp_len, align 8
  %call55 = call i8* @realloc(i8* %tmp48, i64 %tmp49) #8
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false54, %cond.true52
  %cond57 = phi i8* [ %call53, %cond.true52 ], [ %call55, %cond.false54 ]
  store i8* %cond57, i8** %buf, align 8
  %tmp50 = load i64, i64* %tmp_len, align 8
  store i64 %tmp50, i64* %len, align 8
  %tmp51 = load i8*, i8** %buf, align 8
  %tmp52 = load i8*, i8** %buf, align 8
  %call58 = call i64 @strlen(i8* %tmp52) #7
  %add.ptr59 = getelementptr inbounds i8, i8* %tmp51, i64 %call58
  store i8* %add.ptr59, i8** %tmp, align 8
  br label %if.end60

if.end60:                                         ; preds = %cond.end56, %if.end39
  %tmp53 = load i8*, i8** %tmp, align 8
  %tmp54 = load i64, i64* %len, align 8
  %tmp55 = load i8*, i8** %tmp, align 8
  %tmp56 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp55 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp56 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp54, %sub.ptr.sub
  %tmp57 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname61 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp57, i32 0, i32 0
  %tmp58 = load i8*, i8** %gname61, align 8
  %tmp59 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue62 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp59, i32 0, i32 1
  %tmp60 = load i8*, i8** %gvalue62, align 8
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp53, i64 %sub, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str1149, i32 0, i32 0), i8* %tmp58, i8* %tmp60) #8
  %tmp61 = load i8*, i8** %tmp, align 8
  %tmp62 = load i8*, i8** %tmp, align 8
  %call64 = call i64 @strlen(i8* %tmp62) #7
  %add.ptr65 = getelementptr inbounds i8, i8* %tmp61, i64 %call64
  store i8* %add.ptr65, i8** %tmp, align 8
  %tmp63 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp63, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp64 = load i8*, i8** %buf, align 8
  %tmp65 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp64, i8** %tmp65, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.end38, %if.then15, %if.then
  %tmp66 = load i32, i32* %retval
  ret i32 %tmp66
}

; Function Attrs: nounwind uwtable
define i32 @osip_content_type_clone(%struct.osip_content_type* %ctt, %struct.osip_content_type** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ctt.addr = alloca %struct.osip_content_type*, align 8
  %dest.addr = alloca %struct.osip_content_type**, align 8
  %i = alloca i32, align 4
  %ct = alloca %struct.osip_content_type*, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %dest_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_content_type* %ctt, %struct.osip_content_type** %ctt.addr, align 8
  store %struct.osip_content_type** %dest, %struct.osip_content_type*** %dest.addr, align 8
  %tmp = load %struct.osip_content_type**, %struct.osip_content_type*** %dest.addr, align 8
  store %struct.osip_content_type* null, %struct.osip_content_type** %tmp, align 8
  %tmp1 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_content_type_init(%struct.osip_content_type** %ct)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %type, align 8
  %cmp4 = icmp ne i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end3
  %tmp6 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %type6 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %type6, align 8
  %call7 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_content_type*, %struct.osip_content_type** %ct, align 8
  %type8 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp8, i32 0, i32 0
  store i8* %call7, i8** %type8, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end3
  %tmp9 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %subtype, align 8
  %cmp10 = icmp ne i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end9
  %tmp11 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %subtype12 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp11, i32 0, i32 1
  %tmp12 = load i8*, i8** %subtype12, align 8
  %call13 = call i8* @osip_strdup(i8* %tmp12)
  %tmp13 = load %struct.osip_content_type*, %struct.osip_content_type** %ct, align 8
  %subtype14 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp13, i32 0, i32 1
  store i8* %call13, i8** %subtype14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end9
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end22, %if.end15
  %tmp14 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp14, i32 0, i32 2
  %tmp15 = load i32, i32* %pos, align 4
  %call16 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp15)
  %tobool = icmp ne i32 %call16, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp16 = load %struct.osip_content_type*, %struct.osip_content_type** %ctt.addr, align 8
  %gen_params17 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp16, i32 0, i32 2
  %tmp17 = load i32, i32* %pos, align 4
  %call18 = call i8* @osip_list_get(%struct.osip_list* %gen_params17, i32 %tmp17)
  %tmp18 = bitcast i8* %call18 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp18, %struct.osip_uri_param** %u_param, align 8
  %tmp19 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %call19 = call i32 @osip_uri_param_clone(%struct.osip_uri_param* %tmp19, %struct.osip_uri_param** %dest_param)
  store i32 %call19, i32* %i, align 4
  %tmp20 = load i32, i32* %i, align 4
  %cmp20 = icmp ne i32 %tmp20, 0
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %while.body
  %tmp21 = load %struct.osip_content_type*, %struct.osip_content_type** %ct, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp21)
  %tmp22 = load i32, i32* %i, align 4
  store i32 %tmp22, i32* %retval
  br label %return

if.end22:                                         ; preds = %while.body
  %tmp23 = load %struct.osip_content_type*, %struct.osip_content_type** %ct, align 8
  %gen_params23 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp23, i32 0, i32 2
  %tmp24 = load %struct.osip_uri_param*, %struct.osip_uri_param** %dest_param, align 8
  %tmp25 = bitcast %struct.osip_uri_param* %tmp24 to i8*
  %call24 = call i32 @osip_list_add(%struct.osip_list* %gen_params23, i8* %tmp25, i32 -1)
  %tmp26 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp26, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp27 = load %struct.osip_content_type*, %struct.osip_content_type** %ct, align 8
  %tmp28 = load %struct.osip_content_type**, %struct.osip_content_type*** %dest.addr, align 8
  store %struct.osip_content_type* %tmp27, %struct.osip_content_type** %tmp28, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then21, %if.then2, %if.then
  %tmp29 = load i32, i32* %retval
  ret i32 %tmp29
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_proxy_authenticate(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %proxy_authenticate = alloca %struct.osip_www_authenticate*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_www_authenticate_init(%struct.osip_www_authenticate** %proxy_authenticate)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %proxy_authenticate, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_www_authenticate_parse(%struct.osip_www_authenticate* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %proxy_authenticate, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 22
  %tmp12 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %proxy_authenticate, align 8
  %tmp13 = bitcast %struct.osip_www_authenticate* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %proxy_authenticates, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_proxy_authenticate(%struct.osip_message* %sip, i32 %pos, %struct.osip_www_authenticate** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_www_authenticate**, align 8
  %proxy_authenticate = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_www_authenticate** %dest, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* null, %struct.osip_www_authenticate** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 22
  %call = call i32 @osip_list_size(%struct.osip_list* %proxy_authenticates)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authenticates1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 22
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %proxy_authenticates1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_www_authenticate*
  store %struct.osip_www_authenticate* %tmp5, %struct.osip_www_authenticate** %proxy_authenticate, align 8
  %tmp6 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %proxy_authenticate, align 8
  %tmp7 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* %tmp6, %struct.osip_www_authenticate** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_mime_version(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 21
  %tmp4 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version, align 8
  %cmp3 = icmp ne %struct.osip_content_length* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 21
  %call = call i32 @osip_content_length_init(%struct.osip_content_length** %mime_version7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 21
  %tmp10 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_content_length_parse(%struct.osip_content_length* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 21
  %tmp14 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version17, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 21
  store %struct.osip_content_length* null, %struct.osip_content_length** %mime_version18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define %struct.osip_content_length* @osip_message_get_mime_version(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %mime_version = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 21
  %tmp1 = load %struct.osip_content_length*, %struct.osip_content_length** %mime_version, align 8
  ret %struct.osip_content_length* %tmp1
}

; Function Attrs: nounwind uwtable
define i8* @osip_strerror(i32 %err) #0 {
entry:
  %retval = alloca i8*, align 8
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  %tmp = load i32, i32* %err.addr, align 4
  %cmp = icmp sgt i32 %tmp, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp1 = load i8*, i8** getelementptr inbounds ([61 x i8*], [61 x i8*]* @osip_error_table, i32 0, i64 0), align 8
  store i8* %tmp1, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load i32, i32* %err.addr, align 4
  %cmp1 = icmp sgt i32 %tmp2, -60
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %err.addr, align 4
  %sub = sub nsw i32 0, %tmp3
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [61 x i8*], [61 x i8*]* @osip_error_table, i32 0, i64 %idxprom
  %tmp4 = load i8*, i8** %arrayidx, align 8
  store i8* %tmp4, i8** %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp5 = load i8*, i8** getelementptr inbounds ([61 x i8*], [61 x i8*]* @osip_error_table, i32 0, i64 59), align 8
  store i8* %tmp5, i8** %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp6 = load i8*, i8** %retval
  ret i8* %tmp6
}

; Function Attrs: nounwind uwtable
define i32 @osip_build_random_number() #0 {
entry:
  %retval = alloca i32, align 4
  %ticks = alloca i32, align 4
  %tv = alloca %struct.timeval, align 8
  %fd = alloca i32, align 4
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  %ticks16 = alloca i32, align 4
  %tv17 = alloca %struct.timeval, align 8
  %tmp = load i32, i32* @random_seed_set, align 4
  %tobool = icmp ne i32 %tmp, 0
  br i1 %tobool, label %if.end10, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #8
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 0
  %tmp1 = load i64, i64* %tv_sec, align 8
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 1
  %tmp2 = load i64, i64* %tv_usec, align 8
  %add = add nsw i64 %tmp1, %tmp2
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ticks, align 4
  %call1 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str19187, i32 0, i32 0), i32 0)
  store i32 %call1, i32* %fd, align 4
  %tmp3 = load i32, i32* %fd, align 4
  %cmp = icmp sgt i32 %tmp3, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then3
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp slt i32 %tmp4, 512
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp5 = load i32, i32* %fd, align 4
  %tmp6 = bitcast i32* %r to i8*
  %call6 = call i64 @read(i32 %tmp5, i8* %tmp6, i64 4)
  %tmp7 = load i32, i32* %r, align 4
  %tmp8 = load i32, i32* %ticks, align 4
  %add7 = add i32 %tmp8, %tmp7
  store i32 %add7, i32* %ticks, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tmp10 = load i32, i32* %fd, align 4
  %call8 = call i32 @close(i32 %tmp10)
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %tmp11 = load i32, i32* %ticks, align 4
  %conv9 = zext i32 %tmp11 to i64
  call void @srand48(i64 %conv9) #8
  store i32 1, i32* @random_seed_set, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end, %entry
  %call11 = call i64 @lrand48() #8
  %conv12 = trunc i64 %call11 to i32
  store i32 %conv12, i32* %val, align 4
  %tmp12 = load i32, i32* %val, align 4
  %cmp13 = icmp eq i32 %tmp12, 0
  br i1 %cmp13, label %if.then15, label %if.end26

if.then15:                                        ; preds = %if.end10
  %call18 = call i32 @gettimeofday(%struct.timeval* %tv17, %struct.timezone* null) #8
  %tv_sec19 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv17, i32 0, i32 0
  %tmp13 = load i64, i64* %tv_sec19, align 8
  %tv_usec20 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv17, i32 0, i32 1
  %tmp14 = load i64, i64* %tv_usec20, align 8
  %add21 = add nsw i64 %tmp13, %tmp14
  %conv22 = trunc i64 %add21 to i32
  store i32 %conv22, i32* %ticks16, align 4
  %tmp15 = load i32, i32* %ticks16, align 4
  %conv23 = zext i32 %tmp15 to i64
  call void @srand48(i64 %conv23) #8
  %call24 = call i64 @lrand48() #8
  %conv25 = trunc i64 %call24 to i32
  store i32 %conv25, i32* %retval
  br label %return

if.end26:                                         ; preds = %if.end10
  %tmp16 = load i32, i32* %val, align 4
  store i32 %tmp16, i32* %retval
  br label %return

return:                                           ; preds = %if.end26, %if.then15
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #3

declare i32 @open(i8*, i32, ...) #2

declare i64 @read(i32, i8*, i64) #2

declare i32 @close(i32) #2

; Function Attrs: nounwind
declare void @srand48(i64) #3

; Function Attrs: nounwind
declare i64 @lrand48() #3

; Function Attrs: nounwind uwtable
define i8* @osip_strncpy(i8* %dest, i8* %src, i64 %length) #0 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load i8*, i8** %dest.addr, align 8
  %tmp1 = load i8*, i8** %src.addr, align 8
  %tmp2 = load i64, i64* %length.addr, align 8
  %call = call i8* @strncpy(i8* %tmp, i8* %tmp1, i64 %tmp2) #8
  %tmp3 = load i64, i64* %length.addr, align 8
  %tmp4 = load i8*, i8** %dest.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp4, i64 %tmp3
  store i8 0, i8* %arrayidx, align 1
  %tmp5 = load i8*, i8** %dest.addr, align 8
  ret i8* %tmp5
}

; Function Attrs: nounwind uwtable
define i8* @osip_strdup(i8* %ch) #0 {
entry:
  %retval = alloca i8*, align 8
  %ch.addr = alloca i8*, align 8
  %copy = alloca i8*, align 8
  %length = alloca i64, align 8
  store i8* %ch, i8** %ch.addr, align 8
  %tmp = load i8*, i8** %ch.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %ch.addr, align 8
  %call = call i64 @strlen(i8* %tmp1) #7
  store i64 %call, i64* %length, align 8
  %tmp2 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp3 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp4 = load i64, i64* %length, align 8
  %add = add i64 %tmp4, 1
  %call1 = call i8* %tmp3(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp5 = load i64, i64* %length, align 8
  %add2 = add i64 %tmp5, 1
  %call3 = call noalias i8* @malloc(i64 %add2) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call3, %cond.false ]
  store i8* %cond, i8** %copy, align 8
  %tmp6 = load i8*, i8** %copy, align 8
  %cmp4 = icmp eq i8* %tmp6, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %cond.end
  store i8* null, i8** %retval
  br label %return

if.end6:                                          ; preds = %cond.end
  %tmp7 = load i8*, i8** %copy, align 8
  %tmp8 = load i8*, i8** %ch.addr, align 8
  %tmp9 = load i64, i64* %length, align 8
  %call7 = call i8* @osip_strncpy(i8* %tmp7, i8* %tmp8, i64 %tmp9)
  %tmp10 = load i8*, i8** %copy, align 8
  store i8* %tmp10, i8** %retval
  br label %return

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %tmp11 = load i8*, i8** %retval
  ret i8* %tmp11
}

; Function Attrs: nounwind uwtable
define i32 @osip_atoi(i8* %number) #0 {
entry:
  %retval = alloca i32, align 4
  %number.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %number, i8** %number.addr, align 8
  %tmp = load i8*, i8** %number.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %number.addr, align 8
  %call = call i64 @strtol(i8* %tmp1, i8** null, i32 10) #8
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %conv1 = sext i32 %tmp2 to i64
  %cmp2 = icmp eq i64 %conv1, -9223372036854775808
  br i1 %cmp2, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  %conv4 = sext i32 %tmp3 to i64
  %cmp5 = icmp eq i64 %conv4, 9223372036854775807
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -1, i32* %retval
  br label %return

if.end8:                                          ; preds = %lor.lhs.false
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %tmp5 = load i32, i32* %retval
  ret i32 %tmp5
}

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #3

; Function Attrs: nounwind uwtable
define void @osip_usleep(i32 %useconds) #0 {
entry:
  %useconds.addr = alloca i32, align 4
  %delay = alloca %struct.timeval, align 8
  %sec = alloca i32, align 4
  store i32 %useconds, i32* %useconds.addr, align 4
  %tmp = load i32, i32* %useconds.addr, align 4
  %div = sdiv i32 %tmp, 1000000
  store i32 %div, i32* %sec, align 4
  %tmp1 = load i32, i32* %sec, align 4
  %cmp = icmp sgt i32 %tmp1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tmp2 = load i32, i32* %sec, align 4
  %conv = sext i32 %tmp2 to i64
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %delay, i32 0, i32 0
  store i64 %conv, i64* %tv_sec, align 8
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %delay, i32 0, i32 1
  store i64 0, i64* %tv_usec, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %delay, i32 0, i32 0
  store i64 0, i64* %tv_sec1, align 8
  %tmp3 = load i32, i32* %useconds.addr, align 4
  %conv2 = sext i32 %tmp3 to i64
  %tv_usec3 = getelementptr inbounds %struct.timeval, %struct.timeval* %delay, i32 0, i32 1
  store i64 %conv2, i64* %tv_usec3, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call i32 @select(i32 0, %struct.fd_set* null, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %delay)
  ret void
}

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

; Function Attrs: nounwind uwtable
define i8* @osip_strdup_without_quote(i8* %ch) #0 {
entry:
  %retval = alloca i8*, align 8
  %ch.addr = alloca i8*, align 8
  %copy = alloca i8*, align 8
  store i8* %ch, i8** %ch.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp2 = load i8*, i8** %ch.addr, align 8
  %call = call i64 @strlen(i8* %tmp2) #7
  %add = add i64 %call, 1
  %call1 = call i8* %tmp1(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %tmp3 = load i8*, i8** %ch.addr, align 8
  %call2 = call i64 @strlen(i8* %tmp3) #7
  %add3 = add i64 %call2, 1
  %call4 = call noalias i8* @malloc(i64 %add3) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call4, %cond.false ]
  store i8* %cond, i8** %copy, align 8
  %tmp4 = load i8*, i8** %copy, align 8
  %cmp = icmp eq i8* %tmp4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp5 = load i8*, i8** %ch.addr, align 8
  %tmp6 = load i8, i8* %tmp5, align 1
  %conv = sext i8 %tmp6 to i32
  %cmp5 = icmp eq i32 %conv, 34
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %tmp7 = load i8*, i8** %copy, align 8
  %tmp8 = load i8*, i8** %ch.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp8, i64 1
  %tmp9 = load i8*, i8** %ch.addr, align 8
  %add.ptr8 = getelementptr inbounds i8, i8* %tmp9, i64 1
  %call9 = call i64 @strlen(i8* %add.ptr8) #7
  %call10 = call i8* @osip_strncpy(i8* %tmp7, i8* %add.ptr, i64 %call9)
  %tmp10 = load i8*, i8** %copy, align 8
  %tmp11 = load i8*, i8** %copy, align 8
  %call11 = call i64 @strlen(i8* %tmp11) #7
  %add.ptr12 = getelementptr inbounds i8, i8* %tmp10, i64 %call11
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr12, i64 -1
  %call14 = call i8* @osip_strncpy(i8* %add.ptr13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str20188, i32 0, i32 0), i64 1)
  br label %if.end17

if.else:                                          ; preds = %if.end
  %tmp12 = load i8*, i8** %copy, align 8
  %tmp13 = load i8*, i8** %ch.addr, align 8
  %tmp14 = load i8*, i8** %ch.addr, align 8
  %call15 = call i64 @strlen(i8* %tmp14) #7
  %call16 = call i8* @osip_strncpy(i8* %tmp12, i8* %tmp13, i64 %call15)
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then7
  %tmp15 = load i8*, i8** %copy, align 8
  store i8* %tmp15, i8** %retval
  br label %return

return:                                           ; preds = %if.end17, %if.then
  %tmp16 = load i8*, i8** %retval
  ret i8* %tmp16
}

; Function Attrs: nounwind uwtable
define i32 @osip_tolower(i8* %word) #0 {
entry:
  %word.addr = alloca i8*, align 8
  store i8* %word, i8** %word.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tmp = load i8*, i8** %word.addr, align 8
  %tmp1 = load i8, i8* %tmp, align 1
  %tobool = icmp ne i8 %tmp1, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp2 = load i8*, i8** %word.addr, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %conv = sext i8 %tmp3 to i32
  %call = call i32 @tolower(i32 %conv) #8
  %conv1 = trunc i32 %call to i8
  %tmp4 = load i8*, i8** %word.addr, align 8
  store i8 %conv1, i8* %tmp4, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp5 = load i8*, i8** %word.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp5, i32 1
  store i8* %incdec.ptr, i8** %word.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @tolower(i32) #3

; Function Attrs: nounwind uwtable
define i32 @osip_strcasecmp(i8* %s1, i8* %s2) #0 {
entry:
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  store i8* %s2, i8** %s2.addr, align 8
  %tmp = load i8*, i8** %s1.addr, align 8
  %tmp1 = load i8*, i8** %s2.addr, align 8
  %call = call i32 @strcasecmp(i8* %tmp, i8* %tmp1) #7
  ret i32 %call
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define i32 @osip_strncasecmp(i8* %s1, i8* %s2, i64 %len) #0 {
entry:
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s1, i8** %s1.addr, align 8
  store i8* %s2, i8** %s2.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %tmp = load i8*, i8** %s1.addr, align 8
  %tmp1 = load i8*, i8** %s2.addr, align 8
  %tmp2 = load i64, i64* %len.addr, align 8
  %call = call i32 @strncasecmp(i8* %tmp, i8* %tmp1, i64 %tmp2) #7
  ret i32 %call
}

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define i8* @osip_strcasestr(i8* %haystack, i8* %needle) #0 {
entry:
  %retval = alloca i8*, align 8
  %haystack.addr = alloca i8*, align 8
  %needle.addr = alloca i8*, align 8
  %c = alloca i8, align 1
  %sc = alloca i8, align 1
  %len = alloca i64, align 8
  store i8* %haystack, i8** %haystack.addr, align 8
  store i8* %needle, i8** %needle.addr, align 8
  %tmp = load i8*, i8** %needle.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp, i32 1
  store i8* %incdec.ptr, i8** %needle.addr, align 8
  %tmp1 = load i8, i8* %tmp, align 1
  store i8 %tmp1, i8* %c, align 1
  %conv = sext i8 %tmp1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end24

if.then:                                          ; preds = %entry
  %tmp2 = load i8, i8* %c, align 1
  %conv2 = zext i8 %tmp2 to i32
  %call = call i32 @tolower(i32 %conv2) #8
  %conv3 = trunc i32 %call to i8
  store i8 %conv3, i8* %c, align 1
  %tmp3 = load i8*, i8** %needle.addr, align 8
  %call4 = call i64 @strlen(i8* %tmp3) #7
  store i64 %call4, i64* %len, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond18, %if.then
  br label %do.body5

do.body5:                                         ; preds = %do.cond, %do.body
  %tmp4 = load i8*, i8** %haystack.addr, align 8
  %incdec.ptr6 = getelementptr inbounds i8, i8* %tmp4, i32 1
  store i8* %incdec.ptr6, i8** %haystack.addr, align 8
  %tmp5 = load i8, i8* %tmp4, align 1
  store i8 %tmp5, i8* %sc, align 1
  %conv7 = sext i8 %tmp5 to i32
  %cmp8 = icmp eq i32 %conv7, 0
  br i1 %cmp8, label %if.then10, label %if.end

if.then10:                                        ; preds = %do.body5
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %do.body5
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %tmp6 = load i8, i8* %sc, align 1
  %conv11 = zext i8 %tmp6 to i32
  %call12 = call i32 @tolower(i32 %conv11) #8
  %conv13 = trunc i32 %call12 to i8
  %conv14 = sext i8 %conv13 to i32
  %tmp7 = load i8, i8* %c, align 1
  %conv15 = sext i8 %tmp7 to i32
  %cmp16 = icmp ne i32 %conv14, %conv15
  br i1 %cmp16, label %do.body5, label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.cond18

do.cond18:                                        ; preds = %do.end
  %tmp8 = load i8*, i8** %haystack.addr, align 8
  %tmp9 = load i8*, i8** %needle.addr, align 8
  %tmp10 = load i64, i64* %len, align 8
  %call19 = call i32 @osip_strncasecmp(i8* %tmp8, i8* %tmp9, i64 %tmp10)
  %cmp20 = icmp ne i32 %call19, 0
  br i1 %cmp20, label %do.body, label %do.end22

do.end22:                                         ; preds = %do.cond18
  %tmp11 = load i8*, i8** %haystack.addr, align 8
  %incdec.ptr23 = getelementptr inbounds i8, i8* %tmp11, i32 -1
  store i8* %incdec.ptr23, i8** %haystack.addr, align 8
  br label %if.end24

if.end24:                                         ; preds = %do.end22, %entry
  %tmp12 = load i8*, i8** %haystack.addr, align 8
  store i8* %tmp12, i8** %retval
  br label %return

return:                                           ; preds = %if.end24, %if.then10
  %tmp13 = load i8*, i8** %retval
  ret i8* %tmp13
}

; Function Attrs: nounwind uwtable
define i32 @osip_clrspace(i8* %word) #0 {
entry:
  %retval = alloca i32, align 4
  %word.addr = alloca i8*, align 8
  %pbeg = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %len = alloca i64, align 8
  store i8* %word, i8** %word.addr, align 8
  %tmp = load i8*, i8** %word.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %word.addr, align 8
  %tmp2 = load i8, i8* %tmp1, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp3 = load i8*, i8** %word.addr, align 8
  %call = call i64 @strlen(i8* %tmp3) #7
  store i64 %call, i64* %len, align 8
  %tmp4 = load i8*, i8** %word.addr, align 8
  store i8* %tmp4, i8** %pbeg, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %tmp5 = load i8*, i8** %pbeg, align 8
  %tmp6 = load i8, i8* %tmp5, align 1
  %conv5 = sext i8 %tmp6 to i32
  %cmp6 = icmp eq i32 32, %conv5
  br i1 %cmp6, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %tmp7 = load i8*, i8** %pbeg, align 8
  %tmp8 = load i8, i8* %tmp7, align 1
  %conv8 = sext i8 %tmp8 to i32
  %cmp9 = icmp eq i32 13, %conv8
  br i1 %cmp9, label %lor.end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %tmp9 = load i8*, i8** %pbeg, align 8
  %tmp10 = load i8, i8* %tmp9, align 1
  %conv12 = sext i8 %tmp10 to i32
  %cmp13 = icmp eq i32 10, %conv12
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false11
  %tmp11 = load i8*, i8** %pbeg, align 8
  %tmp12 = load i8, i8* %tmp11, align 1
  %conv15 = sext i8 %tmp12 to i32
  %cmp16 = icmp eq i32 9, %conv15
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false11, %lor.lhs.false, %while.cond
  %tmp13 = phi i1 [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp16, %lor.rhs ]
  br i1 %tmp13, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %tmp14 = load i8*, i8** %pbeg, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp14, i32 1
  store i8* %incdec.ptr, i8** %pbeg, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %tmp15 = load i8*, i8** %word.addr, align 8
  %tmp16 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp15, i64 %tmp16
  %add.ptr18 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  store i8* %add.ptr18, i8** %pend, align 8
  br label %while.cond19

while.cond19:                                     ; preds = %if.end41, %while.end
  %tmp17 = load i8*, i8** %pend, align 8
  %tmp18 = load i8, i8* %tmp17, align 1
  %conv20 = sext i8 %tmp18 to i32
  %cmp21 = icmp eq i32 32, %conv20
  br i1 %cmp21, label %lor.end35, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %while.cond19
  %tmp19 = load i8*, i8** %pend, align 8
  %tmp20 = load i8, i8* %tmp19, align 1
  %conv24 = sext i8 %tmp20 to i32
  %cmp25 = icmp eq i32 13, %conv24
  br i1 %cmp25, label %lor.end35, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %tmp21 = load i8*, i8** %pend, align 8
  %tmp22 = load i8, i8* %tmp21, align 1
  %conv28 = sext i8 %tmp22 to i32
  %cmp29 = icmp eq i32 10, %conv28
  br i1 %cmp29, label %lor.end35, label %lor.rhs31

lor.rhs31:                                        ; preds = %lor.lhs.false27
  %tmp23 = load i8*, i8** %pend, align 8
  %tmp24 = load i8, i8* %tmp23, align 1
  %conv32 = sext i8 %tmp24 to i32
  %cmp33 = icmp eq i32 9, %conv32
  br label %lor.end35

lor.end35:                                        ; preds = %lor.rhs31, %lor.lhs.false27, %lor.lhs.false23, %while.cond19
  %tmp25 = phi i1 [ true, %lor.lhs.false27 ], [ true, %lor.lhs.false23 ], [ true, %while.cond19 ], [ %cmp33, %lor.rhs31 ]
  br i1 %tmp25, label %while.body36, label %while.end42

while.body36:                                     ; preds = %lor.end35
  %tmp26 = load i8*, i8** %pend, align 8
  %incdec.ptr37 = getelementptr inbounds i8, i8* %tmp26, i32 -1
  store i8* %incdec.ptr37, i8** %pend, align 8
  %tmp27 = load i8*, i8** %pend, align 8
  %tmp28 = load i8*, i8** %pbeg, align 8
  %cmp38 = icmp ult i8* %tmp27, %tmp28
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %while.body36
  %tmp29 = load i8*, i8** %word.addr, align 8
  store i8 0, i8* %tmp29, align 1
  store i32 0, i32* %retval
  br label %return

if.end41:                                         ; preds = %while.body36
  br label %while.cond19

while.end42:                                      ; preds = %lor.end35
  %tmp30 = load i8*, i8** %pend, align 8
  %add.ptr43 = getelementptr inbounds i8, i8* %tmp30, i64 1
  %tmp31 = load i8*, i8** %word.addr, align 8
  %tmp32 = load i64, i64* %len, align 8
  %sub = sub i64 %tmp32, 1
  %add.ptr44 = getelementptr inbounds i8, i8* %tmp31, i64 %sub
  %cmp45 = icmp ule i8* %add.ptr43, %add.ptr44
  br i1 %cmp45, label %if.then47, label %if.end48

if.then47:                                        ; preds = %while.end42
  %tmp33 = load i8*, i8** %pend, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp33, i64 1
  store i8 0, i8* %arrayidx, align 1
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %while.end42
  %tmp34 = load i8*, i8** %pbeg, align 8
  %tmp35 = load i8*, i8** %word.addr, align 8
  %cmp49 = icmp ne i8* %tmp34, %tmp35
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end48
  %tmp36 = load i8*, i8** %word.addr, align 8
  %tmp37 = load i8*, i8** %pbeg, align 8
  %tmp38 = load i8*, i8** %pend, align 8
  %tmp39 = load i8*, i8** %pbeg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp38 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp39 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 2
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %tmp36, i8* %tmp37, i64 %add, i32 1, i1 false)
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.end48
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end52, %if.then40, %if.then3, %if.then
  %tmp40 = load i32, i32* %retval
  ret i32 %tmp40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define i32 @__osip_set_next_token(i8** %dest, i8* %buf, i32 %end_separator, i8** %next) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %buf.addr = alloca i8*, align 8
  %end_separator.addr = alloca i32, align 4
  %next.addr = alloca i8**, align 8
  %sep = alloca i8*, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %end_separator, i32* %end_separator.addr, align 4
  store i8** %next, i8*** %next.addr, align 8
  %tmp = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load i8*, i8** %buf.addr, align 8
  store i8* %tmp1, i8** %sep, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %tmp2 = load i8*, i8** %sep, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %conv = sext i8 %tmp3 to i32
  %tmp4 = load i32, i32* %end_separator.addr, align 4
  %cmp = icmp ne i32 %conv, %tmp4
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %tmp5 = load i8*, i8** %sep, align 8
  %tmp6 = load i8, i8* %tmp5, align 1
  %conv2 = sext i8 %tmp6 to i32
  %cmp3 = icmp ne i32 %conv2, 0
  br i1 %cmp3, label %land.lhs.true5, label %land.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %tmp7 = load i8*, i8** %sep, align 8
  %tmp8 = load i8, i8* %tmp7, align 1
  %conv6 = sext i8 %tmp8 to i32
  %cmp7 = icmp ne i32 %conv6, 13
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true5
  %tmp9 = load i8*, i8** %sep, align 8
  %tmp10 = load i8, i8* %tmp9, align 1
  %conv9 = sext i8 %tmp10 to i32
  %cmp10 = icmp ne i32 %conv9, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true5, %land.lhs.true, %while.cond
  %tmp11 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %tmp11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp12 = load i8*, i8** %sep, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp12, i32 1
  store i8* %incdec.ptr, i8** %sep, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp13 = load i8*, i8** %sep, align 8
  %tmp14 = load i8, i8* %tmp13, align 1
  %conv12 = sext i8 %tmp14 to i32
  %cmp13 = icmp eq i32 %conv12, 13
  br i1 %cmp13, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %tmp15 = load i8*, i8** %sep, align 8
  %tmp16 = load i8, i8* %tmp15, align 1
  %conv15 = sext i8 %tmp16 to i32
  %cmp16 = icmp eq i32 %conv15, 10
  br i1 %cmp16, label %if.then, label %if.end22

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %tmp17 = load i8*, i8** %sep, align 8
  %tmp18 = load i8, i8* %tmp17, align 1
  %conv18 = sext i8 %tmp18 to i32
  %tmp19 = load i32, i32* %end_separator.addr, align 4
  %cmp19 = icmp ne i32 %conv18, %tmp19
  br i1 %cmp19, label %if.then21, label %if.end

if.then21:                                        ; preds = %if.then
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end22

if.end22:                                         ; preds = %if.end, %lor.lhs.false
  %tmp20 = load i8*, i8** %sep, align 8
  %tmp21 = load i8, i8* %tmp20, align 1
  %conv23 = sext i8 %tmp21 to i32
  %cmp24 = icmp eq i32 %conv23, 0
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  store i32 -1, i32* %retval
  br label %return

if.end27:                                         ; preds = %if.end22
  %tmp22 = load i8*, i8** %sep, align 8
  %tmp23 = load i8*, i8** %buf.addr, align 8
  %cmp28 = icmp eq i8* %tmp22, %tmp23
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end27
  store i32 -1, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.end27
  %tmp24 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp24, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end31
  %tmp25 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp26 = load i8*, i8** %sep, align 8
  %tmp27 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp26 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %call = call i8* %tmp25(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end31
  %tmp28 = load i8*, i8** %sep, align 8
  %tmp29 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast32 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.rhs.cast33 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33
  %add35 = add nsw i64 %sub.ptr.sub34, 1
  %call36 = call noalias i8* @malloc(i64 %add35) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call36, %cond.false ]
  %tmp30 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp30, align 8
  %tmp31 = load i8**, i8*** %dest.addr, align 8
  %tmp32 = load i8*, i8** %tmp31, align 8
  %cmp37 = icmp eq i8* %tmp32, null
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end40:                                         ; preds = %cond.end
  %tmp33 = load i8**, i8*** %dest.addr, align 8
  %tmp34 = load i8*, i8** %tmp33, align 8
  %tmp35 = load i8*, i8** %buf.addr, align 8
  %tmp36 = load i8*, i8** %sep, align 8
  %tmp37 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast41 = ptrtoint i8* %tmp36 to i64
  %sub.ptr.rhs.cast42 = ptrtoint i8* %tmp37 to i64
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42
  %call44 = call i8* @osip_strncpy(i8* %tmp34, i8* %tmp35, i64 %sub.ptr.sub43)
  %tmp38 = load i8*, i8** %sep, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp38, i64 1
  %tmp39 = load i8**, i8*** %next.addr, align 8
  store i8* %add.ptr, i8** %tmp39, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then39, %if.then30, %if.then26, %if.then21
  %tmp40 = load i32, i32* %retval
  ret i32 %tmp40
}

; Function Attrs: nounwind uwtable
define i8* @__osip_quote_find(i8* %qstring) #0 {
entry:
  %retval = alloca i8*, align 8
  %qstring.addr = alloca i8*, align 8
  %quote = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %qstring, i8** %qstring.addr, align 8
  %tmp = load i8*, i8** %qstring.addr, align 8
  %call = call i8* @strchr(i8* %tmp, i32 34) #7
  store i8* %call, i8** %quote, align 8
  %tmp1 = load i8*, i8** %quote, align 8
  %tmp2 = load i8*, i8** %qstring.addr, align 8
  %cmp = icmp eq i8* %tmp1, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp3 = load i8*, i8** %quote, align 8
  store i8* %tmp3, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp4 = load i8*, i8** %quote, align 8
  %cmp1 = icmp eq i8* %tmp4, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i8* null, i8** %retval
  br label %return

if.end3:                                          ; preds = %if.end
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end40, %if.end3
  %tmp5 = load i8*, i8** %quote, align 8
  %tmp6 = load i32, i32* %i, align 4
  %idx.ext = sext i32 %tmp6 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i8, i8* %tmp5, i64 %idx.neg
  %call4 = call i32 @strncmp(i8* %add.ptr, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str21189, i32 0, i32 0), i64 1) #7
  %cmp5 = icmp eq i32 0, %call4
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %for.cond
  %tmp7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end15

if.else:                                          ; preds = %for.cond
  %tmp8 = load i32, i32* %i, align 4
  %rem = srem i32 %tmp8, 2
  %cmp7 = icmp eq i32 %rem, 1
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.else
  %tmp9 = load i8*, i8** %quote, align 8
  store i8* %tmp9, i8** %retval
  br label %return

if.end9:                                          ; preds = %if.else
  %tmp10 = load i8*, i8** %quote, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %tmp10, i64 1
  %call11 = call i8* @strchr(i8* %add.ptr10, i32 34) #7
  store i8* %call11, i8** %quote, align 8
  %tmp11 = load i8*, i8** %quote, align 8
  %cmp12 = icmp eq i8* %tmp11, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end9
  store i8* null, i8** %retval
  br label %return

if.end14:                                         ; preds = %if.end9
  store i32 1, i32* %i, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then6
  %tmp12 = load i8*, i8** %quote, align 8
  %tmp13 = load i32, i32* %i, align 4
  %idx.ext16 = sext i32 %tmp13 to i64
  %idx.neg17 = sub i64 0, %idx.ext16
  %add.ptr18 = getelementptr inbounds i8, i8* %tmp12, i64 %idx.neg17
  %tmp14 = load i8*, i8** %qstring.addr, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %tmp14, i64 -1
  %cmp20 = icmp eq i8* %add.ptr18, %add.ptr19
  br i1 %cmp20, label %if.then21, label %if.end40

if.then21:                                        ; preds = %if.end15
  %tmp15 = load i8*, i8** %qstring.addr, align 8
  %tmp16 = load i8, i8* %tmp15, align 1
  %conv = sext i8 %tmp16 to i32
  %cmp22 = icmp eq i32 %conv, 92
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.then21
  %tmp17 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %tmp17, 1
  store i32 %inc25, i32* %i, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.then21
  %tmp18 = load i32, i32* %i, align 4
  %rem27 = srem i32 %tmp18, 2
  %cmp28 = icmp eq i32 %rem27, 0
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.end26
  %tmp19 = load i8*, i8** %quote, align 8
  store i8* %tmp19, i8** %retval
  br label %return

if.else31:                                        ; preds = %if.end26
  %tmp20 = load i8*, i8** %quote, align 8
  %add.ptr32 = getelementptr inbounds i8, i8* %tmp20, i64 1
  store i8* %add.ptr32, i8** %qstring.addr, align 8
  %tmp21 = load i8*, i8** %quote, align 8
  %add.ptr33 = getelementptr inbounds i8, i8* %tmp21, i64 1
  %call34 = call i8* @strchr(i8* %add.ptr33, i32 34) #7
  store i8* %call34, i8** %quote, align 8
  %tmp22 = load i8*, i8** %quote, align 8
  %cmp35 = icmp eq i8* %tmp22, null
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.else31
  store i8* null, i8** %retval
  br label %return

if.end38:                                         ; preds = %if.else31
  store i32 1, i32* %i, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.end38
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end15
  br label %for.cond

return:                                           ; preds = %if.then37, %if.then30, %if.then13, %if.then8, %if.then2, %if.then
  %tmp23 = load i8*, i8** %retval
  ret i8* %tmp23
}

; Function Attrs: nounwind uwtable
define i8* @osip_enquote(i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %rtn = alloca i8*, align 8
  %t = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp2 = load i8*, i8** %s.addr, align 8
  %call = call i64 @strlen(i8* %tmp2) #7
  %mul = mul i64 %call, 2
  %add = add i64 %mul, 3
  %call1 = call i8* %tmp1(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %tmp3 = load i8*, i8** %s.addr, align 8
  %call2 = call i64 @strlen(i8* %tmp3) #7
  %mul3 = mul i64 %call2, 2
  %add4 = add i64 %mul3, 3
  %call5 = call noalias i8* @malloc(i64 %add4) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call5, %cond.false ]
  store i8* %cond, i8** %rtn, align 8
  store i8* %cond, i8** %t, align 8
  %tmp4 = load i8*, i8** %rtn, align 8
  %cmp = icmp eq i8* %tmp4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp5 = load i8*, i8** %t, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp5, i32 1
  store i8* %incdec.ptr, i8** %t, align 8
  store i8 34, i8* %tmp5, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %tmp6 = load i8*, i8** %s.addr, align 8
  %tmp7 = load i8, i8* %tmp6, align 1
  %conv = sext i8 %tmp7 to i32
  %cmp6 = icmp ne i32 %conv, 0
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %tmp8 = load i8*, i8** %s.addr, align 8
  %tmp9 = load i8, i8* %tmp8, align 1
  %conv8 = sext i8 %tmp9 to i32
  switch i32 %conv8, label %sw.default [
    i32 34, label %sw.bb
    i32 92, label %sw.bb
    i32 127, label %sw.bb
    i32 10, label %sw.bb11
    i32 13, label %sw.bb11
  ]

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %tmp10 = load i8*, i8** %t, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %tmp10, i32 1
  store i8* %incdec.ptr9, i8** %t, align 8
  store i8 92, i8* %tmp10, align 1
  %tmp11 = load i8*, i8** %s.addr, align 8
  %tmp12 = load i8, i8* %tmp11, align 1
  %tmp13 = load i8*, i8** %t, align 8
  %incdec.ptr10 = getelementptr inbounds i8, i8* %tmp13, i32 1
  store i8* %incdec.ptr10, i8** %t, align 8
  store i8 %tmp12, i8* %tmp13, align 1
  br label %sw.epilog

sw.bb11:                                          ; preds = %for.body, %for.body
  %tmp14 = load i8*, i8** %t, align 8
  %incdec.ptr12 = getelementptr inbounds i8, i8* %tmp14, i32 1
  store i8* %incdec.ptr12, i8** %t, align 8
  store i8 32, i8* %tmp14, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  %tmp15 = load i8*, i8** %s.addr, align 8
  %tmp16 = load i8, i8* %tmp15, align 1
  %tmp17 = load i8*, i8** %t, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %tmp17, i32 1
  store i8* %incdec.ptr13, i8** %t, align 8
  store i8 %tmp16, i8* %tmp17, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %tmp18 = load i8*, i8** %s.addr, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %tmp18, i32 1
  store i8* %incdec.ptr14, i8** %s.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tmp19 = load i8*, i8** %t, align 8
  %incdec.ptr15 = getelementptr inbounds i8, i8* %tmp19, i32 1
  store i8* %incdec.ptr15, i8** %t, align 8
  store i8 34, i8* %tmp19, align 1
  %tmp20 = load i8*, i8** %t, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %tmp20, i32 1
  store i8* %incdec.ptr16, i8** %t, align 8
  store i8 0, i8* %tmp20, align 1
  %tmp21 = load i8*, i8** %rtn, align 8
  store i8* %tmp21, i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %tmp22 = load i8*, i8** %retval
  ret i8* %tmp22
}

; Function Attrs: nounwind uwtable
define void @osip_dequote(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  %tmp = load i8*, i8** %s.addr, align 8
  %tmp1 = load i8, i8* %tmp, align 1
  %conv = sext i8 %tmp1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %s.addr, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %conv2 = sext i8 %tmp3 to i32
  %cmp3 = icmp ne i32 %conv2, 34
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  br label %for.end

if.end6:                                          ; preds = %if.end
  %tmp4 = load i8*, i8** %s.addr, align 8
  %call = call i64 @strlen(i8* %tmp4) #7
  store i64 %call, i64* %len, align 8
  %tmp5 = load i8*, i8** %s.addr, align 8
  %tmp6 = load i8*, i8** %s.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp6, i64 1
  %tmp7 = load i64, i64* %len, align 8
  %dec = add i64 %tmp7, -1
  store i64 %dec, i64* %len, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %tmp5, i8* %add.ptr, i64 %tmp7, i32 1, i1 false)
  %tmp8 = load i64, i64* %len, align 8
  %cmp7 = icmp ugt i64 %tmp8, 0
  br i1 %cmp7, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end6
  %tmp9 = load i64, i64* %len, align 8
  %sub = sub i64 %tmp9, 1
  %tmp10 = load i8*, i8** %s.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp10, i64 %sub
  %tmp11 = load i8, i8* %arrayidx, align 1
  %conv9 = sext i8 %tmp11 to i32
  %cmp10 = icmp eq i32 %conv9, 34
  br i1 %cmp10, label %if.then12, label %if.end15

if.then12:                                        ; preds = %land.lhs.true
  %tmp12 = load i64, i64* %len, align 8
  %dec13 = add i64 %tmp12, -1
  store i64 %dec13, i64* %len, align 8
  %tmp13 = load i8*, i8** %s.addr, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %tmp13, i64 %dec13
  store i8 0, i8* %arrayidx14, align 1
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end6
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end15
  %tmp14 = load i8*, i8** %s.addr, align 8
  %tmp15 = load i8, i8* %tmp14, align 1
  %conv16 = sext i8 %tmp15 to i32
  %cmp17 = icmp ne i32 %conv16, 0
  br i1 %cmp17, label %for.body, label %for.end.loopexit

for.body:                                         ; preds = %for.cond
  %tmp16 = load i8*, i8** %s.addr, align 8
  %tmp17 = load i8, i8* %tmp16, align 1
  %conv19 = sext i8 %tmp17 to i32
  %cmp20 = icmp eq i32 %conv19, 92
  br i1 %cmp20, label %if.then22, label %if.end25

if.then22:                                        ; preds = %for.body
  %tmp18 = load i8*, i8** %s.addr, align 8
  %tmp19 = load i8*, i8** %s.addr, align 8
  %add.ptr23 = getelementptr inbounds i8, i8* %tmp19, i64 1
  %tmp20 = load i64, i64* %len, align 8
  %dec24 = add i64 %tmp20, -1
  store i64 %dec24, i64* %len, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %tmp18, i8* %add.ptr23, i64 %tmp20, i32 1, i1 false)
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end25
  %tmp21 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp21, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %tmp22 = load i64, i64* %len, align 8
  %dec26 = add i64 %tmp22, -1
  store i64 %dec26, i64* %len, align 8
  br label %for.cond

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then5, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_trace_initialize_func(i32 %level, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* %func) #0 {
entry:
  %level.addr = alloca i32, align 4
  %func.addr = alloca void (i8*, i32, i32, i8*, %struct.__va_list_tag*)*, align 8
  store i32 %level, i32* %level.addr, align 4
  store void (i8*, i32, i32, i8*, %struct.__va_list_tag*)* %func, void (i8*, i32, i32, i8*, %struct.__va_list_tag*)** %func.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_trace_initialize_syslog(i32 %level, i8* %ident) #0 {
entry:
  %level.addr = alloca i32, align 4
  %ident.addr = alloca i8*, align 8
  store i32 %level, i32* %level.addr, align 4
  store i8* %ident, i8** %ident.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_trace_initialize(i32 %level, %struct._IO_FILE* %file) #0 {
entry:
  %level.addr = alloca i32, align 4
  %file.addr = alloca %struct._IO_FILE*, align 8
  store i32 %level, i32* %level.addr, align 4
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  ret i32 -1
}

; Function Attrs: nounwind uwtable
define void @osip_trace_enable_level(i32 %level) #0 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_trace_disable_level(i32 %level) #0 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_is_trace_level_activate(i32 %level) #0 {
entry:
  %level.addr = alloca i32, align 4
  store i32 %level, i32* %level.addr, align 4
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @osip_trace(i8* %filename_long, i32 %li, i32 %level, %struct._IO_FILE* %f, i8* %chfr, ...) #0 {
entry:
  %filename_long.addr = alloca i8*, align 8
  %li.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %f.addr = alloca %struct._IO_FILE*, align 8
  %chfr.addr = alloca i8*, align 8
  store i8* %filename_long, i8** %filename_long.addr, align 8
  store i32 %li, i32* %li.addr, align 4
  store i32 %level, i32* %level.addr, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  store i8* %chfr, i8** %chfr.addr, align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @osip_set_allocators(i8* (i64)* %malloc_func, i8* (i8*, i64)* %realloc_func, void (i8*)* %free_func) #0 {
entry:
  %malloc_func.addr = alloca i8* (i64)*, align 8
  %realloc_func.addr = alloca i8* (i8*, i64)*, align 8
  %free_func.addr = alloca void (i8*)*, align 8
  store i8* (i64)* %malloc_func, i8* (i64)** %malloc_func.addr, align 8
  store i8* (i8*, i64)* %realloc_func, i8* (i8*, i64)** %realloc_func.addr, align 8
  store void (i8*)* %free_func, void (i8*)** %free_func.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** %malloc_func.addr, align 8
  store i8* (i64)* %tmp, i8* (i64)** @osip_malloc_func, align 8
  %tmp1 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_func.addr, align 8
  store i8* (i8*, i64)* %tmp1, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp2 = load void (i8*)*, void (i8*)** %free_func.addr, align 8
  store void (i8*)* %tmp2, void (i8*)** @osip_free_func, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @osip_hash(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 8
  %hash = alloca i32, align 4
  %c = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  store i32 5381, i32* %hash, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %tmp = load i8*, i8** %str.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 8
  %tmp1 = load i8, i8* %tmp, align 1
  %conv = sext i8 %tmp1 to i32
  store i32 %conv, i32* %c, align 4
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp2 = load i32, i32* %hash, align 4
  %shl = shl i32 %tmp2, 5
  %tmp3 = load i32, i32* %hash, align 4
  %add = add i32 %shl, %tmp3
  %tmp4 = load i32, i32* %c, align 4
  %add1 = add i32 %add, %tmp4
  store i32 %add1, i32* %hash, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp5 = load i32, i32* %hash, align 4
  %conv2 = zext i32 %tmp5 to i64
  ret i64 %conv2
}

; Function Attrs: nounwind uwtable
define i8* @osip_str_append(i8* %dst, i8* %src) #0 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %tmp = load i8*, i8** %src.addr, align 8
  %tmp1 = load i8, i8* %tmp, align 1
  %conv = sext i8 %tmp1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp2 = load i8*, i8** %src.addr, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %tmp4 = load i8*, i8** %dst.addr, align 8
  store i8 %tmp3, i8* %tmp4, align 1
  %tmp5 = load i8*, i8** %src.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp5, i32 1
  store i8* %incdec.ptr, i8** %src.addr, align 8
  %tmp6 = load i8*, i8** %dst.addr, align 8
  %incdec.ptr2 = getelementptr inbounds i8, i8* %tmp6, i32 1
  store i8* %incdec.ptr2, i8** %dst.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp7 = load i8*, i8** %dst.addr, align 8
  store i8 0, i8* %tmp7, align 1
  %tmp8 = load i8*, i8** %dst.addr, align 8
  ret i8* %tmp8
}

; Function Attrs: nounwind uwtable
define i8* @osip_strn_append(i8* %dst, i8* %src, i64 %len) #0 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %tmp = load i8*, i8** %dst.addr, align 8
  %tmp1 = load i8*, i8** %src.addr, align 8
  %tmp2 = load i64, i64* %len.addr, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %tmp, i8* %tmp1, i64 %tmp2, i32 1, i1 false)
  %tmp3 = load i64, i64* %len.addr, align 8
  %tmp4 = load i8*, i8** %dst.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp4, i64 %tmp3
  store i8* %add.ptr, i8** %dst.addr, align 8
  %tmp5 = load i8*, i8** %dst.addr, align 8
  store i8 0, i8* %tmp5, align 1
  %tmp6 = load i8*, i8** %dst.addr, align 8
  ret i8* %tmp6
}

; Function Attrs: nounwind uwtable
define i8* @osip_clrncpy(i8* %dst, i8* %src, i64 %len) #0 {
entry:
  %retval = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %pbeg = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %p = alloca i8*, align 8
  %spaceless_length = alloca i64, align 8
  store i8* %dst, i8** %dst.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %tmp = load i8*, i8** %src.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %src.addr, align 8
  store i8* %tmp1, i8** %pbeg, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %tmp2 = load i8*, i8** %pbeg, align 8
  %tmp3 = load i8, i8* %tmp2, align 1
  %conv = sext i8 %tmp3 to i32
  %cmp1 = icmp eq i32 32, %conv
  br i1 %cmp1, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %tmp4 = load i8*, i8** %pbeg, align 8
  %tmp5 = load i8, i8* %tmp4, align 1
  %conv3 = sext i8 %tmp5 to i32
  %cmp4 = icmp eq i32 13, %conv3
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %tmp6 = load i8*, i8** %pbeg, align 8
  %tmp7 = load i8, i8* %tmp6, align 1
  %conv7 = sext i8 %tmp7 to i32
  %cmp8 = icmp eq i32 10, %conv7
  br i1 %cmp8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false6
  %tmp8 = load i8*, i8** %pbeg, align 8
  %tmp9 = load i8, i8* %tmp8, align 1
  %conv10 = sext i8 %tmp9 to i32
  %cmp11 = icmp eq i32 9, %conv10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false6, %lor.lhs.false, %while.cond
  %tmp10 = phi i1 [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp11, %lor.rhs ]
  br i1 %tmp10, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %tmp11 = load i8*, i8** %pbeg, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp11, i32 1
  store i8* %incdec.ptr, i8** %pbeg, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %tmp12 = load i8*, i8** %src.addr, align 8
  %tmp13 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp12, i64 %tmp13
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  store i8* %add.ptr13, i8** %pend, align 8
  br label %while.cond14

while.cond14:                                     ; preds = %if.end36, %while.end
  %tmp14 = load i8*, i8** %pend, align 8
  %tmp15 = load i8, i8* %tmp14, align 1
  %conv15 = sext i8 %tmp15 to i32
  %cmp16 = icmp eq i32 32, %conv15
  br i1 %cmp16, label %lor.end30, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %while.cond14
  %tmp16 = load i8*, i8** %pend, align 8
  %tmp17 = load i8, i8* %tmp16, align 1
  %conv19 = sext i8 %tmp17 to i32
  %cmp20 = icmp eq i32 13, %conv19
  br i1 %cmp20, label %lor.end30, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %tmp18 = load i8*, i8** %pend, align 8
  %tmp19 = load i8, i8* %tmp18, align 1
  %conv23 = sext i8 %tmp19 to i32
  %cmp24 = icmp eq i32 10, %conv23
  br i1 %cmp24, label %lor.end30, label %lor.rhs26

lor.rhs26:                                        ; preds = %lor.lhs.false22
  %tmp20 = load i8*, i8** %pend, align 8
  %tmp21 = load i8, i8* %tmp20, align 1
  %conv27 = sext i8 %tmp21 to i32
  %cmp28 = icmp eq i32 9, %conv27
  br label %lor.end30

lor.end30:                                        ; preds = %lor.rhs26, %lor.lhs.false22, %lor.lhs.false18, %while.cond14
  %tmp22 = phi i1 [ true, %lor.lhs.false22 ], [ true, %lor.lhs.false18 ], [ true, %while.cond14 ], [ %cmp28, %lor.rhs26 ]
  br i1 %tmp22, label %while.body31, label %while.end37

while.body31:                                     ; preds = %lor.end30
  %tmp23 = load i8*, i8** %pend, align 8
  %incdec.ptr32 = getelementptr inbounds i8, i8* %tmp23, i32 -1
  store i8* %incdec.ptr32, i8** %pend, align 8
  %tmp24 = load i8*, i8** %pend, align 8
  %tmp25 = load i8*, i8** %pbeg, align 8
  %cmp33 = icmp ult i8* %tmp24, %tmp25
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %while.body31
  %tmp26 = load i8*, i8** %dst.addr, align 8
  store i8 0, i8* %tmp26, align 1
  %tmp27 = load i8*, i8** %dst.addr, align 8
  store i8* %tmp27, i8** %retval
  br label %return

if.end36:                                         ; preds = %while.body31
  br label %while.cond14

while.end37:                                      ; preds = %lor.end30
  %tmp28 = load i8*, i8** %pend, align 8
  %tmp29 = load i8*, i8** %pbeg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp28 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp29 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  store i64 %add, i64* %spaceless_length, align 8
  %tmp30 = load i8*, i8** %dst.addr, align 8
  %tmp31 = load i8*, i8** %pbeg, align 8
  %tmp32 = load i64, i64* %spaceless_length, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %tmp30, i8* %tmp31, i64 %tmp32, i32 1, i1 false)
  %tmp33 = load i8*, i8** %dst.addr, align 8
  %tmp34 = load i64, i64* %spaceless_length, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %tmp33, i64 %tmp34
  store i8* %add.ptr38, i8** %p, align 8
  %tmp35 = load i8*, i8** %p, align 8
  store i8 0, i8* %tmp35, align 1
  %tmp36 = load i64, i64* %spaceless_length, align 8
  %inc = add i64 %tmp36, 1
  store i64 %inc, i64* %spaceless_length, align 8
  %tmp37 = load i64, i64* %len.addr, align 8
  %cmp39 = icmp ult i64 %inc, %tmp37
  %conv40 = zext i1 %cmp39 to i32
  %conv41 = sext i32 %conv40 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv41, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then42, label %if.end47

if.then42:                                        ; preds = %while.end37
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then42
  %tmp38 = load i8*, i8** %p, align 8
  %incdec.ptr43 = getelementptr inbounds i8, i8* %tmp38, i32 1
  store i8* %incdec.ptr43, i8** %p, align 8
  store i8 0, i8* %incdec.ptr43, align 1
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %tmp39 = load i64, i64* %spaceless_length, align 8
  %inc44 = add i64 %tmp39, 1
  store i64 %inc44, i64* %spaceless_length, align 8
  %tmp40 = load i64, i64* %len.addr, align 8
  %cmp45 = icmp ult i64 %inc44, %tmp40
  br i1 %cmp45, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end47

if.end47:                                         ; preds = %do.end, %while.end37
  %tmp41 = load i8*, i8** %dst.addr, align 8
  store i8* %tmp41, i8** %retval
  br label %return

return:                                           ; preds = %if.end47, %if.then35, %if.then
  %tmp42 = load i8*, i8** %retval
  ret i8* %tmp42
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #6

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_accept_encoding(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %accept_encoding = alloca %struct.osip_accept_encoding*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_accept_encoding_init(%struct.osip_accept_encoding** %accept_encoding)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_accept_encoding_parse(%struct.osip_accept_encoding* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding, align 8
  call void @osip_accept_encoding_free(%struct.osip_accept_encoding* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 6
  %tmp12 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding, align 8
  %tmp13 = bitcast %struct.osip_accept_encoding* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %accept_encodings, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_accept_encoding_init(%struct.osip_accept_encoding** %accept_encoding) #0 {
entry:
  %retval = alloca i32, align 4
  %accept_encoding.addr = alloca %struct.osip_accept_encoding**, align 8
  store %struct.osip_accept_encoding** %accept_encoding, %struct.osip_accept_encoding*** %accept_encoding.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 24)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 24) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_accept_encoding*
  %tmp3 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %accept_encoding.addr, align 8
  store %struct.osip_accept_encoding* %tmp2, %struct.osip_accept_encoding** %tmp3, align 8
  %tmp4 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %accept_encoding.addr, align 8
  %tmp5 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %tmp4, align 8
  %cmp = icmp eq %struct.osip_accept_encoding* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %accept_encoding.addr, align 8
  %tmp7 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %tmp6, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp7, i32 0, i32 0
  store i8* null, i8** %element, align 8
  %tmp8 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %accept_encoding.addr, align 8
  %tmp9 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %tmp8, align 8
  %gen_params = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp9, i32 0, i32 1
  %call2 = call i32 @osip_list_init(%struct.osip_list* %gen_params)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_accept_encoding_parse(%struct.osip_accept_encoding* %accept_encoding, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %accept_encoding.addr = alloca %struct.osip_accept_encoding*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %osip_accept_encoding_params = alloca i8*, align 8
  store %struct.osip_accept_encoding* %accept_encoding, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp, i32 59) #7
  store i8* %call, i8** %osip_accept_encoding_params, align 8
  %tmp1 = load i8*, i8** %osip_accept_encoding_params, align 8
  %cmp = icmp ne i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tmp2 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp2, i32 0, i32 1
  %tmp3 = load i8*, i8** %osip_accept_encoding_params, align 8
  %call1 = call i32 @__osip_generic_param_parseall(%struct.osip_list* %gen_params, i8* %tmp3)
  store i32 %call1, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp4, 0
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end5

if.else:                                          ; preds = %entry
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call4 = call i64 @strlen(i8* %tmp7) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp6, i64 %call4
  store i8* %add.ptr, i8** %osip_accept_encoding_params, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  %tmp8 = load i8*, i8** %osip_accept_encoding_params, align 8
  %tmp9 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp6 = icmp slt i64 %add, 2
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  store i32 -5, i32* %retval
  br label %return

if.end8:                                          ; preds = %if.end5
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end8
  %tmp11 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp12 = load i8*, i8** %osip_accept_encoding_params, align 8
  %tmp13 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast9 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast10 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10
  %add12 = add nsw i64 %sub.ptr.sub11, 1
  %call13 = call i8* %tmp11(i64 %add12)
  br label %cond.end

cond.false:                                       ; preds = %if.end8
  %tmp14 = load i8*, i8** %osip_accept_encoding_params, align 8
  %tmp15 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast14 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.rhs.cast15 = ptrtoint i8* %tmp15 to i64
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15
  %add17 = add nsw i64 %sub.ptr.sub16, 1
  %call18 = call noalias i8* @malloc(i64 %add17) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call13, %cond.true ], [ %call18, %cond.false ]
  %tmp16 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp16, i32 0, i32 0
  store i8* %cond, i8** %element, align 8
  %tmp17 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element19 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %element19, align 8
  %cmp20 = icmp eq i8* %tmp18, null
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end22:                                         ; preds = %cond.end
  %tmp19 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element23 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp19, i32 0, i32 0
  %tmp20 = load i8*, i8** %element23, align 8
  %tmp21 = load i8*, i8** %hvalue.addr, align 8
  %tmp22 = load i8*, i8** %osip_accept_encoding_params, align 8
  %tmp23 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast24 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %call27 = call i8* @osip_clrncpy(i8* %tmp20, i8* %tmp21, i64 %sub.ptr.sub26)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end22, %if.then21, %if.then7, %if.then3
  %tmp24 = load i32, i32* %retval
  ret i32 %tmp24
}

; Function Attrs: nounwind uwtable
define void @osip_accept_encoding_free(%struct.osip_accept_encoding* %accept_encoding) #0 {
entry:
  %accept_encoding.addr = alloca %struct.osip_accept_encoding*, align 8
  store %struct.osip_accept_encoding* %accept_encoding, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %tmp = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %cmp = icmp eq %struct.osip_accept_encoding* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end15

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %element, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element4 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %element4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element5 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %element5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp9, i32 0, i32 1
  call void @osip_uri_param_freelist(%struct.osip_list* %gen_params)
  %tmp10 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element8 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp10, i32 0, i32 0
  store i8* null, i8** %element8, align 8
  %tmp11 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %cmp9 = icmp ne %struct.osip_accept_encoding* %tmp11, null
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.end7
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool11 = icmp ne void (i8*)* %tmp12, null
  br i1 %tobool11, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.then10
  %tmp13 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp14 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %tmp15 = bitcast %struct.osip_accept_encoding* %tmp14 to i8*
  call void %tmp13(i8* %tmp15)
  br label %if.end14

if.else13:                                        ; preds = %if.then10
  %tmp16 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %tmp17 = bitcast %struct.osip_accept_encoding* %tmp16 to i8*
  call void @free(i8* %tmp17) #8
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then12
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end7, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_accept_encoding(%struct.osip_message* %sip, i32 %pos, %struct.osip_accept_encoding** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_accept_encoding**, align 8
  %accept_encoding = alloca %struct.osip_accept_encoding*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_accept_encoding** %dest, %struct.osip_accept_encoding*** %dest.addr, align 8
  %tmp = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* null, %struct.osip_accept_encoding** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 6
  %call = call i32 @osip_list_size(%struct.osip_list* %accept_encodings)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_encodings1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 6
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %accept_encodings1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_accept_encoding*
  store %struct.osip_accept_encoding* %tmp5, %struct.osip_accept_encoding** %accept_encoding, align 8
  %tmp6 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding, align 8
  %tmp7 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* %tmp6, %struct.osip_accept_encoding** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_accept_encoding_to_str(%struct.osip_accept_encoding* %accept_encoding, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %accept_encoding.addr = alloca %struct.osip_accept_encoding*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %len = alloca i64, align 8
  %pos = alloca i32, align 4
  %plen = alloca i64, align 8
  %u_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_accept_encoding* %accept_encoding, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %cmp = icmp eq %struct.osip_accept_encoding* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %element, align 8
  %cmp2 = icmp eq i8* %tmp4, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element3 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %element3, align 8
  %call = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call, 2
  store i64 %add, i64* %len, align 8
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp7, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp8 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp9 = load i64, i64* %len, align 8
  %call4 = call i8* %tmp8(i64 %tmp9)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp10 = load i64, i64* %len, align 8
  %call5 = call noalias i8* @malloc(i64 %tmp10) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp11 = load i8*, i8** %buf, align 8
  %cmp6 = icmp eq i8* %tmp11, null
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end8:                                          ; preds = %cond.end
  %tmp12 = load i8*, i8** %buf, align 8
  %tmp13 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %element9 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %element9, align 8
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str212, i32 0, i32 0), i8* %tmp14) #8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end51, %if.end8
  %tmp15 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp15, i32 0, i32 1
  %tmp16 = load i32, i32* %pos, align 4
  %call14 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp16)
  %tobool15 = icmp ne i32 %call14, 0
  %lnot = xor i1 %tobool15, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp17 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_encoding.addr, align 8
  %gen_params16 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp17, i32 0, i32 1
  %tmp18 = load i32, i32* %pos, align 4
  %call17 = call i8* @osip_list_get(%struct.osip_list* %gen_params16, i32 %tmp18)
  %tmp19 = bitcast i8* %call17 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp19, %struct.osip_uri_param** %u_param, align 8
  %tmp20 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp20, i32 0, i32 1
  %tmp21 = load i8*, i8** %gvalue, align 8
  %cmp18 = icmp eq i8* %tmp21, null
  br i1 %cmp18, label %if.then19, label %if.else

if.then19:                                        ; preds = %while.body
  %tmp22 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp22, i32 0, i32 0
  %tmp23 = load i8*, i8** %gname, align 8
  %call20 = call i64 @strlen(i8* %tmp23) #7
  %add21 = add i64 %call20, 2
  store i64 %add21, i64* %plen, align 8
  br label %if.end28

if.else:                                          ; preds = %while.body
  %tmp24 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname22 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %gname22, align 8
  %call23 = call i64 @strlen(i8* %tmp25) #7
  %tmp26 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue24 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp26, i32 0, i32 1
  %tmp27 = load i8*, i8** %gvalue24, align 8
  %call25 = call i64 @strlen(i8* %tmp27) #7
  %add26 = add i64 %call23, %call25
  %add27 = add i64 %add26, 3
  store i64 %add27, i64* %plen, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then19
  %tmp28 = load i64, i64* %len, align 8
  %tmp29 = load i64, i64* %plen, align 8
  %add29 = add i64 %tmp28, %tmp29
  store i64 %add29, i64* %len, align 8
  %tmp30 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool30 = icmp ne i8* (i8*, i64)* %tmp30, null
  br i1 %tobool30, label %cond.true31, label %cond.false33

cond.true31:                                      ; preds = %if.end28
  %tmp31 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp32 = load i8*, i8** %buf, align 8
  %tmp33 = load i64, i64* %len, align 8
  %call32 = call i8* %tmp31(i8* %tmp32, i64 %tmp33)
  br label %cond.end35

cond.false33:                                     ; preds = %if.end28
  %tmp34 = load i8*, i8** %buf, align 8
  %tmp35 = load i64, i64* %len, align 8
  %call34 = call i8* @realloc(i8* %tmp34, i64 %tmp35) #8
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false33, %cond.true31
  %cond36 = phi i8* [ %call32, %cond.true31 ], [ %call34, %cond.false33 ]
  store i8* %cond36, i8** %buf, align 8
  %tmp36 = load i8*, i8** %buf, align 8
  store i8* %tmp36, i8** %tmp, align 8
  %tmp37 = load i8*, i8** %tmp, align 8
  %tmp38 = load i8*, i8** %tmp, align 8
  %call37 = call i64 @strlen(i8* %tmp38) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp37, i64 %call37
  store i8* %add.ptr, i8** %tmp, align 8
  %tmp39 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue38 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp39, i32 0, i32 1
  %tmp40 = load i8*, i8** %gvalue38, align 8
  %cmp39 = icmp eq i8* %tmp40, null
  br i1 %cmp39, label %if.then40, label %if.else43

if.then40:                                        ; preds = %cond.end35
  %tmp41 = load i8*, i8** %tmp, align 8
  %tmp42 = load i64, i64* %len, align 8
  %tmp43 = load i8*, i8** %tmp, align 8
  %tmp44 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp43 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp44 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp42, %sub.ptr.sub
  %tmp45 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname41 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp45, i32 0, i32 0
  %tmp46 = load i8*, i8** %gname41, align 8
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp41, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str1213, i32 0, i32 0), i8* %tmp46) #8
  br label %if.end51

if.else43:                                        ; preds = %cond.end35
  %tmp47 = load i8*, i8** %tmp, align 8
  %tmp48 = load i64, i64* %len, align 8
  %tmp49 = load i8*, i8** %tmp, align 8
  %tmp50 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast44 = ptrtoint i8* %tmp49 to i64
  %sub.ptr.rhs.cast45 = ptrtoint i8* %tmp50 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  %sub47 = sub i64 %tmp48, %sub.ptr.sub46
  %tmp51 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname48 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp51, i32 0, i32 0
  %tmp52 = load i8*, i8** %gname48, align 8
  %tmp53 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue49 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp53, i32 0, i32 1
  %tmp54 = load i8*, i8** %gvalue49, align 8
  %call50 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp47, i64 %sub47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str2214, i32 0, i32 0), i8* %tmp52, i8* %tmp54) #8
  br label %if.end51

if.end51:                                         ; preds = %if.else43, %if.then40
  %tmp55 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp55, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp56 = load i8*, i8** %buf, align 8
  %tmp57 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp56, i8** %tmp57, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then7, %if.then
  %tmp58 = load i32, i32* %retval
  ret i32 %tmp58
}

; Function Attrs: nounwind uwtable
define i32 @osip_accept_encoding_clone(%struct.osip_accept_encoding* %ctt, %struct.osip_accept_encoding** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ctt.addr = alloca %struct.osip_accept_encoding*, align 8
  %dest.addr = alloca %struct.osip_accept_encoding**, align 8
  %i = alloca i32, align 4
  %ct = alloca %struct.osip_accept_encoding*, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %dest_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_accept_encoding* %ctt, %struct.osip_accept_encoding** %ctt.addr, align 8
  store %struct.osip_accept_encoding** %dest, %struct.osip_accept_encoding*** %dest.addr, align 8
  %tmp = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* null, %struct.osip_accept_encoding** %tmp, align 8
  %tmp1 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ctt.addr, align 8
  %cmp = icmp eq %struct.osip_accept_encoding* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ctt.addr, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %element, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_accept_encoding_init(%struct.osip_accept_encoding** %ct)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ctt.addr, align 8
  %element7 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %element7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  %element9 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %element9, align 8
  %tmp9 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  %element10 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %element10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end6
  %tmp11 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  call void @osip_accept_encoding_free(%struct.osip_accept_encoding* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end6
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end20, %if.end13
  %tmp12 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ctt.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp12, i32 0, i32 1
  %tmp13 = load i32, i32* %pos, align 4
  %call14 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp13)
  %tobool = icmp ne i32 %call14, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp14 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ctt.addr, align 8
  %gen_params15 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp14, i32 0, i32 1
  %tmp15 = load i32, i32* %pos, align 4
  %call16 = call i8* @osip_list_get(%struct.osip_list* %gen_params15, i32 %tmp15)
  %tmp16 = bitcast i8* %call16 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp16, %struct.osip_uri_param** %u_param, align 8
  %tmp17 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %call17 = call i32 @osip_uri_param_clone(%struct.osip_uri_param* %tmp17, %struct.osip_uri_param** %dest_param)
  store i32 %call17, i32* %i, align 4
  %tmp18 = load i32, i32* %i, align 4
  %cmp18 = icmp ne i32 %tmp18, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %while.body
  %tmp19 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  call void @osip_accept_encoding_free(%struct.osip_accept_encoding* %tmp19)
  %tmp20 = load i32, i32* %i, align 4
  store i32 %tmp20, i32* %retval
  br label %return

if.end20:                                         ; preds = %while.body
  %tmp21 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  %gen_params21 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp21, i32 0, i32 1
  %tmp22 = load %struct.osip_uri_param*, %struct.osip_uri_param** %dest_param, align 8
  %tmp23 = bitcast %struct.osip_uri_param* %tmp22 to i8*
  %call22 = call i32 @osip_list_add(%struct.osip_list* %gen_params21, i8* %tmp23, i32 -1)
  %tmp24 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp24, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp25 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ct, align 8
  %tmp26 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* %tmp25, %struct.osip_accept_encoding** %tmp26, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then19, %if.then12, %if.then5, %if.then2, %if.then
  %tmp27 = load i32, i32* %retval
  ret i32 %tmp27
}

; Function Attrs: nounwind uwtable
define i8* @osip_accept_encoding_get_element(%struct.osip_accept_encoding* %ae) #0 {
entry:
  %ae.addr = alloca %struct.osip_accept_encoding*, align 8
  store %struct.osip_accept_encoding* %ae, %struct.osip_accept_encoding** %ae.addr, align 8
  %tmp = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ae.addr, align 8
  %element = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %element, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_accept_encoding_set_element(%struct.osip_accept_encoding* %ae, i8* %element) #0 {
entry:
  %ae.addr = alloca %struct.osip_accept_encoding*, align 8
  %element.addr = alloca i8*, align 8
  store %struct.osip_accept_encoding* %ae, %struct.osip_accept_encoding** %ae.addr, align 8
  store i8* %element, i8** %element.addr, align 8
  %tmp = load i8*, i8** %element.addr, align 8
  %tmp1 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %ae.addr, align 8
  %element1 = getelementptr inbounds %struct.osip_accept_encoding, %struct.osip_accept_encoding* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %element1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_content_encoding(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %content_encoding = alloca %struct.osip_content_length*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_content_length_init(%struct.osip_content_length** %content_encoding)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_content_length*, %struct.osip_content_length** %content_encoding, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_content_length_parse(%struct.osip_content_length* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_content_length*, %struct.osip_content_length** %content_encoding, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 15
  %tmp12 = load %struct.osip_content_length*, %struct.osip_content_length** %content_encoding, align 8
  %tmp13 = bitcast %struct.osip_content_length* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %content_encodings, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_content_encoding(%struct.osip_message* %sip, i32 %pos, %struct.osip_content_length** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_content_length**, align 8
  %ce = alloca %struct.osip_content_length*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_content_length** %dest, %struct.osip_content_length*** %dest.addr, align 8
  %tmp = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* null, %struct.osip_content_length** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 15
  %call = call i32 @osip_list_size(%struct.osip_list* %content_encodings)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %content_encodings1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 15
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %content_encodings1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_content_length*
  store %struct.osip_content_length* %tmp5, %struct.osip_content_length** %ce, align 8
  %tmp6 = load %struct.osip_content_length*, %struct.osip_content_length** %ce, align 8
  %tmp7 = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* %tmp6, %struct.osip_content_length** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_authentication_info_init(%struct.osip_authentication_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authentication_info**, align 8
  store %struct.osip_authentication_info** %dest, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 40)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 40) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_authentication_info*
  %tmp3 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* %tmp2, %struct.osip_authentication_info** %tmp3, align 8
  %tmp4 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp5 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp4, align 8
  %cmp = icmp eq %struct.osip_authentication_info* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp7 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp6, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp7, i32 0, i32 0
  store i8* null, i8** %nextnonce, align 8
  %tmp8 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp9 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp8, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp9, i32 0, i32 1
  store i8* null, i8** %qop_options, align 8
  %tmp10 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp11 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp10, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp11, i32 0, i32 2
  store i8* null, i8** %rspauth, align 8
  %tmp12 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp13 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp12, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp13, i32 0, i32 3
  store i8* null, i8** %cnonce, align 8
  %tmp14 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp15 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %tmp14, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp15, i32 0, i32 4
  store i8* null, i8** %nonce_count, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp16 = load i32, i32* %retval
  ret i32 %tmp16
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_authentication_info(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %authentication_info = alloca %struct.osip_authentication_info*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp3 = icmp eq %struct.osip_message* %tmp3, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call = call i32 @osip_authentication_info_init(%struct.osip_authentication_info** %authentication_info)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp4, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end6
  %tmp6 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call11 = call i32 @osip_authentication_info_parse(%struct.osip_authentication_info* %tmp6, i8* %tmp7)
  store i32 %call11, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp12 = icmp ne i32 %tmp8, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end10
  %tmp9 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info, align 8
  call void @osip_authentication_info_free(%struct.osip_authentication_info* %tmp9)
  %tmp10 = load i32, i32* %i, align 4
  store i32 %tmp10, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.end10
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 10
  %tmp13 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info, align 8
  %tmp14 = bitcast %struct.osip_authentication_info* %tmp13 to i8*
  %call16 = call i32 @osip_list_add(%struct.osip_list* %authentication_infos, i8* %tmp14, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then14, %if.then9, %if.then5, %if.then
  %tmp15 = load i32, i32* %retval
  ret i32 %tmp15
}

; Function Attrs: nounwind uwtable
define i32 @osip_authentication_info_parse(%struct.osip_authentication_info* %ainfo, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %ainfo.addr = alloca %struct.osip_authentication_info*, align 8
  %hvalue.addr = alloca i8*, align 8
  %space = alloca i8*, align 8
  %next = alloca i8*, align 8
  %i = alloca i32, align 4
  %parse_ok = alloca i32, align 4
  %quote1 = alloca i8*, align 8
  %quote2 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_authentication_info* %ainfo, %struct.osip_authentication_info** %ainfo.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  store i8* null, i8** %next, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  store i8* %tmp1, i8** %space, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end84, %entry
  store i32 0, i32* %parse_ok, align 4
  %tmp2 = load i8*, i8** %space, align 8
  %tmp3 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp3, i32 0, i32 0
  %call = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str225, i32 0, i32 0), i8* %tmp2, i8** %nextnonce, i8** %next)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %tmp4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end:                                           ; preds = %for.cond
  %tmp6 = load i8*, i8** %next, align 8
  %cmp1 = icmp eq i8* %tmp6, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end
  %tmp7 = load i8*, i8** %next, align 8
  %tmp8 = load i8*, i8** %space, align 8
  %cmp3 = icmp ne i8* %tmp7, %tmp8
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  %tmp9 = load i8*, i8** %next, align 8
  store i8* %tmp9, i8** %space, align 8
  %tmp10 = load i32, i32* %parse_ok, align 4
  %inc = add nsw i32 %tmp10, 1
  store i32 %inc, i32* %parse_ok, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5
  %tmp11 = load i8*, i8** %space, align 8
  %tmp12 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp12, i32 0, i32 3
  %call7 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1226, i32 0, i32 0), i8* %tmp11, i8** %cnonce, i8** %next)
  store i32 %call7, i32* %i, align 4
  %tmp13 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp13, 0
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  %tmp14 = load i32, i32* %i, align 4
  store i32 %tmp14, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end6
  %tmp15 = load i8*, i8** %next, align 8
  %cmp11 = icmp eq i8* %tmp15, null
  br i1 %cmp11, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.end10
  store i32 0, i32* %retval
  br label %return

if.else13:                                        ; preds = %if.end10
  %tmp16 = load i8*, i8** %next, align 8
  %tmp17 = load i8*, i8** %space, align 8
  %cmp14 = icmp ne i8* %tmp16, %tmp17
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.else13
  %tmp18 = load i8*, i8** %next, align 8
  store i8* %tmp18, i8** %space, align 8
  %tmp19 = load i32, i32* %parse_ok, align 4
  %inc16 = add nsw i32 %tmp19, 1
  store i32 %inc16, i32* %parse_ok, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %tmp20 = load i8*, i8** %space, align 8
  %tmp21 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp21, i32 0, i32 2
  %call19 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str2227, i32 0, i32 0), i8* %tmp20, i8** %rspauth, i8** %next)
  store i32 %call19, i32* %i, align 4
  %tmp22 = load i32, i32* %i, align 4
  %cmp20 = icmp ne i32 %tmp22, 0
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end18
  %tmp23 = load i32, i32* %i, align 4
  store i32 %tmp23, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.end18
  %tmp24 = load i8*, i8** %next, align 8
  %cmp23 = icmp eq i8* %tmp24, null
  br i1 %cmp23, label %if.then24, label %if.else25

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %retval
  br label %return

if.else25:                                        ; preds = %if.end22
  %tmp25 = load i8*, i8** %next, align 8
  %tmp26 = load i8*, i8** %space, align 8
  %cmp26 = icmp ne i8* %tmp25, %tmp26
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.else25
  %tmp27 = load i8*, i8** %next, align 8
  store i8* %tmp27, i8** %space, align 8
  %tmp28 = load i32, i32* %parse_ok, align 4
  %inc28 = add nsw i32 %tmp28, 1
  store i32 %inc28, i32* %parse_ok, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.else25
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  %tmp29 = load i8*, i8** %space, align 8
  %tmp30 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp30, i32 0, i32 4
  %call31 = call i32 @__osip_token_set(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str3228, i32 0, i32 0), i8* %tmp29, i8** %nonce_count, i8** %next)
  store i32 %call31, i32* %i, align 4
  %tmp31 = load i32, i32* %i, align 4
  %cmp32 = icmp ne i32 %tmp31, 0
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end30
  %tmp32 = load i32, i32* %i, align 4
  store i32 %tmp32, i32* %retval
  br label %return

if.end34:                                         ; preds = %if.end30
  %tmp33 = load i8*, i8** %next, align 8
  %cmp35 = icmp eq i8* %tmp33, null
  br i1 %cmp35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %if.end34
  store i32 0, i32* %retval
  br label %return

if.else37:                                        ; preds = %if.end34
  %tmp34 = load i8*, i8** %next, align 8
  %tmp35 = load i8*, i8** %space, align 8
  %cmp38 = icmp ne i8* %tmp34, %tmp35
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else37
  %tmp36 = load i8*, i8** %next, align 8
  store i8* %tmp36, i8** %space, align 8
  %tmp37 = load i32, i32* %parse_ok, align 4
  %inc40 = add nsw i32 %tmp37, 1
  store i32 %inc40, i32* %parse_ok, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  %tmp38 = load i8*, i8** %space, align 8
  %tmp39 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp39, i32 0, i32 1
  %call43 = call i32 @__osip_token_set(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4229, i32 0, i32 0), i8* %tmp38, i8** %qop_options, i8** %next)
  store i32 %call43, i32* %i, align 4
  %tmp40 = load i32, i32* %i, align 4
  %cmp44 = icmp ne i32 %tmp40, 0
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end42
  %tmp41 = load i32, i32* %i, align 4
  store i32 %tmp41, i32* %retval
  br label %return

if.end46:                                         ; preds = %if.end42
  %tmp42 = load i8*, i8** %next, align 8
  %cmp47 = icmp eq i8* %tmp42, null
  br i1 %cmp47, label %if.then48, label %if.else49

if.then48:                                        ; preds = %if.end46
  store i32 0, i32* %retval
  br label %return

if.else49:                                        ; preds = %if.end46
  %tmp43 = load i8*, i8** %next, align 8
  %tmp44 = load i8*, i8** %space, align 8
  %cmp50 = icmp ne i8* %tmp43, %tmp44
  br i1 %cmp50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.else49
  %tmp45 = load i8*, i8** %next, align 8
  store i8* %tmp45, i8** %space, align 8
  %tmp46 = load i32, i32* %parse_ok, align 4
  %inc52 = add nsw i32 %tmp46, 1
  store i32 %inc52, i32* %parse_ok, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.else49
  br label %if.end54

if.end54:                                         ; preds = %if.end53
  %tmp47 = load i32, i32* %parse_ok, align 4
  %cmp55 = icmp eq i32 0, %tmp47
  br i1 %cmp55, label %if.then56, label %if.end84

if.then56:                                        ; preds = %if.end54
  %tmp48 = load i8*, i8** %space, align 8
  %call57 = call i64 @strlen(i8* %tmp48) #7
  %cmp58 = icmp ult i64 %call57, 1
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.then56
  store i32 0, i32* %retval
  br label %return

if.end60:                                         ; preds = %if.then56
  %tmp49 = load i8*, i8** %space, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp49, i64 1
  %call61 = call i8* @strchr(i8* %add.ptr, i32 44) #7
  store i8* %call61, i8** %tmp, align 8
  %tmp50 = load i8*, i8** %tmp, align 8
  %cmp62 = icmp eq i8* %tmp50, null
  br i1 %cmp62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.end60
  store i32 0, i32* %retval
  br label %return

if.end64:                                         ; preds = %if.end60
  %tmp51 = load i8*, i8** %space, align 8
  %call65 = call i8* @__osip_quote_find(i8* %tmp51)
  store i8* %call65, i8** %quote1, align 8
  %tmp52 = load i8*, i8** %quote1, align 8
  %cmp66 = icmp ne i8* %tmp52, null
  br i1 %cmp66, label %land.lhs.true, label %if.else82

land.lhs.true:                                    ; preds = %if.end64
  %tmp53 = load i8*, i8** %quote1, align 8
  %tmp54 = load i8*, i8** %tmp, align 8
  %cmp67 = icmp ult i8* %tmp53, %tmp54
  br i1 %cmp67, label %if.then68, label %if.else82

if.then68:                                        ; preds = %land.lhs.true
  %tmp55 = load i8*, i8** %quote1, align 8
  %add.ptr69 = getelementptr inbounds i8, i8* %tmp55, i64 1
  %call70 = call i8* @__osip_quote_find(i8* %add.ptr69)
  store i8* %call70, i8** %quote2, align 8
  %tmp56 = load i8*, i8** %quote2, align 8
  %cmp71 = icmp eq i8* %tmp56, null
  br i1 %cmp71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.then68
  store i32 -5, i32* %retval
  br label %return

if.end73:                                         ; preds = %if.then68
  %tmp57 = load i8*, i8** %tmp, align 8
  %tmp58 = load i8*, i8** %quote2, align 8
  %cmp74 = icmp ult i8* %tmp57, %tmp58
  br i1 %cmp74, label %if.then75, label %if.else77

if.then75:                                        ; preds = %if.end73
  %tmp59 = load i8*, i8** %quote2, align 8
  %call76 = call i8* @strchr(i8* %tmp59, i32 44) #7
  store i8* %call76, i8** %space, align 8
  br label %if.end78

if.else77:                                        ; preds = %if.end73
  %tmp60 = load i8*, i8** %tmp, align 8
  store i8* %tmp60, i8** %space, align 8
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then75
  %tmp61 = load i8*, i8** %space, align 8
  %cmp79 = icmp eq i8* %tmp61, null
  br i1 %cmp79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end78
  store i32 0, i32* %retval
  br label %return

if.end81:                                         ; preds = %if.end78
  br label %if.end83

if.else82:                                        ; preds = %land.lhs.true, %if.end64
  %tmp62 = load i8*, i8** %tmp, align 8
  store i8* %tmp62, i8** %space, align 8
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.end81
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end54
  br label %for.cond

return:                                           ; preds = %if.then80, %if.then72, %if.then63, %if.then59, %if.then48, %if.then45, %if.then36, %if.then33, %if.then24, %if.then21, %if.then12, %if.then9, %if.then2, %if.then
  %tmp63 = load i32, i32* %retval
  ret i32 %tmp63
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_free(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cmp = icmp eq %struct.osip_authentication_info* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end50

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %nextnonce, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nextnonce4 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %nextnonce4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nextnonce5 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %nextnonce5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp9, i32 0, i32 2
  %tmp10 = load i8*, i8** %rspauth, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %rspauth12 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp13, i32 0, i32 2
  %tmp14 = load i8*, i8** %rspauth12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %rspauth14 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp15, i32 0, i32 2
  %tmp16 = load i8*, i8** %rspauth14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp17, i32 0, i32 3
  %tmp18 = load i8*, i8** %cnonce, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end16
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.then18
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cnonce21 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp21, i32 0, i32 3
  %tmp22 = load i8*, i8** %cnonce21, align 8
  call void %tmp20(i8* %tmp22)
  br label %if.end24

if.else22:                                        ; preds = %if.then18
  %tmp23 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cnonce23 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp23, i32 0, i32 3
  %tmp24 = load i8*, i8** %cnonce23, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16
  %tmp25 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp25, i32 0, i32 4
  %tmp26 = load i8*, i8** %nonce_count, align 8
  %cmp26 = icmp ne i8* %tmp26, null
  br i1 %cmp26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end25
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool28 = icmp ne void (i8*)* %tmp27, null
  br i1 %tobool28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.then27
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp29 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nonce_count30 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp29, i32 0, i32 4
  %tmp30 = load i8*, i8** %nonce_count30, align 8
  call void %tmp28(i8* %tmp30)
  br label %if.end33

if.else31:                                        ; preds = %if.then27
  %tmp31 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nonce_count32 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp31, i32 0, i32 4
  %tmp32 = load i8*, i8** %nonce_count32, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end25
  %tmp33 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp33, i32 0, i32 1
  %tmp34 = load i8*, i8** %qop_options, align 8
  %cmp35 = icmp ne i8* %tmp34, null
  br i1 %cmp35, label %if.then36, label %if.end43

if.then36:                                        ; preds = %if.end34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool37 = icmp ne void (i8*)* %tmp35, null
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then36
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp37 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %qop_options39 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp37, i32 0, i32 1
  %tmp38 = load i8*, i8** %qop_options39, align 8
  call void %tmp36(i8* %tmp38)
  br label %if.end42

if.else40:                                        ; preds = %if.then36
  %tmp39 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %qop_options41 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp39, i32 0, i32 1
  %tmp40 = load i8*, i8** %qop_options41, align 8
  call void @free(i8* %tmp40) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  %tmp41 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cmp44 = icmp ne %struct.osip_authentication_info* %tmp41, null
  br i1 %cmp44, label %if.then45, label %if.end50

if.then45:                                        ; preds = %if.end43
  %tmp42 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool46 = icmp ne void (i8*)* %tmp42, null
  br i1 %tobool46, label %if.then47, label %if.else48

if.then47:                                        ; preds = %if.then45
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp44 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp45 = bitcast %struct.osip_authentication_info* %tmp44 to i8*
  call void %tmp43(i8* %tmp45)
  br label %if.end49

if.else48:                                        ; preds = %if.then45
  %tmp46 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp47 = bitcast %struct.osip_authentication_info* %tmp46 to i8*
  call void @free(i8* %tmp47) #8
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end43, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_authentication_info(%struct.osip_message* %sip, i32 %pos, %struct.osip_authentication_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authentication_info**, align 8
  %authentication_info = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_authentication_info** %dest, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* null, %struct.osip_authentication_info** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 10
  %call = call i32 @osip_list_size(%struct.osip_list* %authentication_infos)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authentication_infos1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 10
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %authentication_infos1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_authentication_info*
  store %struct.osip_authentication_info* %tmp5, %struct.osip_authentication_info** %authentication_info, align 8
  %tmp6 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info, align 8
  %tmp7 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* %tmp6, %struct.osip_authentication_info** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i8* @osip_authentication_info_get_nextnonce(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %nextnonce, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_set_nextnonce(%struct.osip_authentication_info* %authentication_info, i8* %nextnonce) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  %nextnonce.addr = alloca i8*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  store i8* %nextnonce, i8** %nextnonce.addr, align 8
  %tmp = load i8*, i8** %nextnonce.addr, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nextnonce1 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %nextnonce1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authentication_info_get_cnonce(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp, i32 0, i32 3
  %tmp1 = load i8*, i8** %cnonce, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_set_cnonce(%struct.osip_authentication_info* %authentication_info, i8* %cnonce) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  %cnonce.addr = alloca i8*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  store i8* %cnonce, i8** %cnonce.addr, align 8
  %tmp = load i8*, i8** %cnonce.addr, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %cnonce1 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 3
  store i8* %tmp, i8** %cnonce1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authentication_info_get_rspauth(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp, i32 0, i32 2
  %tmp1 = load i8*, i8** %rspauth, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_set_rspauth(%struct.osip_authentication_info* %authentication_info, i8* %rspauth) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  %rspauth.addr = alloca i8*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  store i8* %rspauth, i8** %rspauth.addr, align 8
  %tmp = load i8*, i8** %rspauth.addr, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %rspauth1 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 2
  store i8* %tmp, i8** %rspauth1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authentication_info_get_nonce_count(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp, i32 0, i32 4
  %tmp1 = load i8*, i8** %nonce_count, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_set_nonce_count(%struct.osip_authentication_info* %authentication_info, i8* %nonce_count) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  %nonce_count.addr = alloca i8*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  store i8* %nonce_count, i8** %nonce_count.addr, align 8
  %tmp = load i8*, i8** %nonce_count.addr, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %nonce_count1 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 4
  store i8* %tmp, i8** %nonce_count1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authentication_info_get_qop_options(%struct.osip_authentication_info* %authentication_info) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %tmp = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp, i32 0, i32 1
  %tmp1 = load i8*, i8** %qop_options, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authentication_info_set_qop_options(%struct.osip_authentication_info* %authentication_info, i8* %qop_options) #0 {
entry:
  %authentication_info.addr = alloca %struct.osip_authentication_info*, align 8
  %qop_options.addr = alloca i8*, align 8
  store %struct.osip_authentication_info* %authentication_info, %struct.osip_authentication_info** %authentication_info.addr, align 8
  store i8* %qop_options, i8** %qop_options.addr, align 8
  %tmp = load i8*, i8** %qop_options.addr, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %authentication_info.addr, align 8
  %qop_options1 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %qop_options1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_authentication_info_to_str(%struct.osip_authentication_info* %ainfo, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ainfo.addr = alloca %struct.osip_authentication_info*, align 8
  %dest.addr = alloca i8**, align 8
  %len = alloca i64, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_authentication_info* %ainfo, %struct.osip_authentication_info** %ainfo.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cmp = icmp eq %struct.osip_authentication_info* %tmp2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i64 0, i64* %len, align 8
  %tmp3 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %nextnonce, align 8
  %cmp1 = icmp ne i8* %tmp4, null
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %tmp5 = load i64, i64* %len, align 8
  %tmp6 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce3 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %nextnonce3, align 8
  %call = call i64 @strlen(i8* %tmp7) #7
  %add = add i64 %tmp5, %call
  %add4 = add i64 %add, 11
  store i64 %add4, i64* %len, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %tmp8 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp8, i32 0, i32 2
  %tmp9 = load i8*, i8** %rspauth, align 8
  %cmp6 = icmp ne i8* %tmp9, null
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  %tmp10 = load i64, i64* %len, align 8
  %tmp11 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth8 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp11, i32 0, i32 2
  %tmp12 = load i8*, i8** %rspauth8, align 8
  %call9 = call i64 @strlen(i8* %tmp12) #7
  %add10 = add i64 %tmp10, %call9
  %add11 = add i64 %add10, 10
  store i64 %add11, i64* %len, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %if.end5
  %tmp13 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp13, i32 0, i32 3
  %tmp14 = load i8*, i8** %cnonce, align 8
  %cmp13 = icmp ne i8* %tmp14, null
  br i1 %cmp13, label %if.then14, label %if.end19

if.then14:                                        ; preds = %if.end12
  %tmp15 = load i64, i64* %len, align 8
  %tmp16 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce15 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp16, i32 0, i32 3
  %tmp17 = load i8*, i8** %cnonce15, align 8
  %call16 = call i64 @strlen(i8* %tmp17) #7
  %add17 = add i64 %tmp15, %call16
  %add18 = add i64 %add17, 9
  store i64 %add18, i64* %len, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %if.end12
  %tmp18 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp18, i32 0, i32 4
  %tmp19 = load i8*, i8** %nonce_count, align 8
  %cmp20 = icmp ne i8* %tmp19, null
  br i1 %cmp20, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.end19
  %tmp20 = load i64, i64* %len, align 8
  %tmp21 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count22 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp21, i32 0, i32 4
  %tmp22 = load i8*, i8** %nonce_count22, align 8
  %call23 = call i64 @strlen(i8* %tmp22) #7
  %add24 = add i64 %tmp20, %call23
  %add25 = add i64 %add24, 5
  store i64 %add25, i64* %len, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.end19
  %tmp23 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp23, i32 0, i32 1
  %tmp24 = load i8*, i8** %qop_options, align 8
  %cmp27 = icmp ne i8* %tmp24, null
  br i1 %cmp27, label %if.then28, label %if.end33

if.then28:                                        ; preds = %if.end26
  %tmp25 = load i64, i64* %len, align 8
  %tmp26 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options29 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp26, i32 0, i32 1
  %tmp27 = load i8*, i8** %qop_options29, align 8
  %call30 = call i64 @strlen(i8* %tmp27) #7
  %add31 = add i64 %tmp25, %call30
  %add32 = add i64 %add31, 6
  store i64 %add32, i64* %len, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end26
  %tmp28 = load i64, i64* %len, align 8
  %cmp34 = icmp eq i64 %tmp28, 0
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end33
  store i32 -2, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.end33
  %tmp29 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp29, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end36
  %tmp30 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp31 = load i64, i64* %len, align 8
  %call37 = call i8* %tmp30(i64 %tmp31)
  br label %cond.end

cond.false:                                       ; preds = %if.end36
  %tmp32 = load i64, i64* %len, align 8
  %call38 = call noalias i8* @malloc(i64 %tmp32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call37, %cond.true ], [ %call38, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp33 = load i8*, i8** %tmp, align 8
  %cmp39 = icmp eq i8* %tmp33, null
  br i1 %cmp39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end41:                                         ; preds = %cond.end
  %tmp34 = load i8*, i8** %tmp, align 8
  %tmp35 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp34, i8** %tmp35, align 8
  %tmp36 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options42 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp36, i32 0, i32 1
  %tmp37 = load i8*, i8** %qop_options42, align 8
  %cmp43 = icmp ne i8* %tmp37, null
  br i1 %cmp43, label %if.then44, label %if.end48

if.then44:                                        ; preds = %if.end41
  %tmp38 = load i8*, i8** %tmp, align 8
  %call45 = call i8* @osip_strn_append(i8* %tmp38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str5230, i32 0, i32 0), i64 4)
  store i8* %call45, i8** %tmp, align 8
  %tmp39 = load i8*, i8** %tmp, align 8
  %tmp40 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options46 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %qop_options46, align 8
  %call47 = call i8* @osip_str_append(i8* %tmp39, i8* %tmp41)
  store i8* %call47, i8** %tmp, align 8
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %if.end41
  %tmp42 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce49 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp42, i32 0, i32 0
  %tmp43 = load i8*, i8** %nextnonce49, align 8
  %cmp50 = icmp ne i8* %tmp43, null
  br i1 %cmp50, label %if.then51, label %if.end59

if.then51:                                        ; preds = %if.end48
  %tmp44 = load i8*, i8** %tmp, align 8
  %tmp45 = load i8**, i8*** %dest.addr, align 8
  %tmp46 = load i8*, i8** %tmp45, align 8
  %cmp52 = icmp ne i8* %tmp44, %tmp46
  br i1 %cmp52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.then51
  %tmp47 = load i8*, i8** %tmp, align 8
  %call54 = call i8* @osip_strn_append(i8* %tmp47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6231, i32 0, i32 0), i64 2)
  store i8* %call54, i8** %tmp, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.then51
  %tmp48 = load i8*, i8** %tmp, align 8
  %call56 = call i8* @osip_strn_append(i8* %tmp48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str7232, i32 0, i32 0), i64 10)
  store i8* %call56, i8** %tmp, align 8
  %tmp49 = load i8*, i8** %tmp, align 8
  %tmp50 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce57 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp50, i32 0, i32 0
  %tmp51 = load i8*, i8** %nextnonce57, align 8
  %call58 = call i8* @osip_str_append(i8* %tmp49, i8* %tmp51)
  store i8* %call58, i8** %tmp, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.end55, %if.end48
  %tmp52 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth60 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp52, i32 0, i32 2
  %tmp53 = load i8*, i8** %rspauth60, align 8
  %cmp61 = icmp ne i8* %tmp53, null
  br i1 %cmp61, label %if.then62, label %if.end70

if.then62:                                        ; preds = %if.end59
  %tmp54 = load i8*, i8** %tmp, align 8
  %tmp55 = load i8**, i8*** %dest.addr, align 8
  %tmp56 = load i8*, i8** %tmp55, align 8
  %cmp63 = icmp ne i8* %tmp54, %tmp56
  br i1 %cmp63, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.then62
  %tmp57 = load i8*, i8** %tmp, align 8
  %call65 = call i8* @osip_strn_append(i8* %tmp57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6231, i32 0, i32 0), i64 2)
  store i8* %call65, i8** %tmp, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.then64, %if.then62
  %tmp58 = load i8*, i8** %tmp, align 8
  %call67 = call i8* @osip_strn_append(i8* %tmp58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str8233, i32 0, i32 0), i64 8)
  store i8* %call67, i8** %tmp, align 8
  %tmp59 = load i8*, i8** %tmp, align 8
  %tmp60 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth68 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp60, i32 0, i32 2
  %tmp61 = load i8*, i8** %rspauth68, align 8
  %call69 = call i8* @osip_str_append(i8* %tmp59, i8* %tmp61)
  store i8* %call69, i8** %tmp, align 8
  br label %if.end70

if.end70:                                         ; preds = %if.end66, %if.end59
  %tmp62 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce71 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp62, i32 0, i32 3
  %tmp63 = load i8*, i8** %cnonce71, align 8
  %cmp72 = icmp ne i8* %tmp63, null
  br i1 %cmp72, label %if.then73, label %if.end81

if.then73:                                        ; preds = %if.end70
  %tmp64 = load i8*, i8** %tmp, align 8
  %tmp65 = load i8**, i8*** %dest.addr, align 8
  %tmp66 = load i8*, i8** %tmp65, align 8
  %cmp74 = icmp ne i8* %tmp64, %tmp66
  br i1 %cmp74, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.then73
  %tmp67 = load i8*, i8** %tmp, align 8
  %call76 = call i8* @osip_strn_append(i8* %tmp67, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6231, i32 0, i32 0), i64 2)
  store i8* %call76, i8** %tmp, align 8
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %if.then73
  %tmp68 = load i8*, i8** %tmp, align 8
  %call78 = call i8* @osip_strn_append(i8* %tmp68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str9234, i32 0, i32 0), i64 7)
  store i8* %call78, i8** %tmp, align 8
  %tmp69 = load i8*, i8** %tmp, align 8
  %tmp70 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce79 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp70, i32 0, i32 3
  %tmp71 = load i8*, i8** %cnonce79, align 8
  %call80 = call i8* @osip_str_append(i8* %tmp69, i8* %tmp71)
  store i8* %call80, i8** %tmp, align 8
  br label %if.end81

if.end81:                                         ; preds = %if.end77, %if.end70
  %tmp72 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count82 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp72, i32 0, i32 4
  %tmp73 = load i8*, i8** %nonce_count82, align 8
  %cmp83 = icmp ne i8* %tmp73, null
  br i1 %cmp83, label %if.then84, label %if.end92

if.then84:                                        ; preds = %if.end81
  %tmp74 = load i8*, i8** %tmp, align 8
  %tmp75 = load i8**, i8*** %dest.addr, align 8
  %tmp76 = load i8*, i8** %tmp75, align 8
  %cmp85 = icmp ne i8* %tmp74, %tmp76
  br i1 %cmp85, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.then84
  %tmp77 = load i8*, i8** %tmp, align 8
  %call87 = call i8* @osip_strn_append(i8* %tmp77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str6231, i32 0, i32 0), i64 2)
  store i8* %call87, i8** %tmp, align 8
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.then84
  %tmp78 = load i8*, i8** %tmp, align 8
  %call89 = call i8* @osip_strn_append(i8* %tmp78, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str10235, i32 0, i32 0), i64 3)
  store i8* %call89, i8** %tmp, align 8
  %tmp79 = load i8*, i8** %tmp, align 8
  %tmp80 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count90 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp80, i32 0, i32 4
  %tmp81 = load i8*, i8** %nonce_count90, align 8
  %call91 = call i8* @osip_str_append(i8* %tmp79, i8* %tmp81)
  store i8* %call91, i8** %tmp, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.end88, %if.end81
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end92, %if.then40, %if.then35, %if.then
  %tmp82 = load i32, i32* %retval
  ret i32 %tmp82
}

; Function Attrs: nounwind uwtable
define i32 @osip_authentication_info_clone(%struct.osip_authentication_info* %ainfo, %struct.osip_authentication_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ainfo.addr = alloca %struct.osip_authentication_info*, align 8
  %dest.addr = alloca %struct.osip_authentication_info**, align 8
  %i = alloca i32, align 4
  %wa = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_authentication_info* %ainfo, %struct.osip_authentication_info** %ainfo.addr, align 8
  store %struct.osip_authentication_info** %dest, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* null, %struct.osip_authentication_info** %tmp, align 8
  %tmp1 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cmp = icmp eq %struct.osip_authentication_info* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_authentication_info_init(%struct.osip_authentication_info** %wa)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %nextnonce, align 8
  %cmp4 = icmp ne i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end3
  %tmp6 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nextnonce6 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %nextnonce6, align 8
  %call7 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %nextnonce8 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp8, i32 0, i32 0
  store i8* %call7, i8** %nextnonce8, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end3
  %tmp9 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp9, i32 0, i32 3
  %tmp10 = load i8*, i8** %cnonce, align 8
  %cmp10 = icmp ne i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end9
  %tmp11 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %cnonce12 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp11, i32 0, i32 3
  %tmp12 = load i8*, i8** %cnonce12, align 8
  %call13 = call i8* @osip_strdup(i8* %tmp12)
  %tmp13 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %cnonce14 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp13, i32 0, i32 3
  store i8* %call13, i8** %cnonce14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end9
  %tmp14 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp14, i32 0, i32 2
  %tmp15 = load i8*, i8** %rspauth, align 8
  %cmp16 = icmp ne i8* %tmp15, null
  br i1 %cmp16, label %if.then17, label %if.end21

if.then17:                                        ; preds = %if.end15
  %tmp16 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %rspauth18 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp16, i32 0, i32 2
  %tmp17 = load i8*, i8** %rspauth18, align 8
  %call19 = call i8* @osip_strdup(i8* %tmp17)
  %tmp18 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %rspauth20 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp18, i32 0, i32 2
  store i8* %call19, i8** %rspauth20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.end15
  %tmp19 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp19, i32 0, i32 4
  %tmp20 = load i8*, i8** %nonce_count, align 8
  %cmp22 = icmp ne i8* %tmp20, null
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.end21
  %tmp21 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %nonce_count24 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp21, i32 0, i32 4
  %tmp22 = load i8*, i8** %nonce_count24, align 8
  %call25 = call i8* @osip_strdup(i8* %tmp22)
  %tmp23 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %nonce_count26 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp23, i32 0, i32 4
  store i8* %call25, i8** %nonce_count26, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end21
  %tmp24 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp24, i32 0, i32 1
  %tmp25 = load i8*, i8** %qop_options, align 8
  %cmp28 = icmp ne i8* %tmp25, null
  br i1 %cmp28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %if.end27
  %tmp26 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %ainfo.addr, align 8
  %qop_options30 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp26, i32 0, i32 1
  %tmp27 = load i8*, i8** %qop_options30, align 8
  %call31 = call i8* @osip_strdup(i8* %tmp27)
  %tmp28 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %qop_options32 = getelementptr inbounds %struct.osip_authentication_info, %struct.osip_authentication_info* %tmp28, i32 0, i32 1
  store i8* %call31, i8** %qop_options32, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then29, %if.end27
  %tmp29 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %wa, align 8
  %tmp30 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* %tmp29, %struct.osip_authentication_info** %tmp30, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end33, %if.then2, %if.then
  %tmp31 = load i32, i32* %retval
  ret i32 %tmp31
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_proxy_authentication_info(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %proxy_authentication_info = alloca %struct.osip_authentication_info*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_authentication_info_init(%struct.osip_authentication_info** %proxy_authentication_info)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_authentication_info_parse(%struct.osip_authentication_info* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  call void @osip_authentication_info_free(%struct.osip_authentication_info* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 23
  %tmp12 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %tmp13 = bitcast %struct.osip_authentication_info* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %proxy_authentication_infos, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_proxy_authentication_info(%struct.osip_message* %sip, i32 %pos, %struct.osip_authentication_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authentication_info**, align 8
  %proxy_authentication_info = alloca %struct.osip_authentication_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_authentication_info** %dest, %struct.osip_authentication_info*** %dest.addr, align 8
  %tmp = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* null, %struct.osip_authentication_info** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 23
  %call = call i32 @osip_list_size(%struct.osip_list* %proxy_authentication_infos)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authentication_infos1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 23
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %proxy_authentication_infos1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_authentication_info*
  store %struct.osip_authentication_info* %tmp5, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %tmp6 = load %struct.osip_authentication_info*, %struct.osip_authentication_info** %proxy_authentication_info, align 8
  %tmp7 = load %struct.osip_authentication_info**, %struct.osip_authentication_info*** %dest.addr, align 8
  store %struct.osip_authentication_info* %tmp6, %struct.osip_authentication_info** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_accept_language(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %accept_language = alloca %struct.osip_accept_encoding*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_accept_encoding_init(%struct.osip_accept_encoding** %accept_language)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_accept_encoding_parse(%struct.osip_accept_encoding* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language, align 8
  call void @osip_accept_encoding_free(%struct.osip_accept_encoding* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 7
  %tmp12 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language, align 8
  %tmp13 = bitcast %struct.osip_accept_encoding* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %accept_languages, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_accept_language(%struct.osip_message* %sip, i32 %pos, %struct.osip_accept_encoding** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_accept_encoding**, align 8
  %accept_language = alloca %struct.osip_accept_encoding*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_accept_encoding** %dest, %struct.osip_accept_encoding*** %dest.addr, align 8
  %tmp = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* null, %struct.osip_accept_encoding** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 7
  %call = call i32 @osip_list_size(%struct.osip_list* %accept_languages)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accept_languages1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 7
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %accept_languages1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_accept_encoding*
  store %struct.osip_accept_encoding* %tmp5, %struct.osip_accept_encoding** %accept_language, align 8
  %tmp6 = load %struct.osip_accept_encoding*, %struct.osip_accept_encoding** %accept_language, align 8
  %tmp7 = load %struct.osip_accept_encoding**, %struct.osip_accept_encoding*** %dest.addr, align 8
  store %struct.osip_accept_encoding* %tmp6, %struct.osip_accept_encoding** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_accept(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %accept = alloca %struct.osip_content_type*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %call = call i32 @osip_content_type_init(%struct.osip_content_type** %accept)
  store i32 %call, i32* %i, align 4
  %tmp = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %tmp, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp1 = load i32, i32* %i, align 4
  store i32 %tmp1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_content_type*, %struct.osip_content_type** %accept, align 8
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %call1 = call i32 @osip_content_type_parse(%struct.osip_content_type* %tmp2, i8* %tmp3)
  store i32 %call1, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp4, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp5 = load %struct.osip_content_type*, %struct.osip_content_type** %accept, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp5)
  %tmp6 = load i32, i32* %i, align 4
  store i32 %tmp6, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 5
  %tmp9 = load %struct.osip_content_type*, %struct.osip_content_type** %accept, align 8
  %tmp10 = bitcast %struct.osip_content_type* %tmp9 to i8*
  %call5 = call i32 @osip_list_add(%struct.osip_list* %accepts, i8* %tmp10, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_accept(%struct.osip_message* %sip, i32 %pos, %struct.osip_content_type** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_content_type**, align 8
  %accept = alloca %struct.osip_content_type*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_content_type** %dest, %struct.osip_content_type*** %dest.addr, align 8
  %tmp = load %struct.osip_content_type**, %struct.osip_content_type*** %dest.addr, align 8
  store %struct.osip_content_type* null, %struct.osip_content_type** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 5
  %call = call i32 @osip_list_size(%struct.osip_list* %accepts)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %accepts1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 5
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %accepts1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_content_type*
  store %struct.osip_content_type* %tmp5, %struct.osip_content_type** %accept, align 8
  %tmp6 = load %struct.osip_content_type*, %struct.osip_content_type** %accept, align 8
  %tmp7 = load %struct.osip_content_type**, %struct.osip_content_type*** %dest.addr, align 8
  store %struct.osip_content_type* %tmp6, %struct.osip_content_type** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_accept_to_str(%struct.osip_content_type* %accept, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %accept.addr = alloca %struct.osip_content_type*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %len = alloca i64, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %tmp_len = alloca i64, align 8
  store %struct.osip_content_type* %accept, %struct.osip_content_type** %accept.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64 0, i64* %len, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %cmp = icmp eq %struct.osip_content_type* %tmp2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %type = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %type, align 8
  %cmp2 = icmp ne i8* %tmp4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %tmp5 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %type4 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %type4, align 8
  %call = call i64 @strlen(i8* %tmp6) #7
  %tmp7 = load i64, i64* %len, align 8
  %add = add i64 %tmp7, %call
  store i64 %add, i64* %len, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  %tmp8 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %subtype = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp8, i32 0, i32 1
  %tmp9 = load i8*, i8** %subtype, align 8
  %cmp6 = icmp ne i8* %tmp9, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.end5
  %tmp10 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %subtype8 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %subtype8, align 8
  %call9 = call i64 @strlen(i8* %tmp11) #7
  %tmp12 = load i64, i64* %len, align 8
  %add10 = add i64 %tmp12, %call9
  store i64 %add10, i64* %len, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then7, %if.end5
  %tmp13 = load i64, i64* %len, align 8
  %cmp12 = icmp eq i64 %tmp13, 0
  br i1 %cmp12, label %if.then13, label %if.end20

if.then13:                                        ; preds = %if.end11
  %tmp14 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp14, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then13
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call14 = call i8* %tmp15(i64 2)
  br label %cond.end

cond.false:                                       ; preds = %if.then13
  %call15 = call noalias i8* @malloc(i64 2) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call14, %cond.true ], [ %call15, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp16 = load i8*, i8** %buf, align 8
  %cmp16 = icmp eq i8* %tmp16, null
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end18:                                         ; preds = %cond.end
  %tmp17 = load i8*, i8** %buf, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp17, i64 0
  store i8 32, i8* %arrayidx, align 1
  %tmp18 = load i8*, i8** %buf, align 8
  %arrayidx19 = getelementptr inbounds i8, i8* %tmp18, i64 1
  store i8 0, i8* %arrayidx19, align 1
  %tmp19 = load i8*, i8** %buf, align 8
  %tmp20 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp19, i8** %tmp20, align 8
  store i32 0, i32* %retval
  br label %return

if.end20:                                         ; preds = %if.end11
  %tmp21 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp21, i32 0, i32 2
  %call21 = call i32 @osip_list_size(%struct.osip_list* %gen_params)
  %mul = mul nsw i32 10, %call21
  %add22 = add nsw i32 4, %mul
  %conv = sext i32 %add22 to i64
  %tmp22 = load i64, i64* %len, align 8
  %add23 = add i64 %tmp22, %conv
  store i64 %add23, i64* %len, align 8
  %tmp23 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool24 = icmp ne i8* (i64)* %tmp23, null
  br i1 %tobool24, label %cond.true25, label %cond.false27

cond.true25:                                      ; preds = %if.end20
  %tmp24 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp25 = load i64, i64* %len, align 8
  %call26 = call i8* %tmp24(i64 %tmp25)
  br label %cond.end29

cond.false27:                                     ; preds = %if.end20
  %tmp26 = load i64, i64* %len, align 8
  %call28 = call noalias i8* @malloc(i64 %tmp26) #8
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i8* [ %call26, %cond.true25 ], [ %call28, %cond.false27 ]
  store i8* %cond30, i8** %buf, align 8
  %tmp27 = load i8*, i8** %buf, align 8
  %cmp31 = icmp eq i8* %tmp27, null
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %cond.end29
  store i32 -4, i32* %retval
  br label %return

if.end34:                                         ; preds = %cond.end29
  %tmp28 = load i8*, i8** %buf, align 8
  store i8* %tmp28, i8** %tmp, align 8
  %tmp29 = load i8*, i8** %tmp, align 8
  %tmp30 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %type35 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp30, i32 0, i32 0
  %tmp31 = load i8*, i8** %type35, align 8
  %tmp32 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %subtype36 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp32, i32 0, i32 1
  %tmp33 = load i8*, i8** %subtype36, align 8
  %call37 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str248, i32 0, i32 0), i8* %tmp31, i8* %tmp33) #8
  %tmp34 = load i8*, i8** %tmp, align 8
  %tmp35 = load i8*, i8** %tmp, align 8
  %call38 = call i64 @strlen(i8* %tmp35) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp34, i64 %call38
  store i8* %add.ptr, i8** %tmp, align 8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end78, %if.end34
  %tmp36 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %gen_params41 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp36, i32 0, i32 2
  %tmp37 = load i32, i32* %pos, align 4
  %call42 = call i32 @osip_list_eol(%struct.osip_list* %gen_params41, i32 %tmp37)
  %tobool43 = icmp ne i32 %call42, 0
  %lnot = xor i1 %tobool43, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp38 = load %struct.osip_content_type*, %struct.osip_content_type** %accept.addr, align 8
  %gen_params45 = getelementptr inbounds %struct.osip_content_type, %struct.osip_content_type* %tmp38, i32 0, i32 2
  %tmp39 = load i32, i32* %pos, align 4
  %call46 = call i8* @osip_list_get(%struct.osip_list* %gen_params45, i32 %tmp39)
  %tmp40 = bitcast i8* %call46 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp40, %struct.osip_uri_param** %u_param, align 8
  %tmp41 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp41, i32 0, i32 1
  %tmp42 = load i8*, i8** %gvalue, align 8
  %cmp47 = icmp eq i8* %tmp42, null
  br i1 %cmp47, label %if.then49, label %if.end57

if.then49:                                        ; preds = %while.body
  %tmp43 = load i8*, i8** %buf, align 8
  %cmp50 = icmp ne i8* %tmp43, null
  br i1 %cmp50, label %if.then52, label %if.end56

if.then52:                                        ; preds = %if.then49
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool53 = icmp ne void (i8*)* %tmp44, null
  br i1 %tobool53, label %if.then54, label %if.else

if.then54:                                        ; preds = %if.then52
  %tmp45 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp46 = load i8*, i8** %buf, align 8
  call void %tmp45(i8* %tmp46)
  br label %if.end55

if.else:                                          ; preds = %if.then52
  %tmp47 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp47) #8
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then54
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then49
  store i32 -5, i32* %retval
  br label %return

if.end57:                                         ; preds = %while.body
  %tmp48 = load i8*, i8** %buf, align 8
  %call58 = call i64 @strlen(i8* %tmp48) #7
  %add59 = add i64 %call58, 4
  %tmp49 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp49, i32 0, i32 0
  %tmp50 = load i8*, i8** %gname, align 8
  %call60 = call i64 @strlen(i8* %tmp50) #7
  %add61 = add i64 %add59, %call60
  %tmp51 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue62 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp51, i32 0, i32 1
  %tmp52 = load i8*, i8** %gvalue62, align 8
  %call63 = call i64 @strlen(i8* %tmp52) #7
  %add64 = add i64 %add61, %call63
  %add65 = add i64 %add64, 1
  store i64 %add65, i64* %tmp_len, align 8
  %tmp53 = load i64, i64* %len, align 8
  %tmp54 = load i64, i64* %tmp_len, align 8
  %cmp66 = icmp ult i64 %tmp53, %tmp54
  br i1 %cmp66, label %if.then68, label %if.end78

if.then68:                                        ; preds = %if.end57
  %tmp55 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool69 = icmp ne i8* (i8*, i64)* %tmp55, null
  br i1 %tobool69, label %cond.true70, label %cond.false72

cond.true70:                                      ; preds = %if.then68
  %tmp56 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp57 = load i8*, i8** %buf, align 8
  %tmp58 = load i64, i64* %tmp_len, align 8
  %call71 = call i8* %tmp56(i8* %tmp57, i64 %tmp58)
  br label %cond.end74

cond.false72:                                     ; preds = %if.then68
  %tmp59 = load i8*, i8** %buf, align 8
  %tmp60 = load i64, i64* %tmp_len, align 8
  %call73 = call i8* @realloc(i8* %tmp59, i64 %tmp60) #8
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false72, %cond.true70
  %cond75 = phi i8* [ %call71, %cond.true70 ], [ %call73, %cond.false72 ]
  store i8* %cond75, i8** %buf, align 8
  %tmp61 = load i64, i64* %tmp_len, align 8
  store i64 %tmp61, i64* %len, align 8
  %tmp62 = load i8*, i8** %buf, align 8
  %tmp63 = load i8*, i8** %buf, align 8
  %call76 = call i64 @strlen(i8* %tmp63) #7
  %add.ptr77 = getelementptr inbounds i8, i8* %tmp62, i64 %call76
  store i8* %add.ptr77, i8** %tmp, align 8
  br label %if.end78

if.end78:                                         ; preds = %cond.end74, %if.end57
  %tmp64 = load i8*, i8** %tmp, align 8
  %tmp65 = load i64, i64* %len, align 8
  %tmp66 = load i8*, i8** %tmp, align 8
  %tmp67 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp66 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp67 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp65, %sub.ptr.sub
  %tmp68 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname79 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp68, i32 0, i32 0
  %tmp69 = load i8*, i8** %gname79, align 8
  %tmp70 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue80 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp70, i32 0, i32 1
  %tmp71 = load i8*, i8** %gvalue80, align 8
  %call81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp64, i64 %sub, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str1249, i32 0, i32 0), i8* %tmp69, i8* %tmp71) #8
  %tmp72 = load i8*, i8** %tmp, align 8
  %tmp73 = load i8*, i8** %tmp, align 8
  %call82 = call i64 @strlen(i8* %tmp73) #7
  %add.ptr83 = getelementptr inbounds i8, i8* %tmp72, i64 %call82
  store i8* %add.ptr83, i8** %tmp, align 8
  %tmp74 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp74, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp75 = load i8*, i8** %buf, align 8
  %tmp76 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp75, i8** %tmp76, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.end56, %if.then33, %if.end18, %if.then17, %if.then
  %tmp77 = load i32, i32* %retval
  ret i32 %tmp77
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_alert_info(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %alert_info = alloca %struct.osip_call_info*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_call_info_init(%struct.osip_call_info** %alert_info)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_call_info_parse(%struct.osip_call_info* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info, align 8
  call void @osip_call_info_free(%struct.osip_call_info* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 8
  %tmp12 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info, align 8
  %tmp13 = bitcast %struct.osip_call_info* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %alert_infos, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_alert_info(%struct.osip_message* %sip, i32 %pos, %struct.osip_call_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_call_info**, align 8
  %alert_info = alloca %struct.osip_call_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_call_info** %dest, %struct.osip_call_info*** %dest.addr, align 8
  %tmp = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* null, %struct.osip_call_info** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 8
  %call = call i32 @osip_list_size(%struct.osip_list* %alert_infos)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %alert_infos1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 8
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %alert_infos1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp5, %struct.osip_call_info** %alert_info, align 8
  %tmp6 = load %struct.osip_call_info*, %struct.osip_call_info** %alert_info, align 8
  %tmp7 = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* %tmp6, %struct.osip_call_info** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_error_info(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %error_info = alloca %struct.osip_call_info*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_call_info_init(%struct.osip_call_info** %error_info)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_call_info_parse(%struct.osip_call_info* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info, align 8
  call void @osip_call_info_free(%struct.osip_call_info* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 19
  %tmp12 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info, align 8
  %tmp13 = bitcast %struct.osip_call_info* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %error_infos, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_error_info(%struct.osip_message* %sip, i32 %pos, %struct.osip_call_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_call_info**, align 8
  %error_info = alloca %struct.osip_call_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_call_info** %dest, %struct.osip_call_info*** %dest.addr, align 8
  %tmp = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* null, %struct.osip_call_info** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 19
  %call = call i32 @osip_list_size(%struct.osip_list* %error_infos)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %error_infos1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 19
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %error_infos1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp5, %struct.osip_call_info** %error_info, align 8
  %tmp6 = load %struct.osip_call_info*, %struct.osip_call_info** %error_info, align 8
  %tmp7 = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* %tmp6, %struct.osip_call_info** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_allow(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %allow = alloca %struct.osip_content_length*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_content_length_init(%struct.osip_content_length** %allow)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_content_length*, %struct.osip_content_length** %allow, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_content_length_parse(%struct.osip_content_length* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_content_length*, %struct.osip_content_length** %allow, align 8
  call void @osip_content_length_free(%struct.osip_content_length* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 9
  %tmp12 = load %struct.osip_content_length*, %struct.osip_content_length** %allow, align 8
  %tmp13 = bitcast %struct.osip_content_length* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %allows, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_allow(%struct.osip_message* %sip, i32 %pos, %struct.osip_content_length** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_content_length**, align 8
  %allow = alloca %struct.osip_content_length*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_content_length** %dest, %struct.osip_content_length*** %dest.addr, align 8
  %tmp = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* null, %struct.osip_content_length** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 9
  %call = call i32 @osip_list_size(%struct.osip_list* %allows)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %allows1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 9
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %allows1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_content_length*
  store %struct.osip_content_length* %tmp5, %struct.osip_content_length** %allow, align 8
  %tmp6 = load %struct.osip_content_length*, %struct.osip_content_length** %allow, align 8
  %tmp7 = load %struct.osip_content_length**, %struct.osip_content_length*** %dest.addr, align 8
  store %struct.osip_content_length* %tmp6, %struct.osip_content_length** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_call_info(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %call_info = alloca %struct.osip_call_info*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_call_info_init(%struct.osip_call_info** %call_info)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_call_info_parse(%struct.osip_call_info* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info, align 8
  call void @osip_call_info_free(%struct.osip_call_info* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 13
  %tmp12 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info, align 8
  %tmp13 = bitcast %struct.osip_call_info* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %call_infos, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_info_init(%struct.osip_call_info** %call_info) #0 {
entry:
  %retval = alloca i32, align 4
  %call_info.addr = alloca %struct.osip_call_info**, align 8
  store %struct.osip_call_info** %call_info, %struct.osip_call_info*** %call_info.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 24)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 24) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_call_info*
  %tmp3 = load %struct.osip_call_info**, %struct.osip_call_info*** %call_info.addr, align 8
  store %struct.osip_call_info* %tmp2, %struct.osip_call_info** %tmp3, align 8
  %tmp4 = load %struct.osip_call_info**, %struct.osip_call_info*** %call_info.addr, align 8
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %tmp4, align 8
  %cmp = icmp eq %struct.osip_call_info* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_call_info**, %struct.osip_call_info*** %call_info.addr, align 8
  %tmp7 = load %struct.osip_call_info*, %struct.osip_call_info** %tmp6, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp7, i32 0, i32 0
  store i8* null, i8** %element, align 8
  %tmp8 = load %struct.osip_call_info**, %struct.osip_call_info*** %call_info.addr, align 8
  %tmp9 = load %struct.osip_call_info*, %struct.osip_call_info** %tmp8, align 8
  %gen_params = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp9, i32 0, i32 1
  %call2 = call i32 @osip_list_init(%struct.osip_list* %gen_params)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_info_parse(%struct.osip_call_info* %call_info, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %call_info.addr = alloca %struct.osip_call_info*, align 8
  %hvalue.addr = alloca i8*, align 8
  %osip_call_info_params = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_call_info* %call_info, %struct.osip_call_info** %call_info.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp, i32 60) #7
  store i8* %call, i8** %osip_call_info_params, align 8
  %tmp1 = load i8*, i8** %osip_call_info_params, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %osip_call_info_params, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp2, i64 1
  %call1 = call i8* @strchr(i8* %add.ptr, i32 62) #7
  store i8* %call1, i8** %osip_call_info_params, align 8
  %tmp3 = load i8*, i8** %osip_call_info_params, align 8
  %cmp2 = icmp eq i8* %tmp3, null
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp4 = load i8*, i8** %osip_call_info_params, align 8
  %add.ptr5 = getelementptr inbounds i8, i8* %tmp4, i64 1
  %call6 = call i8* @strchr(i8* %add.ptr5, i32 59) #7
  store i8* %call6, i8** %osip_call_info_params, align 8
  %tmp5 = load i8*, i8** %osip_call_info_params, align 8
  %cmp7 = icmp ne i8* %tmp5, null
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end4
  %tmp6 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp6, i32 0, i32 1
  %tmp7 = load i8*, i8** %osip_call_info_params, align 8
  %call9 = call i32 @__osip_generic_param_parseall(%struct.osip_list* %gen_params, i8* %tmp7)
  store i32 %call9, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp10 = icmp ne i32 %tmp8, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then8
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.then8
  br label %if.end15

if.else:                                          ; preds = %if.end4
  %tmp10 = load i8*, i8** %hvalue.addr, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i64 @strlen(i8* %tmp11) #7
  %add.ptr14 = getelementptr inbounds i8, i8* %tmp10, i64 %call13
  store i8* %add.ptr14, i8** %osip_call_info_params, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end12
  %tmp12 = load i8*, i8** %osip_call_info_params, align 8
  %tmp13 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp16 = icmp slt i64 %add, 2
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end15
  store i32 -5, i32* %retval
  br label %return

if.end18:                                         ; preds = %if.end15
  %tmp14 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp14, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end18
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp16 = load i8*, i8** %osip_call_info_params, align 8
  %tmp17 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast19 = ptrtoint i8* %tmp16 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %add22 = add nsw i64 %sub.ptr.sub21, 1
  %call23 = call i8* %tmp15(i64 %add22)
  br label %cond.end

cond.false:                                       ; preds = %if.end18
  %tmp18 = load i8*, i8** %osip_call_info_params, align 8
  %tmp19 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast24 = ptrtoint i8* %tmp18 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %tmp19 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %add27 = add nsw i64 %sub.ptr.sub26, 1
  %call28 = call noalias i8* @malloc(i64 %add27) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call23, %cond.true ], [ %call28, %cond.false ]
  %tmp20 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp20, i32 0, i32 0
  store i8* %cond, i8** %element, align 8
  %tmp21 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element29 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp21, i32 0, i32 0
  %tmp22 = load i8*, i8** %element29, align 8
  %cmp30 = icmp eq i8* %tmp22, null
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end32:                                         ; preds = %cond.end
  %tmp23 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element33 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp23, i32 0, i32 0
  %tmp24 = load i8*, i8** %element33, align 8
  %tmp25 = load i8*, i8** %hvalue.addr, align 8
  %tmp26 = load i8*, i8** %osip_call_info_params, align 8
  %tmp27 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast34 = ptrtoint i8* %tmp26 to i64
  %sub.ptr.rhs.cast35 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %call37 = call i8* @osip_clrncpy(i8* %tmp24, i8* %tmp25, i64 %sub.ptr.sub36)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end32, %if.then31, %if.then17, %if.then11, %if.then3, %if.then
  %tmp28 = load i32, i32* %retval
  ret i32 %tmp28
}

; Function Attrs: nounwind uwtable
define void @osip_call_info_free(%struct.osip_call_info* %call_info) #0 {
entry:
  %call_info.addr = alloca %struct.osip_call_info*, align 8
  store %struct.osip_call_info* %call_info, %struct.osip_call_info** %call_info.addr, align 8
  %tmp = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %cmp = icmp eq %struct.osip_call_info* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end15

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %element, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element4 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %element4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element5 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %element5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp9, i32 0, i32 1
  call void @osip_uri_param_freelist(%struct.osip_list* %gen_params)
  %tmp10 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element8 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp10, i32 0, i32 0
  store i8* null, i8** %element8, align 8
  %tmp11 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %cmp9 = icmp ne %struct.osip_call_info* %tmp11, null
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.end7
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool11 = icmp ne void (i8*)* %tmp12, null
  br i1 %tobool11, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.then10
  %tmp13 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp14 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %tmp15 = bitcast %struct.osip_call_info* %tmp14 to i8*
  call void %tmp13(i8* %tmp15)
  br label %if.end14

if.else13:                                        ; preds = %if.then10
  %tmp16 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %tmp17 = bitcast %struct.osip_call_info* %tmp16 to i8*
  call void @free(i8* %tmp17) #8
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then12
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end7, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_call_info(%struct.osip_message* %sip, i32 %pos, %struct.osip_call_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_call_info**, align 8
  %call_info = alloca %struct.osip_call_info*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_call_info** %dest, %struct.osip_call_info*** %dest.addr, align 8
  %tmp = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* null, %struct.osip_call_info** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 13
  %call = call i32 @osip_list_size(%struct.osip_list* %call_infos)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %call_infos1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 13
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %call_infos1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_call_info*
  store %struct.osip_call_info* %tmp5, %struct.osip_call_info** %call_info, align 8
  %tmp6 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info, align 8
  %tmp7 = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* %tmp6, %struct.osip_call_info** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_info_to_str(%struct.osip_call_info* %call_info, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %call_info.addr = alloca %struct.osip_call_info*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %len = alloca i64, align 8
  %plen = alloca i64, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_call_info* %call_info, %struct.osip_call_info** %call_info.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %cmp = icmp eq %struct.osip_call_info* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %element, align 8
  %cmp3 = icmp eq i8* %tmp4, null
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element4 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %element4, align 8
  %call = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call, 2
  store i64 %add, i64* %len, align 8
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp7, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp8 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp9 = load i64, i64* %len, align 8
  %call5 = call i8* %tmp8(i64 %tmp9)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp10 = load i64, i64* %len, align 8
  %call6 = call noalias i8* @malloc(i64 %tmp10) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp11 = load i8*, i8** %buf, align 8
  %cmp7 = icmp eq i8* %tmp11, null
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end9:                                          ; preds = %cond.end
  %tmp12 = load i8*, i8** %buf, align 8
  %tmp13 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp12, i8** %tmp13, align 8
  %tmp14 = load i8*, i8** %buf, align 8
  %tmp15 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %element10 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %element10, align 8
  %call11 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str260, i32 0, i32 0), i8* %tmp16) #8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end47, %if.end9
  %tmp17 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp17, i32 0, i32 1
  %tmp18 = load i32, i32* %pos, align 4
  %call14 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp18)
  %tobool15 = icmp ne i32 %call14, 0
  %lnot = xor i1 %tobool15, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp19 = load %struct.osip_call_info*, %struct.osip_call_info** %call_info.addr, align 8
  %gen_params16 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp19, i32 0, i32 1
  %tmp20 = load i32, i32* %pos, align 4
  %call17 = call i8* @osip_list_get(%struct.osip_list* %gen_params16, i32 %tmp20)
  %tmp21 = bitcast i8* %call17 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp21, %struct.osip_uri_param** %u_param, align 8
  %tmp22 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp22, i32 0, i32 1
  %tmp23 = load i8*, i8** %gvalue, align 8
  %cmp18 = icmp eq i8* %tmp23, null
  br i1 %cmp18, label %if.then19, label %if.else

if.then19:                                        ; preds = %while.body
  %tmp24 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %gname, align 8
  %call20 = call i64 @strlen(i8* %tmp25) #7
  %add21 = add i64 %call20, 2
  store i64 %add21, i64* %plen, align 8
  br label %if.end28

if.else:                                          ; preds = %while.body
  %tmp26 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname22 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %gname22, align 8
  %call23 = call i64 @strlen(i8* %tmp27) #7
  %tmp28 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue24 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp28, i32 0, i32 1
  %tmp29 = load i8*, i8** %gvalue24, align 8
  %call25 = call i64 @strlen(i8* %tmp29) #7
  %add26 = add i64 %call23, %call25
  %add27 = add i64 %add26, 3
  store i64 %add27, i64* %plen, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then19
  %tmp30 = load i64, i64* %len, align 8
  %tmp31 = load i64, i64* %plen, align 8
  %add29 = add i64 %tmp30, %tmp31
  store i64 %add29, i64* %len, align 8
  %tmp32 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool30 = icmp ne i8* (i8*, i64)* %tmp32, null
  br i1 %tobool30, label %cond.true31, label %cond.false33

cond.true31:                                      ; preds = %if.end28
  %tmp33 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp34 = load i8*, i8** %buf, align 8
  %tmp35 = load i64, i64* %len, align 8
  %call32 = call i8* %tmp33(i8* %tmp34, i64 %tmp35)
  br label %cond.end35

cond.false33:                                     ; preds = %if.end28
  %tmp36 = load i8*, i8** %buf, align 8
  %tmp37 = load i64, i64* %len, align 8
  %call34 = call i8* @realloc(i8* %tmp36, i64 %tmp37) #8
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false33, %cond.true31
  %cond36 = phi i8* [ %call32, %cond.true31 ], [ %call34, %cond.false33 ]
  store i8* %cond36, i8** %buf, align 8
  %tmp38 = load i8*, i8** %buf, align 8
  store i8* %tmp38, i8** %tmp, align 8
  %tmp39 = load i8*, i8** %tmp, align 8
  %tmp40 = load i8*, i8** %tmp, align 8
  %call37 = call i64 @strlen(i8* %tmp40) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp39, i64 %call37
  store i8* %add.ptr, i8** %tmp, align 8
  %tmp41 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue38 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp41, i32 0, i32 1
  %tmp42 = load i8*, i8** %gvalue38, align 8
  %cmp39 = icmp eq i8* %tmp42, null
  br i1 %cmp39, label %if.then40, label %if.else43

if.then40:                                        ; preds = %cond.end35
  %tmp43 = load i8*, i8** %tmp, align 8
  %tmp44 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname41 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp44, i32 0, i32 0
  %tmp45 = load i8*, i8** %gname41, align 8
  %call42 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str1261, i32 0, i32 0), i8* %tmp45) #8
  br label %if.end47

if.else43:                                        ; preds = %cond.end35
  %tmp46 = load i8*, i8** %tmp, align 8
  %tmp47 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname44 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp47, i32 0, i32 0
  %tmp48 = load i8*, i8** %gname44, align 8
  %tmp49 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue45 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp49, i32 0, i32 1
  %tmp50 = load i8*, i8** %gvalue45, align 8
  %call46 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str2262, i32 0, i32 0), i8* %tmp48, i8* %tmp50) #8
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %if.then40
  %tmp51 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp51, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp52 = load i8*, i8** %buf, align 8
  %tmp53 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp52, i8** %tmp53, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then8, %if.then
  %tmp54 = load i32, i32* %retval
  ret i32 %tmp54
}

; Function Attrs: nounwind uwtable
define i32 @osip_call_info_clone(%struct.osip_call_info* %ctt, %struct.osip_call_info** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %ctt.addr = alloca %struct.osip_call_info*, align 8
  %dest.addr = alloca %struct.osip_call_info**, align 8
  %i = alloca i32, align 4
  %ct = alloca %struct.osip_call_info*, align 8
  store %struct.osip_call_info* %ctt, %struct.osip_call_info** %ctt.addr, align 8
  store %struct.osip_call_info** %dest, %struct.osip_call_info*** %dest.addr, align 8
  %tmp = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* null, %struct.osip_call_info** %tmp, align 8
  %tmp1 = load %struct.osip_call_info*, %struct.osip_call_info** %ctt.addr, align 8
  %cmp = icmp eq %struct.osip_call_info* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_call_info*, %struct.osip_call_info** %ctt.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %element, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_call_info_init(%struct.osip_call_info** %ct)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_call_info*, %struct.osip_call_info** %ctt.addr, align 8
  %element7 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %element7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  %element9 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %element9, align 8
  %tmp9 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  %element10 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %element10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end6
  %tmp11 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  call void @osip_call_info_free(%struct.osip_call_info* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end6
  %tmp12 = load %struct.osip_call_info*, %struct.osip_call_info** %ctt.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp12, i32 0, i32 1
  %tmp13 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  %gen_params14 = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp13, i32 0, i32 1
  %call15 = call i32 @osip_list_clone(%struct.osip_list* %gen_params, %struct.osip_list* %gen_params14, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_uri_param*, %struct.osip_uri_param**)* @osip_uri_param_clone to i32 (i8*, i8**)*))
  store i32 %call15, i32* %i, align 4
  %tmp14 = load i32, i32* %i, align 4
  %cmp16 = icmp ne i32 %tmp14, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end13
  %tmp15 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  call void @osip_call_info_free(%struct.osip_call_info* %tmp15)
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end18:                                         ; preds = %if.end13
  %tmp17 = load %struct.osip_call_info*, %struct.osip_call_info** %ct, align 8
  %tmp18 = load %struct.osip_call_info**, %struct.osip_call_info*** %dest.addr, align 8
  store %struct.osip_call_info* %tmp17, %struct.osip_call_info** %tmp18, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end18, %if.then17, %if.then12, %if.then5, %if.then2, %if.then
  %tmp19 = load i32, i32* %retval
  ret i32 %tmp19
}

; Function Attrs: nounwind uwtable
define i8* @osip_call_info_get_uri(%struct.osip_call_info* %ae) #0 {
entry:
  %ae.addr = alloca %struct.osip_call_info*, align 8
  store %struct.osip_call_info* %ae, %struct.osip_call_info** %ae.addr, align 8
  %tmp = load %struct.osip_call_info*, %struct.osip_call_info** %ae.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %element, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_call_info_set_uri(%struct.osip_call_info* %ae, i8* %uri) #0 {
entry:
  %ae.addr = alloca %struct.osip_call_info*, align 8
  %uri.addr = alloca i8*, align 8
  store %struct.osip_call_info* %ae, %struct.osip_call_info** %ae.addr, align 8
  store i8* %uri, i8** %uri.addr, align 8
  %tmp = load i8*, i8** %uri.addr, align 8
  %tmp1 = load %struct.osip_call_info*, %struct.osip_call_info** %ae.addr, align 8
  %element = getelementptr inbounds %struct.osip_call_info, %struct.osip_call_info* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %element, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_proxy_authorization(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %proxy_authorization = alloca %struct.osip_authorization*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_authorization_init(%struct.osip_authorization** %proxy_authorization)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_authorization*, %struct.osip_authorization** %proxy_authorization, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_authorization_parse(%struct.osip_authorization* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_authorization*, %struct.osip_authorization** %proxy_authorization, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 24
  %tmp12 = load %struct.osip_authorization*, %struct.osip_authorization** %proxy_authorization, align 8
  %tmp13 = bitcast %struct.osip_authorization* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %proxy_authorizations, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_proxy_authorization(%struct.osip_message* %sip, i32 %pos, %struct.osip_authorization** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authorization**, align 8
  %proxy_authorization = alloca %struct.osip_authorization*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_authorization** %dest, %struct.osip_authorization*** %dest.addr, align 8
  %tmp = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* null, %struct.osip_authorization** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 24
  %call = call i32 @osip_list_size(%struct.osip_list* %proxy_authorizations)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %proxy_authorizations1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 24
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %proxy_authorizations1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_authorization*
  store %struct.osip_authorization* %tmp5, %struct.osip_authorization** %proxy_authorization, align 8
  %tmp6 = load %struct.osip_authorization*, %struct.osip_authorization** %proxy_authorization, align 8
  %tmp7 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* %tmp6, %struct.osip_authorization** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_cseq_init(%struct.osip_cseq** %cseq) #0 {
entry:
  %retval = alloca i32, align 4
  %cseq.addr = alloca %struct.osip_cseq**, align 8
  store %struct.osip_cseq** %cseq, %struct.osip_cseq*** %cseq.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 16)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_cseq*
  %tmp3 = load %struct.osip_cseq**, %struct.osip_cseq*** %cseq.addr, align 8
  store %struct.osip_cseq* %tmp2, %struct.osip_cseq** %tmp3, align 8
  %tmp4 = load %struct.osip_cseq**, %struct.osip_cseq*** %cseq.addr, align 8
  %tmp5 = load %struct.osip_cseq*, %struct.osip_cseq** %tmp4, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_cseq**, %struct.osip_cseq*** %cseq.addr, align 8
  %tmp7 = load %struct.osip_cseq*, %struct.osip_cseq** %tmp6, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp7, i32 0, i32 0
  store i8* null, i8** %method, align 8
  %tmp8 = load %struct.osip_cseq**, %struct.osip_cseq*** %cseq.addr, align 8
  %tmp9 = load %struct.osip_cseq*, %struct.osip_cseq** %tmp8, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp9, i32 0, i32 1
  store i8* null, i8** %number, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_cseq(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 18
  %tmp4 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq, align 8
  %cmp3 = icmp ne %struct.osip_cseq* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 18
  %call = call i32 @osip_cseq_init(%struct.osip_cseq** %cseq7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 18
  %tmp10 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_cseq_parse(%struct.osip_cseq* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 18
  %tmp14 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq17, align 8
  call void @osip_cseq_free(%struct.osip_cseq* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 18
  store %struct.osip_cseq* null, %struct.osip_cseq** %cseq18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_cseq_parse(%struct.osip_cseq* %cseq, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  %hvalue.addr = alloca i8*, align 8
  %method = alloca i8*, align 8
  %end = alloca i8*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  store i8* null, i8** %method, align 8
  store i8* null, i8** %end, align 8
  %tmp = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp2, i32 0, i32 1
  store i8* null, i8** %number, align 8
  %tmp3 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method2 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp3, i32 0, i32 0
  store i8* null, i8** %method2, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp4, i32 32) #7
  store i8* %call, i8** %method, align 8
  %tmp5 = load i8*, i8** %method, align 8
  %cmp3 = icmp eq i8* %tmp5, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call6 = call i64 @strlen(i8* %tmp7) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp6, i64 %call6
  store i8* %add.ptr, i8** %end, align 8
  %tmp8 = load i8*, i8** %method, align 8
  %tmp9 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp7 = icmp slt i64 %add, 2
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end5
  store i32 -5, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end5
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end9
  %tmp11 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp12 = load i8*, i8** %method, align 8
  %tmp13 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast10 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast11 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %add13 = add nsw i64 %sub.ptr.sub12, 1
  %call14 = call i8* %tmp11(i64 %add13)
  br label %cond.end

cond.false:                                       ; preds = %if.end9
  %tmp14 = load i8*, i8** %method, align 8
  %tmp15 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast15 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.rhs.cast16 = ptrtoint i8* %tmp15 to i64
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16
  %add18 = add nsw i64 %sub.ptr.sub17, 1
  %call19 = call noalias i8* @malloc(i64 %add18) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call14, %cond.true ], [ %call19, %cond.false ]
  %tmp16 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number20 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp16, i32 0, i32 1
  store i8* %cond, i8** %number20, align 8
  %tmp17 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number21 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp17, i32 0, i32 1
  %tmp18 = load i8*, i8** %number21, align 8
  %cmp22 = icmp eq i8* %tmp18, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end24:                                         ; preds = %cond.end
  %tmp19 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number25 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp19, i32 0, i32 1
  %tmp20 = load i8*, i8** %number25, align 8
  %tmp21 = load i8*, i8** %hvalue.addr, align 8
  %tmp22 = load i8*, i8** %method, align 8
  %tmp23 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast26 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %call29 = call i8* @osip_clrncpy(i8* %tmp20, i8* %tmp21, i64 %sub.ptr.sub28)
  %tmp24 = load i8*, i8** %end, align 8
  %tmp25 = load i8*, i8** %method, align 8
  %sub.ptr.lhs.cast30 = ptrtoint i8* %tmp24 to i64
  %sub.ptr.rhs.cast31 = ptrtoint i8* %tmp25 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  %add33 = add nsw i64 %sub.ptr.sub32, 1
  %cmp34 = icmp slt i64 %add33, 2
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end24
  store i32 -5, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.end24
  %tmp26 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool37 = icmp ne i8* (i64)* %tmp26, null
  br i1 %tobool37, label %cond.true38, label %cond.false44

cond.true38:                                      ; preds = %if.end36
  %tmp27 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp28 = load i8*, i8** %end, align 8
  %tmp29 = load i8*, i8** %method, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %add42 = add nsw i64 %sub.ptr.sub41, 1
  %call43 = call i8* %tmp27(i64 %add42)
  br label %cond.end50

cond.false44:                                     ; preds = %if.end36
  %tmp30 = load i8*, i8** %end, align 8
  %tmp31 = load i8*, i8** %method, align 8
  %sub.ptr.lhs.cast45 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.rhs.cast46 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %add48 = add nsw i64 %sub.ptr.sub47, 1
  %call49 = call noalias i8* @malloc(i64 %add48) #8
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false44, %cond.true38
  %cond51 = phi i8* [ %call43, %cond.true38 ], [ %call49, %cond.false44 ]
  %tmp32 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method52 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp32, i32 0, i32 0
  store i8* %cond51, i8** %method52, align 8
  %tmp33 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method53 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp33, i32 0, i32 0
  %tmp34 = load i8*, i8** %method53, align 8
  %cmp54 = icmp eq i8* %tmp34, null
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %cond.end50
  store i32 -4, i32* %retval
  br label %return

if.end56:                                         ; preds = %cond.end50
  %tmp35 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method57 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp35, i32 0, i32 0
  %tmp36 = load i8*, i8** %method57, align 8
  %tmp37 = load i8*, i8** %method, align 8
  %add.ptr58 = getelementptr inbounds i8, i8* %tmp37, i64 1
  %tmp38 = load i8*, i8** %end, align 8
  %tmp39 = load i8*, i8** %method, align 8
  %sub.ptr.lhs.cast59 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.rhs.cast60 = ptrtoint i8* %tmp39 to i64
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60
  %call62 = call i8* @osip_clrncpy(i8* %tmp36, i8* %add.ptr58, i64 %sub.ptr.sub61)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end56, %if.then55, %if.then35, %if.then23, %if.then8, %if.then4, %if.then
  %tmp40 = load i32, i32* %retval
  ret i32 %tmp40
}

; Function Attrs: nounwind uwtable
define void @osip_cseq_free(%struct.osip_cseq* %cseq) #0 {
entry:
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  %tmp = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end23

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %method, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method4 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %method4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method5 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %method5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %number, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number12 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %number12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number14 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %number14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %cmp17 = icmp ne %struct.osip_cseq* %tmp17, null
  br i1 %cmp17, label %if.then18, label %if.end23

if.then18:                                        ; preds = %if.end16
  %tmp18 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp18, null
  br i1 %tobool19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.then18
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp20 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %tmp21 = bitcast %struct.osip_cseq* %tmp20 to i8*
  call void %tmp19(i8* %tmp21)
  br label %if.end22

if.else21:                                        ; preds = %if.then18
  %tmp22 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %tmp23 = bitcast %struct.osip_cseq* %tmp22 to i8*
  call void @free(i8* %tmp23) #8
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end16, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_cseq* @osip_message_get_cseq(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cseq = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 18
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq, align 8
  ret %struct.osip_cseq* %tmp1
}

; Function Attrs: nounwind uwtable
define i8* @osip_cseq_get_number(%struct.osip_cseq* %cseq) #0 {
entry:
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  %tmp = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp, i32 0, i32 1
  %tmp1 = load i8*, i8** %number, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define i8* @osip_cseq_get_method(%struct.osip_cseq* %cseq) #0 {
entry:
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  %tmp = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %method, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_cseq_set_number(%struct.osip_cseq* %cseq, i8* %number) #0 {
entry:
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  %number.addr = alloca i8*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  store i8* %number, i8** %number.addr, align 8
  %tmp = load i8*, i8** %number.addr, align 8
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number1 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %number1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_cseq_set_method(%struct.osip_cseq* %cseq, i8* %method) #0 {
entry:
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  %method.addr = alloca i8*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  store i8* %method, i8** %method.addr, align 8
  %tmp = load i8*, i8** %method.addr, align 8
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method1 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %method1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_cseq_to_str(%struct.osip_cseq* %cseq, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  %dest.addr = alloca i8**, align 8
  %len = alloca i64, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp2, i32 0, i32 1
  %tmp3 = load i8*, i8** %number, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %tmp4 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %method, align 8
  %cmp3 = icmp eq i8* %tmp5, null
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %tmp6 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method4 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %method4, align 8
  %call = call i64 @strlen(i8* %tmp7) #7
  %tmp8 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number5 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp8, i32 0, i32 1
  %tmp9 = load i8*, i8** %number5, align 8
  %call6 = call i64 @strlen(i8* %tmp9) #7
  %add = add i64 %call, %call6
  %add7 = add i64 %add, 2
  store i64 %add7, i64* %len, align 8
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp11 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp12 = load i64, i64* %len, align 8
  %call8 = call i8* %tmp11(i64 %tmp12)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp13 = load i64, i64* %len, align 8
  %call9 = call noalias i8* @malloc(i64 %tmp13) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call8, %cond.true ], [ %call9, %cond.false ]
  %tmp14 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp14, align 8
  %tmp15 = load i8**, i8*** %dest.addr, align 8
  %tmp16 = load i8*, i8** %tmp15, align 8
  %cmp10 = icmp eq i8* %tmp16, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end12:                                         ; preds = %cond.end
  %tmp17 = load i8**, i8*** %dest.addr, align 8
  %tmp18 = load i8*, i8** %tmp17, align 8
  %tmp19 = load i64, i64* %len, align 8
  %tmp20 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number13 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp20, i32 0, i32 1
  %tmp21 = load i8*, i8** %number13, align 8
  %tmp22 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method14 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp22, i32 0, i32 0
  %tmp23 = load i8*, i8** %method14, align 8
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp18, i64 %tmp19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str277, i32 0, i32 0), i8* %tmp21, i8* %tmp23) #8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %tmp24 = load i32, i32* %retval
  ret i32 %tmp24
}

; Function Attrs: nounwind uwtable
define i32 @osip_cseq_clone(%struct.osip_cseq* %cseq, %struct.osip_cseq** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %cseq.addr = alloca %struct.osip_cseq*, align 8
  %dest.addr = alloca %struct.osip_cseq**, align 8
  %i = alloca i32, align 4
  %cs = alloca %struct.osip_cseq*, align 8
  store %struct.osip_cseq* %cseq, %struct.osip_cseq** %cseq.addr, align 8
  store %struct.osip_cseq** %dest, %struct.osip_cseq*** %dest.addr, align 8
  %tmp = load %struct.osip_cseq**, %struct.osip_cseq*** %dest.addr, align 8
  store %struct.osip_cseq* null, %struct.osip_cseq** %tmp, align 8
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %method, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp4, i32 0, i32 1
  %tmp5 = load i8*, i8** %number, align 8
  %cmp4 = icmp eq i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %call = call i32 @osip_cseq_init(%struct.osip_cseq** %cs)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp6, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  %tmp7 = load %struct.osip_cseq*, %struct.osip_cseq** %cs, align 8
  call void @osip_cseq_free(%struct.osip_cseq* %tmp7)
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end6
  %tmp9 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %method10 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %method10, align 8
  %call11 = call i8* @osip_strdup(i8* %tmp10)
  %tmp11 = load %struct.osip_cseq*, %struct.osip_cseq** %cs, align 8
  %method12 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp11, i32 0, i32 0
  store i8* %call11, i8** %method12, align 8
  %tmp12 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq.addr, align 8
  %number13 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %number13, align 8
  %call14 = call i8* @osip_strdup(i8* %tmp13)
  %tmp14 = load %struct.osip_cseq*, %struct.osip_cseq** %cs, align 8
  %number15 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp14, i32 0, i32 1
  store i8* %call14, i8** %number15, align 8
  %tmp15 = load %struct.osip_cseq*, %struct.osip_cseq** %cs, align 8
  %tmp16 = load %struct.osip_cseq**, %struct.osip_cseq*** %dest.addr, align 8
  store %struct.osip_cseq* %tmp15, %struct.osip_cseq** %tmp16, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end9, %if.then8, %if.then5, %if.then2, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_cseq_match(%struct.osip_cseq* %cseq1, %struct.osip_cseq* %cseq2) #0 {
entry:
  %retval = alloca i32, align 4
  %cseq1.addr = alloca %struct.osip_cseq*, align 8
  %cseq2.addr = alloca %struct.osip_cseq*, align 8
  store %struct.osip_cseq* %cseq1, %struct.osip_cseq** %cseq1.addr, align 8
  store %struct.osip_cseq* %cseq2, %struct.osip_cseq** %cseq2.addr, align 8
  %tmp = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %cmp = icmp eq %struct.osip_cseq* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %cmp1 = icmp eq %struct.osip_cseq* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %number = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp2, i32 0, i32 1
  %tmp3 = load i8*, i8** %number, align 8
  %cmp2 = icmp eq i8* %tmp3, null
  br i1 %cmp2, label %if.then11, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %if.end
  %tmp4 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %number4 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp4, i32 0, i32 1
  %tmp5 = load i8*, i8** %number4, align 8
  %cmp5 = icmp eq i8* %tmp5, null
  br i1 %cmp5, label %if.then11, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %tmp6 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %method = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %method, align 8
  %cmp7 = icmp eq i8* %tmp7, null
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %tmp8 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %method9 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp8, i32 0, i32 0
  %tmp9 = load i8*, i8** %method9, align 8
  %cmp10 = icmp eq i8* %tmp9, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false3, %if.end
  store i32 -2, i32* %retval
  br label %return

if.end12:                                         ; preds = %lor.lhs.false8
  %tmp10 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %number13 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %number13, align 8
  %tmp12 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %number14 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %number14, align 8
  %call = call i32 @strcmp(i8* %tmp11, i8* %tmp13) #7
  %cmp15 = icmp eq i32 0, %call
  br i1 %cmp15, label %if.then16, label %if.end41

if.then16:                                        ; preds = %if.end12
  %tmp14 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %method17 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp14, i32 0, i32 0
  %tmp15 = load i8*, i8** %method17, align 8
  %call18 = call i32 @strcmp(i8* %tmp15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1278, i32 0, i32 0)) #7
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %if.then16
  %tmp16 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %method21 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp16, i32 0, i32 0
  %tmp17 = load i8*, i8** %method21, align 8
  %call22 = call i32 @strcmp(i8* %tmp17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2279, i32 0, i32 0)) #7
  %cmp23 = icmp eq i32 0, %call22
  br i1 %cmp23, label %if.then24, label %if.else

if.then24:                                        ; preds = %lor.lhs.false20, %if.then16
  %tmp18 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %method25 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp18, i32 0, i32 0
  %tmp19 = load i8*, i8** %method25, align 8
  %call26 = call i32 @strcmp(i8* %tmp19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1278, i32 0, i32 0)) #7
  %cmp27 = icmp eq i32 0, %call26
  br i1 %cmp27, label %if.then32, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %if.then24
  %tmp20 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %method29 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp20, i32 0, i32 0
  %tmp21 = load i8*, i8** %method29, align 8
  %call30 = call i32 @strcmp(i8* %tmp21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2279, i32 0, i32 0)) #7
  %cmp31 = icmp eq i32 0, %call30
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %lor.lhs.false28, %if.then24
  store i32 0, i32* %retval
  br label %return

if.end33:                                         ; preds = %lor.lhs.false28
  br label %if.end40

if.else:                                          ; preds = %lor.lhs.false20
  %tmp22 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq1.addr, align 8
  %method34 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp22, i32 0, i32 0
  %tmp23 = load i8*, i8** %method34, align 8
  %tmp24 = load %struct.osip_cseq*, %struct.osip_cseq** %cseq2.addr, align 8
  %method35 = getelementptr inbounds %struct.osip_cseq, %struct.osip_cseq* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %method35, align 8
  %call36 = call i32 @strcmp(i8* %tmp23, i8* %tmp25) #7
  %cmp37 = icmp eq i32 0, %call36
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end39:                                         ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end12
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %if.end41, %if.then38, %if.then32, %if.then11, %if.then
  %tmp26 = load i32, i32* %retval
  ret i32 %tmp26
}

; Function Attrs: nounwind uwtable
define i32 @osip_record_route_init(%struct.osip_from** %record_route) #0 {
entry:
  %record_route.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from** %record_route, %struct.osip_from*** %record_route.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %record_route.addr, align 8
  %call = call i32 @osip_from_init(%struct.osip_from** %tmp)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_record_route(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %record_route = alloca %struct.osip_from*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_record_route_init(%struct.osip_from** %record_route)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %record_route, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_record_route_parse(%struct.osip_from* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_from*, %struct.osip_from** %record_route, align 8
  call void @osip_record_route_free(%struct.osip_from* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 25
  %tmp12 = load %struct.osip_from*, %struct.osip_from** %record_route, align 8
  %tmp13 = bitcast %struct.osip_from* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %record_routes, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_record_route_parse(%struct.osip_from* %record_route, i8* %hvalue) #0 {
entry:
  %record_route.addr = alloca %struct.osip_from*, align 8
  %hvalue.addr = alloca i8*, align 8
  store %struct.osip_from* %record_route, %struct.osip_from** %record_route.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i32 @osip_from_parse(%struct.osip_from* %tmp, i8* %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @osip_record_route_free(%struct.osip_from* %record_route) #0 {
entry:
  %record_route.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %record_route, %struct.osip_from** %record_route.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_record_route(%struct.osip_message* %sip, i32 %pos, %struct.osip_from** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_from**, align 8
  %record_route = alloca %struct.osip_from*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* null, %struct.osip_from** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 25
  %call = call i32 @osip_list_size(%struct.osip_list* %record_routes)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %record_routes1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 25
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %record_routes1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_from*
  store %struct.osip_from* %tmp5, %struct.osip_from** %record_route, align 8
  %tmp6 = load %struct.osip_from*, %struct.osip_from** %record_route, align 8
  %tmp7 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* %tmp6, %struct.osip_from** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_record_route_to_str(%struct.osip_from* %record_route, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %record_route.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca i8**, align 8
  %url = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i64, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %plen = alloca i64, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_from* %record_route, %struct.osip_from** %record_route.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %url1 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 1
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %url1, align 8
  %cmp2 = icmp eq %struct.osip_uri* %tmp4, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %url3 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp5, i32 0, i32 1
  %tmp6 = load %struct.osip_uri*, %struct.osip_uri** %url3, align 8
  %call = call i32 @osip_uri_to_str(%struct.osip_uri* %tmp6, i8** %url)
  store i32 %call, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp7, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %displayname, align 8
  %cmp7 = icmp eq i8* %tmp10, null
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end6
  %tmp11 = load i8*, i8** %url, align 8
  %call9 = call i64 @strlen(i8* %tmp11) #7
  %add = add i64 %call9, 5
  store i64 %add, i64* %len, align 8
  br label %if.end15

if.else:                                          ; preds = %if.end6
  %tmp12 = load i8*, i8** %url, align 8
  %call10 = call i64 @strlen(i8* %tmp12) #7
  %tmp13 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %displayname11 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %displayname11, align 8
  %call12 = call i64 @strlen(i8* %tmp14) #7
  %add13 = add i64 %call10, %call12
  %add14 = add i64 %add13, 5
  store i64 %add14, i64* %len, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp15, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end15
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp17 = load i64, i64* %len, align 8
  %call16 = call i8* %tmp16(i64 %tmp17)
  br label %cond.end

cond.false:                                       ; preds = %if.end15
  %tmp18 = load i64, i64* %len, align 8
  %call17 = call noalias i8* @malloc(i64 %tmp18) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call16, %cond.true ], [ %call17, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp19 = load i8*, i8** %buf, align 8
  %cmp18 = icmp eq i8* %tmp19, null
  br i1 %cmp18, label %if.then19, label %if.end27

if.then19:                                        ; preds = %cond.end
  %tmp20 = load i8*, i8** %url, align 8
  %cmp20 = icmp ne i8* %tmp20, null
  br i1 %cmp20, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.then19
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool22 = icmp ne void (i8*)* %tmp21, null
  br i1 %tobool22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.then21
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp23 = load i8*, i8** %url, align 8
  call void %tmp22(i8* %tmp23)
  br label %if.end25

if.else24:                                        ; preds = %if.then21
  %tmp24 = load i8*, i8** %url, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then19
  store i32 -4, i32* %retval
  br label %return

if.end27:                                         ; preds = %cond.end
  %tmp25 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %displayname28 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp25, i32 0, i32 0
  %tmp26 = load i8*, i8** %displayname28, align 8
  %cmp29 = icmp ne i8* %tmp26, null
  br i1 %cmp29, label %if.then30, label %if.else33

if.then30:                                        ; preds = %if.end27
  %tmp27 = load i8*, i8** %buf, align 8
  %tmp28 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %displayname31 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp28, i32 0, i32 0
  %tmp29 = load i8*, i8** %displayname31, align 8
  %tmp30 = load i8*, i8** %url, align 8
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str288, i32 0, i32 0), i8* %tmp29, i8* %tmp30) #8
  br label %if.end35

if.else33:                                        ; preds = %if.end27
  %tmp31 = load i8*, i8** %buf, align 8
  %tmp32 = load i8*, i8** %url, align 8
  %call34 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str1289, i32 0, i32 0), i8* %tmp32) #8
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then30
  %tmp33 = load i8*, i8** %url, align 8
  %cmp36 = icmp ne i8* %tmp33, null
  br i1 %cmp36, label %if.then37, label %if.end42

if.then37:                                        ; preds = %if.end35
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool38 = icmp ne void (i8*)* %tmp34, null
  br i1 %tobool38, label %if.then39, label %if.else40

if.then39:                                        ; preds = %if.then37
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp36 = load i8*, i8** %url, align 8
  call void %tmp35(i8* %tmp36)
  br label %if.end41

if.else40:                                        ; preds = %if.then37
  %tmp37 = load i8*, i8** %url, align 8
  call void @free(i8* %tmp37) #8
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then39
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end35
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end81, %if.end42
  %tmp38 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp38, i32 0, i32 2
  %tmp39 = load i32, i32* %pos, align 4
  %call43 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp39)
  %tobool44 = icmp ne i32 %call43, 0
  %lnot = xor i1 %tobool44, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp40 = load %struct.osip_from*, %struct.osip_from** %record_route.addr, align 8
  %gen_params45 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp40, i32 0, i32 2
  %tmp41 = load i32, i32* %pos, align 4
  %call46 = call i8* @osip_list_get(%struct.osip_list* %gen_params45, i32 %tmp41)
  %tmp42 = bitcast i8* %call46 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp42, %struct.osip_uri_param** %u_param, align 8
  %tmp43 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp43, i32 0, i32 1
  %tmp44 = load i8*, i8** %gvalue, align 8
  %cmp47 = icmp eq i8* %tmp44, null
  br i1 %cmp47, label %if.then48, label %if.else51

if.then48:                                        ; preds = %while.body
  %tmp45 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp45, i32 0, i32 0
  %tmp46 = load i8*, i8** %gname, align 8
  %call49 = call i64 @strlen(i8* %tmp46) #7
  %add50 = add i64 %call49, 2
  store i64 %add50, i64* %plen, align 8
  br label %if.end58

if.else51:                                        ; preds = %while.body
  %tmp47 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname52 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp47, i32 0, i32 0
  %tmp48 = load i8*, i8** %gname52, align 8
  %call53 = call i64 @strlen(i8* %tmp48) #7
  %tmp49 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue54 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp49, i32 0, i32 1
  %tmp50 = load i8*, i8** %gvalue54, align 8
  %call55 = call i64 @strlen(i8* %tmp50) #7
  %add56 = add i64 %call53, %call55
  %add57 = add i64 %add56, 3
  store i64 %add57, i64* %plen, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.else51, %if.then48
  %tmp51 = load i64, i64* %len, align 8
  %tmp52 = load i64, i64* %plen, align 8
  %add59 = add i64 %tmp51, %tmp52
  store i64 %add59, i64* %len, align 8
  %tmp53 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool60 = icmp ne i8* (i8*, i64)* %tmp53, null
  br i1 %tobool60, label %cond.true61, label %cond.false63

cond.true61:                                      ; preds = %if.end58
  %tmp54 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp55 = load i8*, i8** %buf, align 8
  %tmp56 = load i64, i64* %len, align 8
  %call62 = call i8* %tmp54(i8* %tmp55, i64 %tmp56)
  br label %cond.end65

cond.false63:                                     ; preds = %if.end58
  %tmp57 = load i8*, i8** %buf, align 8
  %tmp58 = load i64, i64* %len, align 8
  %call64 = call i8* @realloc(i8* %tmp57, i64 %tmp58) #8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false63, %cond.true61
  %cond66 = phi i8* [ %call62, %cond.true61 ], [ %call64, %cond.false63 ]
  store i8* %cond66, i8** %buf, align 8
  %tmp59 = load i8*, i8** %buf, align 8
  store i8* %tmp59, i8** %tmp, align 8
  %tmp60 = load i8*, i8** %tmp, align 8
  %tmp61 = load i8*, i8** %tmp, align 8
  %call67 = call i64 @strlen(i8* %tmp61) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp60, i64 %call67
  store i8* %add.ptr, i8** %tmp, align 8
  %tmp62 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue68 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp62, i32 0, i32 1
  %tmp63 = load i8*, i8** %gvalue68, align 8
  %cmp69 = icmp eq i8* %tmp63, null
  br i1 %cmp69, label %if.then70, label %if.else73

if.then70:                                        ; preds = %cond.end65
  %tmp64 = load i8*, i8** %tmp, align 8
  %tmp65 = load i64, i64* %len, align 8
  %tmp66 = load i8*, i8** %tmp, align 8
  %tmp67 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp66 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp67 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp65, %sub.ptr.sub
  %tmp68 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname71 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp68, i32 0, i32 0
  %tmp69 = load i8*, i8** %gname71, align 8
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp64, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2290, i32 0, i32 0), i8* %tmp69) #8
  br label %if.end81

if.else73:                                        ; preds = %cond.end65
  %tmp70 = load i8*, i8** %tmp, align 8
  %tmp71 = load i64, i64* %len, align 8
  %tmp72 = load i8*, i8** %tmp, align 8
  %tmp73 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast74 = ptrtoint i8* %tmp72 to i64
  %sub.ptr.rhs.cast75 = ptrtoint i8* %tmp73 to i64
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75
  %sub77 = sub i64 %tmp71, %sub.ptr.sub76
  %tmp74 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname78 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp74, i32 0, i32 0
  %tmp75 = load i8*, i8** %gname78, align 8
  %tmp76 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue79 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp76, i32 0, i32 1
  %tmp77 = load i8*, i8** %gvalue79, align 8
  %call80 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp70, i64 %sub77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str3291, i32 0, i32 0), i8* %tmp75, i8* %tmp77) #8
  br label %if.end81

if.end81:                                         ; preds = %if.else73, %if.then70
  %tmp78 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp78, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp79 = load i8*, i8** %buf, align 8
  %tmp80 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp79, i8** %tmp80, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.end26, %if.then5, %if.then
  %tmp81 = load i32, i32* %retval
  ret i32 %tmp81
}

; Function Attrs: nounwind uwtable
define i32 @osip_route_init(%struct.osip_from** %route) #0 {
entry:
  %route.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from** %route, %struct.osip_from*** %route.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %route.addr, align 8
  %call = call i32 @osip_from_init(%struct.osip_from** %tmp)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_route(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %route = alloca %struct.osip_from*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_route_init(%struct.osip_from** %route)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %route, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_route_parse(%struct.osip_from* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_from*, %struct.osip_from** %route, align 8
  call void @osip_route_free(%struct.osip_from* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 26
  %tmp12 = load %struct.osip_from*, %struct.osip_from** %route, align 8
  %tmp13 = bitcast %struct.osip_from* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %routes, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_route_parse(%struct.osip_from* %route, i8* %hvalue) #0 {
entry:
  %route.addr = alloca %struct.osip_from*, align 8
  %hvalue.addr = alloca i8*, align 8
  store %struct.osip_from* %route, %struct.osip_from** %route.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %route.addr, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i32 @osip_from_parse(%struct.osip_from* %tmp, i8* %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @osip_route_free(%struct.osip_from* %route) #0 {
entry:
  %route.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %route, %struct.osip_from** %route.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %route.addr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_route(%struct.osip_message* %sip, i32 %pos, %struct.osip_from** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_from**, align 8
  %route = alloca %struct.osip_from*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* null, %struct.osip_from** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 26
  %call = call i32 @osip_list_size(%struct.osip_list* %routes)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %routes1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 26
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %routes1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_from*
  store %struct.osip_from* %tmp5, %struct.osip_from** %route, align 8
  %tmp6 = load %struct.osip_from*, %struct.osip_from** %route, align 8
  %tmp7 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* %tmp6, %struct.osip_from** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_route_to_str(%struct.osip_from* %route, i8** %dest) #0 {
entry:
  %route.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_from* %route, %struct.osip_from** %route.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %route.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  %call = call i32 @osip_record_route_to_str(%struct.osip_from* %tmp, i8** %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_to_init(%struct.osip_from** %to) #0 {
entry:
  %to.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from** %to, %struct.osip_from*** %to.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %to.addr, align 8
  %call = call i32 @osip_from_init(%struct.osip_from** %tmp)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_to(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 27
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %to, align 8
  %cmp3 = icmp ne %struct.osip_from* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 27
  %call = call i32 @osip_to_init(%struct.osip_from** %to7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 27
  %tmp10 = load %struct.osip_from*, %struct.osip_from** %to12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_to_parse(%struct.osip_from* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 27
  %tmp14 = load %struct.osip_from*, %struct.osip_from** %to17, align 8
  call void @osip_to_free(%struct.osip_from* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 27
  store %struct.osip_from* null, %struct.osip_from** %to18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_to_parse(%struct.osip_from* %to, i8* %hvalue) #0 {
entry:
  %to.addr = alloca %struct.osip_from*, align 8
  %hvalue.addr = alloca i8*, align 8
  store %struct.osip_from* %to, %struct.osip_from** %to.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %to.addr, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i32 @osip_from_parse(%struct.osip_from* %tmp, i8* %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @osip_to_free(%struct.osip_from* %to) #0 {
entry:
  %to.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %to, %struct.osip_from** %to.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %to.addr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp)
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_from* @osip_message_get_to(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %to = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 27
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %to, align 8
  ret %struct.osip_from* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @osip_to_to_str(%struct.osip_from* %to, i8** %dest) #0 {
entry:
  %to.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca i8**, align 8
  store %struct.osip_from* %to, %struct.osip_from** %to.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %to.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  %call = call i32 @osip_from_to_str(%struct.osip_from* %tmp, i8** %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_to_clone(%struct.osip_from* %to, %struct.osip_from** %dest) #0 {
entry:
  %to.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from* %to, %struct.osip_from** %to.addr, align 8
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %to.addr, align 8
  %tmp1 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  %call = call i32 @osip_from_clone(%struct.osip_from* %tmp, %struct.osip_from** %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_to_tag_match(%struct.osip_from* %to1, %struct.osip_from* %to2) #0 {
entry:
  %to1.addr = alloca %struct.osip_from*, align 8
  %to2.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %to1, %struct.osip_from** %to1.addr, align 8
  store %struct.osip_from* %to2, %struct.osip_from** %to2.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %to1.addr, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %to2.addr, align 8
  %call = call i32 @osip_from_tag_match(%struct.osip_from* %tmp, %struct.osip_from* %tmp1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_from(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 20
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %from, align 8
  %cmp3 = icmp ne %struct.osip_from* %tmp4, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from7 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 20
  %call = call i32 @osip_from_init(%struct.osip_from** %from7)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp6, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from12 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 20
  %tmp10 = load %struct.osip_from*, %struct.osip_from** %from12, align 8
  %tmp11 = load i8*, i8** %hvalue.addr, align 8
  %call13 = call i32 @osip_from_parse(%struct.osip_from* %tmp10, i8* %tmp11)
  store i32 %call13, i32* %i, align 4
  %tmp12 = load i32, i32* %i, align 4
  %cmp14 = icmp ne i32 %tmp12, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end11
  %tmp13 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from17 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp13, i32 0, i32 20
  %tmp14 = load %struct.osip_from*, %struct.osip_from** %from17, align 8
  call void @osip_from_free(%struct.osip_from* %tmp14)
  %tmp15 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from18 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp15, i32 0, i32 20
  store %struct.osip_from* null, %struct.osip_from** %from18, align 8
  %tmp16 = load i32, i32* %i, align 4
  store i32 %tmp16, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end11
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.then16, %if.then10, %if.then5, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_init(%struct.osip_from** %from) #0 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.osip_from**, align 8
  store %struct.osip_from** %from, %struct.osip_from*** %from.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 32)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_from*
  %tmp3 = load %struct.osip_from**, %struct.osip_from*** %from.addr, align 8
  store %struct.osip_from* %tmp2, %struct.osip_from** %tmp3, align 8
  %tmp4 = load %struct.osip_from**, %struct.osip_from*** %from.addr, align 8
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %tmp4, align 8
  %cmp = icmp eq %struct.osip_from* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_from**, %struct.osip_from*** %from.addr, align 8
  %tmp7 = load %struct.osip_from*, %struct.osip_from** %tmp6, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp7, i32 0, i32 0
  store i8* null, i8** %displayname, align 8
  %tmp8 = load %struct.osip_from**, %struct.osip_from*** %from.addr, align 8
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %tmp8, align 8
  %url = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 1
  store %struct.osip_uri* null, %struct.osip_uri** %url, align 8
  %tmp10 = load %struct.osip_from**, %struct.osip_from*** %from.addr, align 8
  %tmp11 = load %struct.osip_from*, %struct.osip_from** %tmp10, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp11, i32 0, i32 2
  %call2 = call i32 @osip_list_init(%struct.osip_list* %gen_params)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp12 = load i32, i32* %retval
  ret i32 %tmp12
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_parse(%struct.osip_from* %from, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.osip_from*, align 8
  %hvalue.addr = alloca i8*, align 8
  %displayname = alloca i8*, align 8
  %url = alloca i8*, align 8
  %url_end = alloca i8*, align 8
  %gen_params = alloca i8*, align 8
  %i = alloca i32, align 4
  %first = alloca i8*, align 8
  %second = alloca i8*, align 8
  %host = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %cmp1 = icmp eq i8* %tmp2, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp3, i32 34) #7
  store i8* %call, i8** %displayname, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %call2 = call i8* @strchr(i8* %tmp4, i32 60) #7
  store i8* %call2, i8** %url, align 8
  %tmp5 = load i8*, i8** %url, align 8
  %cmp3 = icmp ne i8* %tmp5, null
  br i1 %cmp3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %tmp6 = load i8*, i8** %url, align 8
  %call5 = call i8* @strchr(i8* %tmp6, i32 62) #7
  store i8* %call5, i8** %url_end, align 8
  %tmp7 = load i8*, i8** %url_end, align 8
  %cmp6 = icmp eq i8* %tmp7, null
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then4
  store i32 -5, i32* %retval
  br label %return

if.end8:                                          ; preds = %if.then4
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %tmp8 = load i8*, i8** %displayname, align 8
  %cmp10 = icmp ne i8* %tmp8, null
  br i1 %cmp10, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end9
  %tmp9 = load i8*, i8** %displayname, align 8
  %tmp10 = load i8*, i8** %url, align 8
  %cmp12 = icmp ugt i8* %tmp9, %tmp10
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then11
  store i8* null, i8** %displayname, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.then11
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end9
  %tmp11 = load i8*, i8** %displayname, align 8
  %cmp16 = icmp eq i8* %tmp11, null
  br i1 %cmp16, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end15
  %tmp12 = load i8*, i8** %url, align 8
  %cmp17 = icmp ne i8* %tmp12, null
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %land.lhs.true
  %tmp13 = load i8*, i8** %hvalue.addr, align 8
  %tmp14 = load i8*, i8** %url, align 8
  %cmp19 = icmp ne i8* %tmp13, %tmp14
  br i1 %cmp19, label %if.then20, label %if.end44

if.then20:                                        ; preds = %if.then18
  %tmp15 = load i8*, i8** %url, align 8
  %tmp16 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp15 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp21 = icmp slt i64 %add, 2
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.then20
  store i32 -5, i32* %retval
  br label %return

if.end23:                                         ; preds = %if.then20
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp17, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end23
  %tmp18 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp19 = load i8*, i8** %url, align 8
  %tmp20 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast24 = ptrtoint i8* %tmp19 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %add27 = add nsw i64 %sub.ptr.sub26, 1
  %call28 = call i8* %tmp18(i64 %add27)
  br label %cond.end

cond.false:                                       ; preds = %if.end23
  %tmp21 = load i8*, i8** %url, align 8
  %tmp22 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast29 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.rhs.cast30 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %add32 = add nsw i64 %sub.ptr.sub31, 1
  %call33 = call noalias i8* @malloc(i64 %add32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call28, %cond.true ], [ %call33, %cond.false ]
  %tmp23 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname34 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp23, i32 0, i32 0
  store i8* %cond, i8** %displayname34, align 8
  %tmp24 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname35 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %displayname35, align 8
  %cmp36 = icmp eq i8* %tmp25, null
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end38:                                         ; preds = %cond.end
  %tmp26 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname39 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %displayname39, align 8
  %tmp28 = load i8*, i8** %hvalue.addr, align 8
  %tmp29 = load i8*, i8** %url, align 8
  %tmp30 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast40 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.rhs.cast41 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41
  %call43 = call i8* @osip_clrncpy(i8* %tmp27, i8* %tmp28, i64 %sub.ptr.sub42)
  br label %if.end44

if.end44:                                         ; preds = %if.end38, %if.then18
  %tmp31 = load i8*, i8** %url, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp31, i32 1
  store i8* %incdec.ptr, i8** %url, align 8
  br label %if.end101

if.else:                                          ; preds = %land.lhs.true, %if.end15
  %tmp32 = load i8*, i8** %displayname, align 8
  %cmp45 = icmp ne i8* %tmp32, null
  br i1 %cmp45, label %land.lhs.true46, label %if.else99

land.lhs.true46:                                  ; preds = %if.else
  %tmp33 = load i8*, i8** %url, align 8
  %cmp47 = icmp ne i8* %tmp33, null
  br i1 %cmp47, label %if.then48, label %if.else99

if.then48:                                        ; preds = %land.lhs.true46
  store i8* null, i8** %second, align 8
  %tmp34 = load i8*, i8** %hvalue.addr, align 8
  %call49 = call i8* @__osip_quote_find(i8* %tmp34)
  store i8* %call49, i8** %first, align 8
  %tmp35 = load i8*, i8** %first, align 8
  %cmp50 = icmp eq i8* %tmp35, null
  br i1 %cmp50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.then48
  store i32 -5, i32* %retval
  br label %return

if.end52:                                         ; preds = %if.then48
  %tmp36 = load i8*, i8** %first, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp36, i64 1
  %call53 = call i8* @__osip_quote_find(i8* %add.ptr)
  store i8* %call53, i8** %second, align 8
  %tmp37 = load i8*, i8** %second, align 8
  %cmp54 = icmp eq i8* %tmp37, null
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end52
  store i32 -5, i32* %retval
  br label %return

if.end56:                                         ; preds = %if.end52
  %tmp38 = load i8*, i8** %first, align 8
  %tmp39 = load i8*, i8** %url, align 8
  %cmp57 = icmp ugt i8* %tmp38, %tmp39
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.end56
  store i32 -5, i32* %retval
  br label %return

if.end59:                                         ; preds = %if.end56
  %tmp40 = load i8*, i8** %second, align 8
  %tmp41 = load i8*, i8** %first, align 8
  %sub.ptr.lhs.cast60 = ptrtoint i8* %tmp40 to i64
  %sub.ptr.rhs.cast61 = ptrtoint i8* %tmp41 to i64
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61
  %add63 = add nsw i64 %sub.ptr.sub62, 2
  %cmp64 = icmp sge i64 %add63, 2
  br i1 %cmp64, label %if.then65, label %if.end92

if.then65:                                        ; preds = %if.end59
  %tmp42 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool66 = icmp ne i8* (i64)* %tmp42, null
  br i1 %tobool66, label %cond.true67, label %cond.false73

cond.true67:                                      ; preds = %if.then65
  %tmp43 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp44 = load i8*, i8** %second, align 8
  %tmp45 = load i8*, i8** %first, align 8
  %sub.ptr.lhs.cast68 = ptrtoint i8* %tmp44 to i64
  %sub.ptr.rhs.cast69 = ptrtoint i8* %tmp45 to i64
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69
  %add71 = add nsw i64 %sub.ptr.sub70, 2
  %call72 = call i8* %tmp43(i64 %add71)
  br label %cond.end79

cond.false73:                                     ; preds = %if.then65
  %tmp46 = load i8*, i8** %second, align 8
  %tmp47 = load i8*, i8** %first, align 8
  %sub.ptr.lhs.cast74 = ptrtoint i8* %tmp46 to i64
  %sub.ptr.rhs.cast75 = ptrtoint i8* %tmp47 to i64
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75
  %add77 = add nsw i64 %sub.ptr.sub76, 2
  %call78 = call noalias i8* @malloc(i64 %add77) #8
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false73, %cond.true67
  %cond80 = phi i8* [ %call72, %cond.true67 ], [ %call78, %cond.false73 ]
  %tmp48 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname81 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp48, i32 0, i32 0
  store i8* %cond80, i8** %displayname81, align 8
  %tmp49 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname82 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp49, i32 0, i32 0
  %tmp50 = load i8*, i8** %displayname82, align 8
  %cmp83 = icmp eq i8* %tmp50, null
  br i1 %cmp83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %cond.end79
  store i32 -4, i32* %retval
  br label %return

if.end85:                                         ; preds = %cond.end79
  %tmp51 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname86 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp51, i32 0, i32 0
  %tmp52 = load i8*, i8** %displayname86, align 8
  %tmp53 = load i8*, i8** %first, align 8
  %tmp54 = load i8*, i8** %second, align 8
  %tmp55 = load i8*, i8** %first, align 8
  %sub.ptr.lhs.cast87 = ptrtoint i8* %tmp54 to i64
  %sub.ptr.rhs.cast88 = ptrtoint i8* %tmp55 to i64
  %sub.ptr.sub89 = sub i64 %sub.ptr.lhs.cast87, %sub.ptr.rhs.cast88
  %add90 = add nsw i64 %sub.ptr.sub89, 1
  %call91 = call i8* @osip_strncpy(i8* %tmp52, i8* %tmp53, i64 %add90)
  br label %if.end92

if.end92:                                         ; preds = %if.end85, %if.end59
  %tmp56 = load i8*, i8** %second, align 8
  %add.ptr93 = getelementptr inbounds i8, i8* %tmp56, i64 1
  %call94 = call i8* @strchr(i8* %add.ptr93, i32 60) #7
  store i8* %call94, i8** %url, align 8
  %tmp57 = load i8*, i8** %url, align 8
  %cmp95 = icmp eq i8* %tmp57, null
  br i1 %cmp95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.end92
  store i32 -5, i32* %retval
  br label %return

if.end97:                                         ; preds = %if.end92
  %tmp58 = load i8*, i8** %url, align 8
  %incdec.ptr98 = getelementptr inbounds i8, i8* %tmp58, i32 1
  store i8* %incdec.ptr98, i8** %url, align 8
  br label %if.end100

if.else99:                                        ; preds = %land.lhs.true46, %if.else
  %tmp59 = load i8*, i8** %hvalue.addr, align 8
  store i8* %tmp59, i8** %url, align 8
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.end97
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end44
  %tmp60 = load i8*, i8** %url, align 8
  %call102 = call i8* @strchr(i8* %tmp60, i32 62) #7
  store i8* %call102, i8** %url_end, align 8
  %tmp61 = load i8*, i8** %url_end, align 8
  %cmp103 = icmp eq i8* %tmp61, null
  br i1 %cmp103, label %if.then104, label %if.else119

if.then104:                                       ; preds = %if.end101
  %tmp62 = load i8*, i8** %url, align 8
  %call105 = call i8* @strchr(i8* %tmp62, i32 64) #7
  store i8* %call105, i8** %host, align 8
  %tmp63 = load i8*, i8** %host, align 8
  %cmp106 = icmp ne i8* %tmp63, null
  br i1 %cmp106, label %if.then107, label %if.else109

if.then107:                                       ; preds = %if.then104
  %tmp64 = load i8*, i8** %host, align 8
  %call108 = call i8* @strchr(i8* %tmp64, i32 59) #7
  store i8* %call108, i8** %gen_params, align 8
  br label %if.end111

if.else109:                                       ; preds = %if.then104
  %tmp65 = load i8*, i8** %url, align 8
  %call110 = call i8* @strchr(i8* %tmp65, i32 59) #7
  store i8* %call110, i8** %gen_params, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %if.then107
  %tmp66 = load i8*, i8** %gen_params, align 8
  %cmp112 = icmp ne i8* %tmp66, null
  br i1 %cmp112, label %if.then113, label %if.else115

if.then113:                                       ; preds = %if.end111
  %tmp67 = load i8*, i8** %gen_params, align 8
  %add.ptr114 = getelementptr inbounds i8, i8* %tmp67, i64 -1
  store i8* %add.ptr114, i8** %url_end, align 8
  br label %if.end118

if.else115:                                       ; preds = %if.end111
  %tmp68 = load i8*, i8** %url, align 8
  %tmp69 = load i8*, i8** %url, align 8
  %call116 = call i64 @strlen(i8* %tmp69) #7
  %add.ptr117 = getelementptr inbounds i8, i8* %tmp68, i64 %call116
  store i8* %add.ptr117, i8** %url_end, align 8
  br label %if.end118

if.end118:                                        ; preds = %if.else115, %if.then113
  br label %if.end122

if.else119:                                       ; preds = %if.end101
  %tmp70 = load i8*, i8** %url_end, align 8
  %call120 = call i8* @strchr(i8* %tmp70, i32 59) #7
  store i8* %call120, i8** %gen_params, align 8
  %tmp71 = load i8*, i8** %url_end, align 8
  %incdec.ptr121 = getelementptr inbounds i8, i8* %tmp71, i32 -1
  store i8* %incdec.ptr121, i8** %url_end, align 8
  br label %if.end122

if.end122:                                        ; preds = %if.else119, %if.end118
  %tmp72 = load i8*, i8** %gen_params, align 8
  %cmp123 = icmp ne i8* %tmp72, null
  br i1 %cmp123, label %if.then124, label %if.end130

if.then124:                                       ; preds = %if.end122
  %tmp73 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params125 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp73, i32 0, i32 2
  %tmp74 = load i8*, i8** %gen_params, align 8
  %call126 = call i32 @__osip_generic_param_parseall(%struct.osip_list* %gen_params125, i8* %tmp74)
  store i32 %call126, i32* %i, align 4
  %tmp75 = load i32, i32* %i, align 4
  %cmp127 = icmp ne i32 %tmp75, 0
  br i1 %cmp127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.then124
  %tmp76 = load i32, i32* %i, align 4
  store i32 %tmp76, i32* %retval
  br label %return

if.end129:                                        ; preds = %if.then124
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end122
  %tmp77 = load i8*, i8** %url_end, align 8
  %tmp78 = load i8*, i8** %url, align 8
  %sub.ptr.lhs.cast131 = ptrtoint i8* %tmp77 to i64
  %sub.ptr.rhs.cast132 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.sub133 = sub i64 %sub.ptr.lhs.cast131, %sub.ptr.rhs.cast132
  %add134 = add nsw i64 %sub.ptr.sub133, 2
  %cmp135 = icmp slt i64 %add134, 7
  br i1 %cmp135, label %if.then136, label %if.end137

if.then136:                                       ; preds = %if.end130
  store i32 -5, i32* %retval
  br label %return

if.end137:                                        ; preds = %if.end130
  %tmp79 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url138 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp79, i32 0, i32 1
  %call139 = call i32 @osip_uri_init(%struct.osip_uri** %url138)
  store i32 %call139, i32* %i, align 4
  %tmp80 = load i32, i32* %i, align 4
  %cmp140 = icmp ne i32 %tmp80, 0
  br i1 %cmp140, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end137
  %tmp81 = load i32, i32* %i, align 4
  store i32 %tmp81, i32* %retval
  br label %return

if.end142:                                        ; preds = %if.end137
  %tmp82 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool143 = icmp ne i8* (i64)* %tmp82, null
  br i1 %tobool143, label %cond.true144, label %cond.false150

cond.true144:                                     ; preds = %if.end142
  %tmp83 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp84 = load i8*, i8** %url_end, align 8
  %tmp85 = load i8*, i8** %url, align 8
  %sub.ptr.lhs.cast145 = ptrtoint i8* %tmp84 to i64
  %sub.ptr.rhs.cast146 = ptrtoint i8* %tmp85 to i64
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146
  %add148 = add nsw i64 %sub.ptr.sub147, 2
  %call149 = call i8* %tmp83(i64 %add148)
  br label %cond.end156

cond.false150:                                    ; preds = %if.end142
  %tmp86 = load i8*, i8** %url_end, align 8
  %tmp87 = load i8*, i8** %url, align 8
  %sub.ptr.lhs.cast151 = ptrtoint i8* %tmp86 to i64
  %sub.ptr.rhs.cast152 = ptrtoint i8* %tmp87 to i64
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152
  %add154 = add nsw i64 %sub.ptr.sub153, 2
  %call155 = call noalias i8* @malloc(i64 %add154) #8
  br label %cond.end156

cond.end156:                                      ; preds = %cond.false150, %cond.true144
  %cond157 = phi i8* [ %call149, %cond.true144 ], [ %call155, %cond.false150 ]
  store i8* %cond157, i8** %tmp, align 8
  %tmp88 = load i8*, i8** %tmp, align 8
  %cmp158 = icmp eq i8* %tmp88, null
  br i1 %cmp158, label %if.then159, label %if.end160

if.then159:                                       ; preds = %cond.end156
  store i32 -4, i32* %retval
  br label %return

if.end160:                                        ; preds = %cond.end156
  %tmp89 = load i8*, i8** %tmp, align 8
  %tmp90 = load i8*, i8** %url, align 8
  %tmp91 = load i8*, i8** %url_end, align 8
  %tmp92 = load i8*, i8** %url, align 8
  %sub.ptr.lhs.cast161 = ptrtoint i8* %tmp91 to i64
  %sub.ptr.rhs.cast162 = ptrtoint i8* %tmp92 to i64
  %sub.ptr.sub163 = sub i64 %sub.ptr.lhs.cast161, %sub.ptr.rhs.cast162
  %add164 = add nsw i64 %sub.ptr.sub163, 1
  %call165 = call i8* @osip_strncpy(i8* %tmp89, i8* %tmp90, i64 %add164)
  %tmp93 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url166 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp93, i32 0, i32 1
  %tmp94 = load %struct.osip_uri*, %struct.osip_uri** %url166, align 8
  %tmp95 = load i8*, i8** %tmp, align 8
  %call167 = call i32 @osip_uri_parse(%struct.osip_uri* %tmp94, i8* %tmp95)
  store i32 %call167, i32* %i, align 4
  %tmp96 = load i8*, i8** %tmp, align 8
  %cmp168 = icmp ne i8* %tmp96, null
  br i1 %cmp168, label %if.then169, label %if.end174

if.then169:                                       ; preds = %if.end160
  %tmp97 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool170 = icmp ne void (i8*)* %tmp97, null
  br i1 %tobool170, label %if.then171, label %if.else172

if.then171:                                       ; preds = %if.then169
  %tmp98 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp99 = load i8*, i8** %tmp, align 8
  call void %tmp98(i8* %tmp99)
  br label %if.end173

if.else172:                                       ; preds = %if.then169
  %tmp100 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp100) #8
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then171
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end160
  %tmp101 = load i32, i32* %i, align 4
  %cmp175 = icmp ne i32 %tmp101, 0
  br i1 %cmp175, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.end174
  %tmp102 = load i32, i32* %i, align 4
  store i32 %tmp102, i32* %retval
  br label %return

if.end177:                                        ; preds = %if.end174
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end177, %if.then176, %if.then159, %if.then141, %if.then136, %if.then128, %if.then96, %if.then84, %if.then58, %if.then55, %if.then51, %if.then37, %if.then22, %if.then7, %if.then
  %tmp103 = load i32, i32* %retval
  ret i32 %tmp103
}

; Function Attrs: nounwind uwtable
define void @osip_from_free(%struct.osip_from* %from) #0 {
entry:
  %from.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end18

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 1
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url, align 8
  %cmp1 = icmp ne %struct.osip_uri* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url3 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 1
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %url3, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp4)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %displayname, align 8
  %cmp5 = icmp ne i8* %tmp6, null
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.end4
  %tmp7 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp7, null
  br i1 %tobool, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then6
  %tmp8 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname8 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %displayname8, align 8
  call void %tmp8(i8* %tmp10)
  br label %if.end10

if.else:                                          ; preds = %if.then6
  %tmp11 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname9 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp11, i32 0, i32 0
  %tmp12 = load i8*, i8** %displayname9, align 8
  call void @free(i8* %tmp12) #8
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end4
  %tmp13 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp13, i32 0, i32 2
  call void @osip_uri_param_freelist(%struct.osip_list* %gen_params)
  %tmp14 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp12 = icmp ne %struct.osip_from* %tmp14, null
  br i1 %cmp12, label %if.then13, label %if.end18

if.then13:                                        ; preds = %if.end11
  %tmp15 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool14 = icmp ne void (i8*)* %tmp15, null
  br i1 %tobool14, label %if.then15, label %if.else16

if.then15:                                        ; preds = %if.then13
  %tmp16 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp17 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %tmp18 = bitcast %struct.osip_from* %tmp17 to i8*
  call void %tmp16(i8* %tmp18)
  br label %if.end17

if.else16:                                        ; preds = %if.then13
  %tmp19 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %tmp20 = bitcast %struct.osip_from* %tmp19 to i8*
  call void @free(i8* %tmp20) #8
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then15
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end11, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_from* @osip_message_get_from(%struct.osip_message* %sip) #0 {
entry:
  %sip.addr = alloca %struct.osip_message*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %from = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp, i32 0, i32 20
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from, align 8
  ret %struct.osip_from* %tmp1
}

; Function Attrs: nounwind uwtable
define i32 @__osip_generic_param_parseall(%struct.osip_list* %gen_params, i8* %params) #0 {
entry:
  %retval = alloca i32, align 4
  %gen_params.addr = alloca %struct.osip_list*, align 8
  %params.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %pname = alloca i8*, align 8
  %pvalue = alloca i8*, align 8
  %comma = alloca i8*, align 8
  %equal = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %tmp132 = alloca i8*, align 8
  store %struct.osip_list* %gen_params, %struct.osip_list** %gen_params.addr, align 8
  store i8* %params, i8** %params.addr, align 8
  %tmp1 = load i8*, i8** %params.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp1, i64 1
  %call = call i8* @next_separator(i8* %add.ptr, i32 61, i32 59)
  store i8* %call, i8** %equal, align 8
  %tmp2 = load i8*, i8** %params.addr, align 8
  %add.ptr1 = getelementptr inbounds i8, i8* %tmp2, i64 1
  %call2 = call i8* @strchr(i8* %add.ptr1, i32 59) #7
  store i8* %call2, i8** %comma, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end105, %entry
  %tmp3 = load i8*, i8** %comma, align 8
  %cmp = icmp ne i8* %tmp3, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp4 = load i8*, i8** %equal, align 8
  %cmp3 = icmp eq i8* %tmp4, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %tmp5 = load i8*, i8** %comma, align 8
  store i8* %tmp5, i8** %equal, align 8
  store i8* null, i8** %pvalue, align 8
  br label %if.end38

if.else:                                          ; preds = %while.body
  %tmp6 = load i8*, i8** %equal, align 8
  %add.ptr4 = getelementptr inbounds i8, i8* %tmp6, i64 1
  store i8* %add.ptr4, i8** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %tmp7 = load i8*, i8** %tmp, align 8
  %tmp8 = load i8, i8* %tmp7, align 1
  %conv = sext i8 %tmp8 to i32
  %cmp5 = icmp eq i32 %conv, 9
  br i1 %cmp5, label %for.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.cond
  %tmp9 = load i8*, i8** %tmp, align 8
  %tmp10 = load i8, i8* %tmp9, align 1
  %conv7 = sext i8 %tmp10 to i32
  %cmp8 = icmp eq i32 %conv7, 32
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %lor.lhs.false, %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp11 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp11, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.lhs.false
  store i8* null, i8** %pvalue, align 8
  %tmp12 = load i8*, i8** %tmp, align 8
  %tmp13 = load i8, i8* %tmp12, align 1
  %conv10 = sext i8 %tmp13 to i32
  %cmp11 = icmp ne i32 %conv10, 44
  br i1 %cmp11, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %for.end
  %tmp14 = load i8*, i8** %tmp, align 8
  %tmp15 = load i8, i8* %tmp14, align 1
  %conv13 = sext i8 %tmp15 to i32
  %cmp14 = icmp ne i32 %conv13, 0
  br i1 %cmp14, label %if.then16, label %if.end37

if.then16:                                        ; preds = %land.lhs.true
  %tmp16 = load i8*, i8** %comma, align 8
  %tmp17 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp17 = icmp slt i64 %sub.ptr.sub, 2
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %if.then16
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then16
  %tmp18 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp18, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp19 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp20 = load i8*, i8** %comma, align 8
  %tmp21 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast20 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.rhs.cast21 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %call23 = call i8* %tmp19(i64 %sub.ptr.sub22)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp22 = load i8*, i8** %comma, align 8
  %tmp23 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast24 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %call27 = call noalias i8* @malloc(i64 %sub.ptr.sub26) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call23, %cond.true ], [ %call27, %cond.false ]
  store i8* %cond, i8** %pvalue, align 8
  %tmp24 = load i8*, i8** %pvalue, align 8
  %cmp28 = icmp eq i8* %tmp24, null
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end31:                                         ; preds = %cond.end
  %tmp25 = load i8*, i8** %pvalue, align 8
  %tmp26 = load i8*, i8** %equal, align 8
  %add.ptr32 = getelementptr inbounds i8, i8* %tmp26, i64 1
  %tmp27 = load i8*, i8** %comma, align 8
  %tmp28 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast33 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.rhs.cast34 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34
  %sub = sub nsw i64 %sub.ptr.sub35, 1
  %call36 = call i8* @osip_strncpy(i8* %tmp25, i8* %add.ptr32, i64 %sub)
  br label %if.end37

if.end37:                                         ; preds = %if.end31, %land.lhs.true, %for.end
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then
  %tmp29 = load i8*, i8** %equal, align 8
  %tmp30 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 2
  br i1 %cmp42, label %if.then44, label %if.end53

if.then44:                                        ; preds = %if.end38
  %tmp31 = load i8*, i8** %pvalue, align 8
  %cmp45 = icmp ne i8* %tmp31, null
  br i1 %cmp45, label %if.then47, label %if.end52

if.then47:                                        ; preds = %if.then44
  %tmp32 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool48 = icmp ne void (i8*)* %tmp32, null
  br i1 %tobool48, label %if.then49, label %if.else50

if.then49:                                        ; preds = %if.then47
  %tmp33 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp34 = load i8*, i8** %pvalue, align 8
  call void %tmp33(i8* %tmp34)
  br label %if.end51

if.else50:                                        ; preds = %if.then47
  %tmp35 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp35) #8
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then49
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then44
  store i32 -5, i32* %retval
  br label %return

if.end53:                                         ; preds = %if.end38
  %tmp36 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool54 = icmp ne i8* (i64)* %tmp36, null
  br i1 %tobool54, label %cond.true55, label %cond.false60

cond.true55:                                      ; preds = %if.end53
  %tmp37 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp38 = load i8*, i8** %equal, align 8
  %tmp39 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.rhs.cast57 = ptrtoint i8* %tmp39 to i64
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57
  %call59 = call i8* %tmp37(i64 %sub.ptr.sub58)
  br label %cond.end65

cond.false60:                                     ; preds = %if.end53
  %tmp40 = load i8*, i8** %equal, align 8
  %tmp41 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast61 = ptrtoint i8* %tmp40 to i64
  %sub.ptr.rhs.cast62 = ptrtoint i8* %tmp41 to i64
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62
  %call64 = call noalias i8* @malloc(i64 %sub.ptr.sub63) #8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false60, %cond.true55
  %cond66 = phi i8* [ %call59, %cond.true55 ], [ %call64, %cond.false60 ]
  store i8* %cond66, i8** %pname, align 8
  %tmp42 = load i8*, i8** %pname, align 8
  %cmp67 = icmp eq i8* %tmp42, null
  br i1 %cmp67, label %if.then69, label %if.end78

if.then69:                                        ; preds = %cond.end65
  %tmp43 = load i8*, i8** %pvalue, align 8
  %cmp70 = icmp ne i8* %tmp43, null
  br i1 %cmp70, label %if.then72, label %if.end77

if.then72:                                        ; preds = %if.then69
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool73 = icmp ne void (i8*)* %tmp44, null
  br i1 %tobool73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then72
  %tmp45 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp46 = load i8*, i8** %pvalue, align 8
  call void %tmp45(i8* %tmp46)
  br label %if.end76

if.else75:                                        ; preds = %if.then72
  %tmp47 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp47) #8
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then69
  store i32 -4, i32* %retval
  br label %return

if.end78:                                         ; preds = %cond.end65
  %tmp48 = load i8*, i8** %pname, align 8
  %tmp49 = load i8*, i8** %params.addr, align 8
  %add.ptr79 = getelementptr inbounds i8, i8* %tmp49, i64 1
  %tmp50 = load i8*, i8** %equal, align 8
  %tmp51 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast80 = ptrtoint i8* %tmp50 to i64
  %sub.ptr.rhs.cast81 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.sub82 = sub i64 %sub.ptr.lhs.cast80, %sub.ptr.rhs.cast81
  %sub83 = sub nsw i64 %sub.ptr.sub82, 1
  %call84 = call i8* @osip_strncpy(i8* %tmp48, i8* %add.ptr79, i64 %sub83)
  %tmp52 = load %struct.osip_list*, %struct.osip_list** %gen_params.addr, align 8
  %tmp53 = load i8*, i8** %pname, align 8
  %tmp54 = load i8*, i8** %pvalue, align 8
  %call85 = call i32 @osip_uri_param_add(%struct.osip_list* %tmp52, i8* %tmp53, i8* %tmp54)
  store i32 %call85, i32* %i, align 4
  %tmp55 = load i32, i32* %i, align 4
  %cmp86 = icmp ne i32 %tmp55, 0
  br i1 %cmp86, label %if.then88, label %if.end105

if.then88:                                        ; preds = %if.end78
  %tmp56 = load i8*, i8** %pname, align 8
  %cmp89 = icmp ne i8* %tmp56, null
  br i1 %cmp89, label %if.then91, label %if.end96

if.then91:                                        ; preds = %if.then88
  %tmp57 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool92 = icmp ne void (i8*)* %tmp57, null
  br i1 %tobool92, label %if.then93, label %if.else94

if.then93:                                        ; preds = %if.then91
  %tmp58 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp59 = load i8*, i8** %pname, align 8
  call void %tmp58(i8* %tmp59)
  br label %if.end95

if.else94:                                        ; preds = %if.then91
  %tmp60 = load i8*, i8** %pname, align 8
  call void @free(i8* %tmp60) #8
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then93
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then88
  %tmp61 = load i8*, i8** %pvalue, align 8
  %cmp97 = icmp ne i8* %tmp61, null
  br i1 %cmp97, label %if.then99, label %if.end104

if.then99:                                        ; preds = %if.end96
  %tmp62 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool100 = icmp ne void (i8*)* %tmp62, null
  br i1 %tobool100, label %if.then101, label %if.else102

if.then101:                                       ; preds = %if.then99
  %tmp63 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp64 = load i8*, i8** %pvalue, align 8
  call void %tmp63(i8* %tmp64)
  br label %if.end103

if.else102:                                       ; preds = %if.then99
  %tmp65 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp65) #8
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then101
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end96
  store i32 -4, i32* %retval
  br label %return

if.end105:                                        ; preds = %if.end78
  %tmp66 = load i8*, i8** %comma, align 8
  store i8* %tmp66, i8** %params.addr, align 8
  %tmp67 = load i8*, i8** %params.addr, align 8
  %add.ptr106 = getelementptr inbounds i8, i8* %tmp67, i64 1
  %call107 = call i8* @next_separator(i8* %add.ptr106, i32 61, i32 59)
  store i8* %call107, i8** %equal, align 8
  %tmp68 = load i8*, i8** %params.addr, align 8
  %add.ptr108 = getelementptr inbounds i8, i8* %tmp68, i64 1
  %call109 = call i8* @strchr(i8* %add.ptr108, i32 59) #7
  store i8* %call109, i8** %comma, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp69 = load i8*, i8** %params.addr, align 8
  %tmp70 = load i8*, i8** %params.addr, align 8
  %call110 = call i64 @strlen(i8* %tmp70) #7
  %add.ptr111 = getelementptr inbounds i8, i8* %tmp69, i64 %call110
  store i8* %add.ptr111, i8** %comma, align 8
  %tmp71 = load i8*, i8** %equal, align 8
  %cmp112 = icmp eq i8* %tmp71, null
  br i1 %cmp112, label %if.then114, label %if.else130

if.then114:                                       ; preds = %while.end
  %tmp72 = load i8*, i8** %comma, align 8
  store i8* %tmp72, i8** %equal, align 8
  store i8* null, i8** %pvalue, align 8
  %tmp73 = load i8*, i8** %equal, align 8
  %tmp74 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast115 = ptrtoint i8* %tmp73 to i64
  %sub.ptr.rhs.cast116 = ptrtoint i8* %tmp74 to i64
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116
  %cmp118 = icmp slt i64 %sub.ptr.sub117, 2
  br i1 %cmp118, label %if.then120, label %if.end129

if.then120:                                       ; preds = %if.then114
  %tmp75 = load i8*, i8** %pvalue, align 8
  %cmp121 = icmp ne i8* %tmp75, null
  br i1 %cmp121, label %if.then123, label %if.end128

if.then123:                                       ; preds = %if.then120
  %tmp76 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool124 = icmp ne void (i8*)* %tmp76, null
  br i1 %tobool124, label %if.then125, label %if.else126

if.then125:                                       ; preds = %if.then123
  %tmp77 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp78 = load i8*, i8** %pvalue, align 8
  call void %tmp77(i8* %tmp78)
  br label %if.end127

if.else126:                                       ; preds = %if.then123
  %tmp79 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp79) #8
  br label %if.end127

if.end127:                                        ; preds = %if.else126, %if.then125
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then120
  store i32 0, i32* %retval
  br label %return

if.end129:                                        ; preds = %if.then114
  br label %if.end185

if.else130:                                       ; preds = %while.end
  %tmp80 = load i8*, i8** %equal, align 8
  %add.ptr133 = getelementptr inbounds i8, i8* %tmp80, i64 1
  store i8* %add.ptr133, i8** %tmp132, align 8
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc143, %if.else130
  %tmp81 = load i8*, i8** %tmp132, align 8
  %tmp82 = load i8, i8* %tmp81, align 1
  %conv135 = sext i8 %tmp82 to i32
  %cmp136 = icmp eq i32 %conv135, 9
  br i1 %cmp136, label %for.body142, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %for.cond134
  %tmp83 = load i8*, i8** %tmp132, align 8
  %tmp84 = load i8, i8* %tmp83, align 1
  %conv139 = sext i8 %tmp84 to i32
  %cmp140 = icmp eq i32 %conv139, 32
  br i1 %cmp140, label %for.body142, label %for.end145

for.body142:                                      ; preds = %lor.lhs.false138, %for.cond134
  br label %for.inc143

for.inc143:                                       ; preds = %for.body142
  %tmp85 = load i8*, i8** %tmp132, align 8
  %incdec.ptr144 = getelementptr inbounds i8, i8* %tmp85, i32 1
  store i8* %incdec.ptr144, i8** %tmp132, align 8
  br label %for.cond134

for.end145:                                       ; preds = %lor.lhs.false138
  store i8* null, i8** %pvalue, align 8
  %tmp86 = load i8*, i8** %tmp132, align 8
  %tmp87 = load i8, i8* %tmp86, align 1
  %conv146 = sext i8 %tmp87 to i32
  %cmp147 = icmp ne i32 %conv146, 44
  br i1 %cmp147, label %land.lhs.true149, label %if.end184

land.lhs.true149:                                 ; preds = %for.end145
  %tmp88 = load i8*, i8** %tmp132, align 8
  %tmp89 = load i8, i8* %tmp88, align 1
  %conv150 = sext i8 %tmp89 to i32
  %cmp151 = icmp ne i32 %conv150, 0
  br i1 %cmp151, label %if.then153, label %if.end184

if.then153:                                       ; preds = %land.lhs.true149
  %tmp90 = load i8*, i8** %comma, align 8
  %tmp91 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast154 = ptrtoint i8* %tmp90 to i64
  %sub.ptr.rhs.cast155 = ptrtoint i8* %tmp91 to i64
  %sub.ptr.sub156 = sub i64 %sub.ptr.lhs.cast154, %sub.ptr.rhs.cast155
  %cmp157 = icmp slt i64 %sub.ptr.sub156, 2
  br i1 %cmp157, label %if.then159, label %if.end160

if.then159:                                       ; preds = %if.then153
  store i32 -5, i32* %retval
  br label %return

if.end160:                                        ; preds = %if.then153
  %tmp92 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool161 = icmp ne i8* (i64)* %tmp92, null
  br i1 %tobool161, label %cond.true162, label %cond.false167

cond.true162:                                     ; preds = %if.end160
  %tmp93 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp94 = load i8*, i8** %comma, align 8
  %tmp95 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast163 = ptrtoint i8* %tmp94 to i64
  %sub.ptr.rhs.cast164 = ptrtoint i8* %tmp95 to i64
  %sub.ptr.sub165 = sub i64 %sub.ptr.lhs.cast163, %sub.ptr.rhs.cast164
  %call166 = call i8* %tmp93(i64 %sub.ptr.sub165)
  br label %cond.end172

cond.false167:                                    ; preds = %if.end160
  %tmp96 = load i8*, i8** %comma, align 8
  %tmp97 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast168 = ptrtoint i8* %tmp96 to i64
  %sub.ptr.rhs.cast169 = ptrtoint i8* %tmp97 to i64
  %sub.ptr.sub170 = sub i64 %sub.ptr.lhs.cast168, %sub.ptr.rhs.cast169
  %call171 = call noalias i8* @malloc(i64 %sub.ptr.sub170) #8
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false167, %cond.true162
  %cond173 = phi i8* [ %call166, %cond.true162 ], [ %call171, %cond.false167 ]
  store i8* %cond173, i8** %pvalue, align 8
  %tmp98 = load i8*, i8** %pvalue, align 8
  %cmp174 = icmp eq i8* %tmp98, null
  br i1 %cmp174, label %if.then176, label %if.end177

if.then176:                                       ; preds = %cond.end172
  store i32 -4, i32* %retval
  br label %return

if.end177:                                        ; preds = %cond.end172
  %tmp99 = load i8*, i8** %pvalue, align 8
  %tmp100 = load i8*, i8** %equal, align 8
  %add.ptr178 = getelementptr inbounds i8, i8* %tmp100, i64 1
  %tmp101 = load i8*, i8** %comma, align 8
  %tmp102 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast179 = ptrtoint i8* %tmp101 to i64
  %sub.ptr.rhs.cast180 = ptrtoint i8* %tmp102 to i64
  %sub.ptr.sub181 = sub i64 %sub.ptr.lhs.cast179, %sub.ptr.rhs.cast180
  %sub182 = sub nsw i64 %sub.ptr.sub181, 1
  %call183 = call i8* @osip_strncpy(i8* %tmp99, i8* %add.ptr178, i64 %sub182)
  br label %if.end184

if.end184:                                        ; preds = %if.end177, %land.lhs.true149, %for.end145
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end129
  %tmp103 = load i8*, i8** %equal, align 8
  %tmp104 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast186 = ptrtoint i8* %tmp103 to i64
  %sub.ptr.rhs.cast187 = ptrtoint i8* %tmp104 to i64
  %sub.ptr.sub188 = sub i64 %sub.ptr.lhs.cast186, %sub.ptr.rhs.cast187
  %cmp189 = icmp slt i64 %sub.ptr.sub188, 2
  br i1 %cmp189, label %if.then191, label %if.end200

if.then191:                                       ; preds = %if.end185
  %tmp105 = load i8*, i8** %pvalue, align 8
  %cmp192 = icmp ne i8* %tmp105, null
  br i1 %cmp192, label %if.then194, label %if.end199

if.then194:                                       ; preds = %if.then191
  %tmp106 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool195 = icmp ne void (i8*)* %tmp106, null
  br i1 %tobool195, label %if.then196, label %if.else197

if.then196:                                       ; preds = %if.then194
  %tmp107 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp108 = load i8*, i8** %pvalue, align 8
  call void %tmp107(i8* %tmp108)
  br label %if.end198

if.else197:                                       ; preds = %if.then194
  %tmp109 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp109) #8
  br label %if.end198

if.end198:                                        ; preds = %if.else197, %if.then196
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then191
  store i32 -5, i32* %retval
  br label %return

if.end200:                                        ; preds = %if.end185
  %tmp110 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool201 = icmp ne i8* (i64)* %tmp110, null
  br i1 %tobool201, label %cond.true202, label %cond.false207

cond.true202:                                     ; preds = %if.end200
  %tmp111 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp112 = load i8*, i8** %equal, align 8
  %tmp113 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast203 = ptrtoint i8* %tmp112 to i64
  %sub.ptr.rhs.cast204 = ptrtoint i8* %tmp113 to i64
  %sub.ptr.sub205 = sub i64 %sub.ptr.lhs.cast203, %sub.ptr.rhs.cast204
  %call206 = call i8* %tmp111(i64 %sub.ptr.sub205)
  br label %cond.end212

cond.false207:                                    ; preds = %if.end200
  %tmp114 = load i8*, i8** %equal, align 8
  %tmp115 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast208 = ptrtoint i8* %tmp114 to i64
  %sub.ptr.rhs.cast209 = ptrtoint i8* %tmp115 to i64
  %sub.ptr.sub210 = sub i64 %sub.ptr.lhs.cast208, %sub.ptr.rhs.cast209
  %call211 = call noalias i8* @malloc(i64 %sub.ptr.sub210) #8
  br label %cond.end212

cond.end212:                                      ; preds = %cond.false207, %cond.true202
  %cond213 = phi i8* [ %call206, %cond.true202 ], [ %call211, %cond.false207 ]
  store i8* %cond213, i8** %pname, align 8
  %tmp116 = load i8*, i8** %pname, align 8
  %cmp214 = icmp eq i8* %tmp116, null
  br i1 %cmp214, label %if.then216, label %if.end225

if.then216:                                       ; preds = %cond.end212
  %tmp117 = load i8*, i8** %pvalue, align 8
  %cmp217 = icmp ne i8* %tmp117, null
  br i1 %cmp217, label %if.then219, label %if.end224

if.then219:                                       ; preds = %if.then216
  %tmp118 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool220 = icmp ne void (i8*)* %tmp118, null
  br i1 %tobool220, label %if.then221, label %if.else222

if.then221:                                       ; preds = %if.then219
  %tmp119 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp120 = load i8*, i8** %pvalue, align 8
  call void %tmp119(i8* %tmp120)
  br label %if.end223

if.else222:                                       ; preds = %if.then219
  %tmp121 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp121) #8
  br label %if.end223

if.end223:                                        ; preds = %if.else222, %if.then221
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.then216
  store i32 -4, i32* %retval
  br label %return

if.end225:                                        ; preds = %cond.end212
  %tmp122 = load i8*, i8** %pname, align 8
  %tmp123 = load i8*, i8** %params.addr, align 8
  %add.ptr226 = getelementptr inbounds i8, i8* %tmp123, i64 1
  %tmp124 = load i8*, i8** %equal, align 8
  %tmp125 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast227 = ptrtoint i8* %tmp124 to i64
  %sub.ptr.rhs.cast228 = ptrtoint i8* %tmp125 to i64
  %sub.ptr.sub229 = sub i64 %sub.ptr.lhs.cast227, %sub.ptr.rhs.cast228
  %sub230 = sub nsw i64 %sub.ptr.sub229, 1
  %call231 = call i8* @osip_strncpy(i8* %tmp122, i8* %add.ptr226, i64 %sub230)
  %tmp126 = load %struct.osip_list*, %struct.osip_list** %gen_params.addr, align 8
  %tmp127 = load i8*, i8** %pname, align 8
  %tmp128 = load i8*, i8** %pvalue, align 8
  %call232 = call i32 @osip_uri_param_add(%struct.osip_list* %tmp126, i8* %tmp127, i8* %tmp128)
  store i32 %call232, i32* %i, align 4
  %tmp129 = load i32, i32* %i, align 4
  %cmp233 = icmp ne i32 %tmp129, 0
  br i1 %cmp233, label %if.then235, label %if.end252

if.then235:                                       ; preds = %if.end225
  %tmp130 = load i8*, i8** %pname, align 8
  %cmp236 = icmp ne i8* %tmp130, null
  br i1 %cmp236, label %if.then238, label %if.end243

if.then238:                                       ; preds = %if.then235
  %tmp131 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool239 = icmp ne void (i8*)* %tmp131, null
  br i1 %tobool239, label %if.then240, label %if.else241

if.then240:                                       ; preds = %if.then238
  %tmp133 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp134 = load i8*, i8** %pname, align 8
  call void %tmp133(i8* %tmp134)
  br label %if.end242

if.else241:                                       ; preds = %if.then238
  %tmp135 = load i8*, i8** %pname, align 8
  call void @free(i8* %tmp135) #8
  br label %if.end242

if.end242:                                        ; preds = %if.else241, %if.then240
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then235
  %tmp136 = load i8*, i8** %pvalue, align 8
  %cmp244 = icmp ne i8* %tmp136, null
  br i1 %cmp244, label %if.then246, label %if.end251

if.then246:                                       ; preds = %if.end243
  %tmp137 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool247 = icmp ne void (i8*)* %tmp137, null
  br i1 %tobool247, label %if.then248, label %if.else249

if.then248:                                       ; preds = %if.then246
  %tmp138 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp139 = load i8*, i8** %pvalue, align 8
  call void %tmp138(i8* %tmp139)
  br label %if.end250

if.else249:                                       ; preds = %if.then246
  %tmp140 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp140) #8
  br label %if.end250

if.end250:                                        ; preds = %if.else249, %if.then248
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.end243
  store i32 -4, i32* %retval
  br label %return

if.end252:                                        ; preds = %if.end225
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end252, %if.end251, %if.end224, %if.end199, %if.then176, %if.then159, %if.end128, %if.end104, %if.end77, %if.end52, %if.then30, %if.then19
  %tmp141 = load i32, i32* %retval
  ret i32 %tmp141
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_to_str(%struct.osip_from* %from, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca i8**, align 8
  %url = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i64, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %plen = alloca i64, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url1 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 1
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %url1, align 8
  %cmp2 = icmp eq %struct.osip_uri* %tmp4, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url3 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp5, i32 0, i32 1
  %tmp6 = load %struct.osip_uri*, %struct.osip_uri** %url3, align 8
  %call = call i32 @osip_uri_to_str(%struct.osip_uri* %tmp6, i8** %url)
  store i32 %call, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp7, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %displayname, align 8
  %cmp7 = icmp eq i8* %tmp10, null
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end6
  %tmp11 = load i8*, i8** %url, align 8
  %call9 = call i64 @strlen(i8* %tmp11) #7
  %add = add i64 %call9, 5
  store i64 %add, i64* %len, align 8
  br label %if.end15

if.else:                                          ; preds = %if.end6
  %tmp12 = load i8*, i8** %url, align 8
  %call10 = call i64 @strlen(i8* %tmp12) #7
  %tmp13 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname11 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %displayname11, align 8
  %call12 = call i64 @strlen(i8* %tmp14) #7
  %add13 = add i64 %call10, %call12
  %add14 = add i64 %add13, 5
  store i64 %add14, i64* %len, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %tmp15 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp15, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end15
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp17 = load i64, i64* %len, align 8
  %call16 = call i8* %tmp16(i64 %tmp17)
  br label %cond.end

cond.false:                                       ; preds = %if.end15
  %tmp18 = load i64, i64* %len, align 8
  %call17 = call noalias i8* @malloc(i64 %tmp18) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call16, %cond.true ], [ %call17, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp19 = load i8*, i8** %buf, align 8
  %cmp18 = icmp eq i8* %tmp19, null
  br i1 %cmp18, label %if.then19, label %if.end27

if.then19:                                        ; preds = %cond.end
  %tmp20 = load i8*, i8** %url, align 8
  %cmp20 = icmp ne i8* %tmp20, null
  br i1 %cmp20, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.then19
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool22 = icmp ne void (i8*)* %tmp21, null
  br i1 %tobool22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.then21
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp23 = load i8*, i8** %url, align 8
  call void %tmp22(i8* %tmp23)
  br label %if.end25

if.else24:                                        ; preds = %if.then21
  %tmp24 = load i8*, i8** %url, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then19
  store i32 -4, i32* %retval
  br label %return

if.end27:                                         ; preds = %cond.end
  %tmp25 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname28 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp25, i32 0, i32 0
  %tmp26 = load i8*, i8** %displayname28, align 8
  %cmp29 = icmp ne i8* %tmp26, null
  br i1 %cmp29, label %if.then30, label %if.else33

if.then30:                                        ; preds = %if.end27
  %tmp27 = load i8*, i8** %buf, align 8
  %tmp28 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname31 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp28, i32 0, i32 0
  %tmp29 = load i8*, i8** %displayname31, align 8
  %tmp30 = load i8*, i8** %url, align 8
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str312, i32 0, i32 0), i8* %tmp29, i8* %tmp30) #8
  br label %if.end35

if.else33:                                        ; preds = %if.end27
  %tmp31 = load i8*, i8** %buf, align 8
  %tmp32 = load i8*, i8** %url, align 8
  %call34 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str1313, i32 0, i32 0), i8* %tmp32) #8
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then30
  %tmp33 = load i8*, i8** %url, align 8
  %cmp36 = icmp ne i8* %tmp33, null
  br i1 %cmp36, label %if.then37, label %if.end42

if.then37:                                        ; preds = %if.end35
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool38 = icmp ne void (i8*)* %tmp34, null
  br i1 %tobool38, label %if.then39, label %if.else40

if.then39:                                        ; preds = %if.then37
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp36 = load i8*, i8** %url, align 8
  call void %tmp35(i8* %tmp36)
  br label %if.end41

if.else40:                                        ; preds = %if.then37
  %tmp37 = load i8*, i8** %url, align 8
  call void @free(i8* %tmp37) #8
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then39
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end35
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end81, %if.end42
  %tmp38 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp38, i32 0, i32 2
  %tmp39 = load i32, i32* %pos, align 4
  %call43 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp39)
  %tobool44 = icmp ne i32 %call43, 0
  %lnot = xor i1 %tobool44, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp40 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params45 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp40, i32 0, i32 2
  %tmp41 = load i32, i32* %pos, align 4
  %call46 = call i8* @osip_list_get(%struct.osip_list* %gen_params45, i32 %tmp41)
  %tmp42 = bitcast i8* %call46 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp42, %struct.osip_uri_param** %u_param, align 8
  %tmp43 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp43, i32 0, i32 1
  %tmp44 = load i8*, i8** %gvalue, align 8
  %cmp47 = icmp eq i8* %tmp44, null
  br i1 %cmp47, label %if.then48, label %if.else51

if.then48:                                        ; preds = %while.body
  %tmp45 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp45, i32 0, i32 0
  %tmp46 = load i8*, i8** %gname, align 8
  %call49 = call i64 @strlen(i8* %tmp46) #7
  %add50 = add i64 %call49, 2
  store i64 %add50, i64* %plen, align 8
  br label %if.end58

if.else51:                                        ; preds = %while.body
  %tmp47 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname52 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp47, i32 0, i32 0
  %tmp48 = load i8*, i8** %gname52, align 8
  %call53 = call i64 @strlen(i8* %tmp48) #7
  %tmp49 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue54 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp49, i32 0, i32 1
  %tmp50 = load i8*, i8** %gvalue54, align 8
  %call55 = call i64 @strlen(i8* %tmp50) #7
  %add56 = add i64 %call53, %call55
  %add57 = add i64 %add56, 3
  store i64 %add57, i64* %plen, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.else51, %if.then48
  %tmp51 = load i64, i64* %len, align 8
  %tmp52 = load i64, i64* %plen, align 8
  %add59 = add i64 %tmp51, %tmp52
  store i64 %add59, i64* %len, align 8
  %tmp53 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool60 = icmp ne i8* (i8*, i64)* %tmp53, null
  br i1 %tobool60, label %cond.true61, label %cond.false63

cond.true61:                                      ; preds = %if.end58
  %tmp54 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp55 = load i8*, i8** %buf, align 8
  %tmp56 = load i64, i64* %len, align 8
  %call62 = call i8* %tmp54(i8* %tmp55, i64 %tmp56)
  br label %cond.end65

cond.false63:                                     ; preds = %if.end58
  %tmp57 = load i8*, i8** %buf, align 8
  %tmp58 = load i64, i64* %len, align 8
  %call64 = call i8* @realloc(i8* %tmp57, i64 %tmp58) #8
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false63, %cond.true61
  %cond66 = phi i8* [ %call62, %cond.true61 ], [ %call64, %cond.false63 ]
  store i8* %cond66, i8** %buf, align 8
  %tmp59 = load i8*, i8** %buf, align 8
  store i8* %tmp59, i8** %tmp, align 8
  %tmp60 = load i8*, i8** %tmp, align 8
  %tmp61 = load i8*, i8** %tmp, align 8
  %call67 = call i64 @strlen(i8* %tmp61) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp60, i64 %call67
  store i8* %add.ptr, i8** %tmp, align 8
  %tmp62 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue68 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp62, i32 0, i32 1
  %tmp63 = load i8*, i8** %gvalue68, align 8
  %cmp69 = icmp eq i8* %tmp63, null
  br i1 %cmp69, label %if.then70, label %if.else73

if.then70:                                        ; preds = %cond.end65
  %tmp64 = load i8*, i8** %tmp, align 8
  %tmp65 = load i64, i64* %len, align 8
  %tmp66 = load i8*, i8** %tmp, align 8
  %tmp67 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp66 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp67 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp65, %sub.ptr.sub
  %tmp68 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname71 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp68, i32 0, i32 0
  %tmp69 = load i8*, i8** %gname71, align 8
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp64, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2314, i32 0, i32 0), i8* %tmp69) #8
  br label %if.end81

if.else73:                                        ; preds = %cond.end65
  %tmp70 = load i8*, i8** %tmp, align 8
  %tmp71 = load i64, i64* %len, align 8
  %tmp72 = load i8*, i8** %tmp, align 8
  %tmp73 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast74 = ptrtoint i8* %tmp72 to i64
  %sub.ptr.rhs.cast75 = ptrtoint i8* %tmp73 to i64
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75
  %sub77 = sub i64 %tmp71, %sub.ptr.sub76
  %tmp74 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname78 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp74, i32 0, i32 0
  %tmp75 = load i8*, i8** %gname78, align 8
  %tmp76 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue79 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp76, i32 0, i32 1
  %tmp77 = load i8*, i8** %gvalue79, align 8
  %call80 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp70, i64 %sub77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str3315, i32 0, i32 0), i8* %tmp75, i8* %tmp77) #8
  br label %if.end81

if.end81:                                         ; preds = %if.else73, %if.then70
  %tmp78 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp78, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp79 = load i8*, i8** %buf, align 8
  %tmp80 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp79, i8** %tmp80, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.end26, %if.then5, %if.then
  %tmp81 = load i32, i32* %retval
  ret i32 %tmp81
}

; Function Attrs: nounwind uwtable
define i8* @osip_from_get_displayname(%struct.osip_from* %from) #0 {
entry:
  %retval = alloca i8*, align 8
  %from.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %displayname, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_from_set_displayname(%struct.osip_from* %from, i8* %displayname) #0 {
entry:
  %from.addr = alloca %struct.osip_from*, align 8
  %displayname.addr = alloca i8*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store i8* %displayname, i8** %displayname.addr, align 8
  %tmp = load i8*, i8** %displayname.addr, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname1 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %displayname1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.osip_uri* @osip_from_get_url(%struct.osip_from* %from) #0 {
entry:
  %retval = alloca %struct.osip_uri*, align 8
  %from.addr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.osip_uri* null, %struct.osip_uri** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 1
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url, align 8
  store %struct.osip_uri* %tmp2, %struct.osip_uri** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load %struct.osip_uri*, %struct.osip_uri** %retval
  ret %struct.osip_uri* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_from_set_url(%struct.osip_from* %from, %struct.osip_uri* %url) #0 {
entry:
  %from.addr = alloca %struct.osip_from*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url1 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp1, i32 0, i32 1
  store %struct.osip_uri* %tmp, %struct.osip_uri** %url1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_param_get(%struct.osip_from* %from, i32 %pos, %struct.osip_uri_param** %fparam) #0 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.osip_from*, align 8
  %pos.addr = alloca i32, align 4
  %fparam.addr = alloca %struct.osip_uri_param**, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_uri_param** %fparam, %struct.osip_uri_param*** %fparam.addr, align 8
  %tmp = load %struct.osip_uri_param**, %struct.osip_uri_param*** %fparam.addr, align 8
  store %struct.osip_uri_param* null, %struct.osip_uri_param** %tmp, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp2, i32 0, i32 2
  %call = call i32 @osip_list_size(%struct.osip_list* %gen_params)
  %tmp3 = load i32, i32* %pos.addr, align 4
  %cmp1 = icmp sle i32 %call, %tmp3
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params4 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp4, i32 0, i32 2
  %tmp5 = load i32, i32* %pos.addr, align 4
  %call5 = call i8* @osip_list_get(%struct.osip_list* %gen_params4, i32 %tmp5)
  %tmp6 = bitcast i8* %call5 to %struct.osip_uri_param*
  %tmp7 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %fparam.addr, align 8
  store %struct.osip_uri_param* %tmp6, %struct.osip_uri_param** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_clone(%struct.osip_from* %from, %struct.osip_from** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.osip_from*, align 8
  %dest.addr = alloca %struct.osip_from**, align 8
  %i = alloca i32, align 4
  %fr = alloca %struct.osip_from*, align 8
  store %struct.osip_from* %from, %struct.osip_from** %from.addr, align 8
  store %struct.osip_from** %dest, %struct.osip_from*** %dest.addr, align 8
  %tmp = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* null, %struct.osip_from** %tmp, align 8
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_from_init(%struct.osip_from** %fr)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %displayname, align 8
  %cmp4 = icmp ne i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end3
  %tmp6 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %displayname6 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %displayname6, align 8
  %call7 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  %displayname8 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp8, i32 0, i32 0
  store i8* %call7, i8** %displayname8, align 8
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  %displayname9 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %displayname9, align 8
  %cmp10 = icmp eq i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then5
  %tmp11 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end3
  %tmp12 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp12, i32 0, i32 1
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %url, align 8
  %cmp14 = icmp ne %struct.osip_uri* %tmp13, null
  br i1 %cmp14, label %if.then15, label %if.end22

if.then15:                                        ; preds = %if.end13
  %tmp14 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %url16 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp14, i32 0, i32 1
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %url16, align 8
  %tmp16 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  %url17 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp16, i32 0, i32 1
  %call18 = call i32 @osip_uri_clone(%struct.osip_uri* %tmp15, %struct.osip_uri** %url17)
  store i32 %call18, i32* %i, align 4
  %tmp17 = load i32, i32* %i, align 4
  %cmp19 = icmp ne i32 %tmp17, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.then15
  %tmp18 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp18)
  %tmp19 = load i32, i32* %i, align 4
  store i32 %tmp19, i32* %retval
  br label %return

if.end21:                                         ; preds = %if.then15
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end13
  %tmp20 = load %struct.osip_from*, %struct.osip_from** %from.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp20, i32 0, i32 2
  %tmp21 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  %gen_params23 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp21, i32 0, i32 2
  %call24 = call i32 @osip_list_clone(%struct.osip_list* %gen_params, %struct.osip_list* %gen_params23, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_uri_param*, %struct.osip_uri_param**)* @osip_uri_param_clone to i32 (i8*, i8**)*))
  store i32 %call24, i32* %i, align 4
  %tmp22 = load i32, i32* %i, align 4
  %cmp25 = icmp ne i32 %tmp22, 0
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  %tmp23 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  call void @osip_from_free(%struct.osip_from* %tmp23)
  %tmp24 = load i32, i32* %i, align 4
  store i32 %tmp24, i32* %retval
  br label %return

if.end27:                                         ; preds = %if.end22
  %tmp25 = load %struct.osip_from*, %struct.osip_from** %fr, align 8
  %tmp26 = load %struct.osip_from**, %struct.osip_from*** %dest.addr, align 8
  store %struct.osip_from* %tmp25, %struct.osip_from** %tmp26, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end27, %if.then26, %if.then20, %if.then11, %if.then2, %if.then
  %tmp27 = load i32, i32* %retval
  ret i32 %tmp27
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_compare(%struct.osip_from* %from1, %struct.osip_from* %from2) #0 {
entry:
  %retval = alloca i32, align 4
  %from1.addr = alloca %struct.osip_from*, align 8
  %from2.addr = alloca %struct.osip_from*, align 8
  %tag1 = alloca i8*, align 8
  %tag2 = alloca i8*, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %pos70 = alloca i32, align 4
  %u_param71 = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_from* %from1, %struct.osip_from** %from1.addr, align 8
  store %struct.osip_from* %from2, %struct.osip_from** %from2.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %cmp1 = icmp eq %struct.osip_from* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp2, i32 0, i32 1
  %tmp3 = load %struct.osip_uri*, %struct.osip_uri** %url, align 8
  %cmp2 = icmp eq %struct.osip_uri* %tmp3, null
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %if.end
  %tmp4 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url4 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp4, i32 0, i32 1
  %tmp5 = load %struct.osip_uri*, %struct.osip_uri** %url4, align 8
  %cmp5 = icmp eq %struct.osip_uri* %tmp5, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 -2, i32* %retval
  br label %return

if.end7:                                          ; preds = %lor.lhs.false3
  %tmp6 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url8 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp6, i32 0, i32 1
  %tmp7 = load %struct.osip_uri*, %struct.osip_uri** %url8, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp7, i32 0, i32 3
  %tmp8 = load i8*, i8** %host, align 8
  %cmp9 = icmp eq i8* %tmp8, null
  br i1 %cmp9, label %land.lhs.true, label %if.end29

land.lhs.true:                                    ; preds = %if.end7
  %tmp9 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url10 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp9, i32 0, i32 1
  %tmp10 = load %struct.osip_uri*, %struct.osip_uri** %url10, align 8
  %host11 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp10, i32 0, i32 3
  %tmp11 = load i8*, i8** %host11, align 8
  %cmp12 = icmp eq i8* %tmp11, null
  br i1 %cmp12, label %if.then13, label %if.end29

if.then13:                                        ; preds = %land.lhs.true
  %tmp12 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url14 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp12, i32 0, i32 1
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %url14, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp13, i32 0, i32 7
  %tmp14 = load i8*, i8** %string, align 8
  %cmp15 = icmp eq i8* %tmp14, null
  br i1 %cmp15, label %if.then20, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.then13
  %tmp15 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url17 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp15, i32 0, i32 1
  %tmp16 = load %struct.osip_uri*, %struct.osip_uri** %url17, align 8
  %string18 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp16, i32 0, i32 7
  %tmp17 = load i8*, i8** %string18, align 8
  %cmp19 = icmp eq i8* %tmp17, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %lor.lhs.false16, %if.then13
  store i32 -1, i32* %retval
  br label %return

if.end21:                                         ; preds = %lor.lhs.false16
  %tmp18 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url22 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp18, i32 0, i32 1
  %tmp19 = load %struct.osip_uri*, %struct.osip_uri** %url22, align 8
  %string23 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp19, i32 0, i32 7
  %tmp20 = load i8*, i8** %string23, align 8
  %tmp21 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url24 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp21, i32 0, i32 1
  %tmp22 = load %struct.osip_uri*, %struct.osip_uri** %url24, align 8
  %string25 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp22, i32 0, i32 7
  %tmp23 = load i8*, i8** %string25, align 8
  %call = call i32 @strcmp(i8* %tmp20, i8* %tmp23) #7
  %cmp26 = icmp eq i32 0, %call
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end21
  store i32 0, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.end21
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end7
  %tmp24 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url30 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp24, i32 0, i32 1
  %tmp25 = load %struct.osip_uri*, %struct.osip_uri** %url30, align 8
  %host31 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %host31, align 8
  %cmp32 = icmp eq i8* %tmp26, null
  br i1 %cmp32, label %if.then37, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.end29
  %tmp27 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url34 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp27, i32 0, i32 1
  %tmp28 = load %struct.osip_uri*, %struct.osip_uri** %url34, align 8
  %host35 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp28, i32 0, i32 3
  %tmp29 = load i8*, i8** %host35, align 8
  %cmp36 = icmp eq i8* %tmp29, null
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %lor.lhs.false33, %if.end29
  store i32 -1, i32* %retval
  br label %return

if.end38:                                         ; preds = %lor.lhs.false33
  %tmp30 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url39 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp30, i32 0, i32 1
  %tmp31 = load %struct.osip_uri*, %struct.osip_uri** %url39, align 8
  %host40 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp31, i32 0, i32 3
  %tmp32 = load i8*, i8** %host40, align 8
  %tmp33 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url41 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp33, i32 0, i32 1
  %tmp34 = load %struct.osip_uri*, %struct.osip_uri** %url41, align 8
  %host42 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp34, i32 0, i32 3
  %tmp35 = load i8*, i8** %host42, align 8
  %call43 = call i32 @strcmp(i8* %tmp32, i8* %tmp35) #7
  %cmp44 = icmp ne i32 0, %call43
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end38
  store i32 -1, i32* %retval
  br label %return

if.end46:                                         ; preds = %if.end38
  %tmp36 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url47 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp36, i32 0, i32 1
  %tmp37 = load %struct.osip_uri*, %struct.osip_uri** %url47, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp37, i32 0, i32 1
  %tmp38 = load i8*, i8** %username, align 8
  %cmp48 = icmp ne i8* %tmp38, null
  br i1 %cmp48, label %land.lhs.true49, label %if.end62

land.lhs.true49:                                  ; preds = %if.end46
  %tmp39 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url50 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp39, i32 0, i32 1
  %tmp40 = load %struct.osip_uri*, %struct.osip_uri** %url50, align 8
  %username51 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %username51, align 8
  %cmp52 = icmp ne i8* %tmp41, null
  br i1 %cmp52, label %if.then53, label %if.end62

if.then53:                                        ; preds = %land.lhs.true49
  %tmp42 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %url54 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp42, i32 0, i32 1
  %tmp43 = load %struct.osip_uri*, %struct.osip_uri** %url54, align 8
  %username55 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp43, i32 0, i32 1
  %tmp44 = load i8*, i8** %username55, align 8
  %tmp45 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %url56 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp45, i32 0, i32 1
  %tmp46 = load %struct.osip_uri*, %struct.osip_uri** %url56, align 8
  %username57 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp46, i32 0, i32 1
  %tmp47 = load i8*, i8** %username57, align 8
  %call58 = call i32 @strcmp(i8* %tmp44, i8* %tmp47) #7
  %cmp59 = icmp ne i32 0, %call58
  br i1 %cmp59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.then53
  store i32 -1, i32* %retval
  br label %return

if.end61:                                         ; preds = %if.then53
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %land.lhs.true49, %if.end46
  store i8* null, i8** %tag1, align 8
  store i8* null, i8** %tag2, align 8
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end69, %if.end62
  %tmp48 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp48, i32 0, i32 2
  %tmp49 = load i32, i32* %pos, align 4
  %call63 = call i32 @osip_list_eol(%struct.osip_list* %gen_params, i32 %tmp49)
  %tobool = icmp ne i32 %call63, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end.loopexit

while.body:                                       ; preds = %while.cond
  %tmp50 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %gen_params64 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp50, i32 0, i32 2
  %tmp51 = load i32, i32* %pos, align 4
  %call65 = call i8* @osip_list_get(%struct.osip_list* %gen_params64, i32 %tmp51)
  %tmp52 = bitcast i8* %call65 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp52, %struct.osip_uri_param** %u_param, align 8
  %tmp53 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp53, i32 0, i32 0
  %tmp54 = load i8*, i8** %gname, align 8
  %call66 = call i32 @strncmp(i8* %tmp54, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4316, i32 0, i32 0), i64 3) #7
  %cmp67 = icmp eq i32 0, %call66
  br i1 %cmp67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %while.body
  %tmp55 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp55, i32 0, i32 1
  %tmp56 = load i8*, i8** %gvalue, align 8
  store i8* %tmp56, i8** %tag1, align 8
  br label %while.end

if.end69:                                         ; preds = %while.body
  %tmp57 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp57, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.then68
  store i32 0, i32* %pos70, align 4
  br label %while.cond72

while.cond72:                                     ; preds = %if.end85, %while.end
  %tmp58 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %gen_params73 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp58, i32 0, i32 2
  %tmp59 = load i32, i32* %pos70, align 4
  %call74 = call i32 @osip_list_eol(%struct.osip_list* %gen_params73, i32 %tmp59)
  %tobool75 = icmp ne i32 %call74, 0
  %lnot76 = xor i1 %tobool75, true
  br i1 %lnot76, label %while.body77, label %while.end87.loopexit

while.body77:                                     ; preds = %while.cond72
  %tmp60 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %gen_params78 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp60, i32 0, i32 2
  %tmp61 = load i32, i32* %pos70, align 4
  %call79 = call i8* @osip_list_get(%struct.osip_list* %gen_params78, i32 %tmp61)
  %tmp62 = bitcast i8* %call79 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp62, %struct.osip_uri_param** %u_param71, align 8
  %tmp63 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param71, align 8
  %gname80 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp63, i32 0, i32 0
  %tmp64 = load i8*, i8** %gname80, align 8
  %call81 = call i32 @strncmp(i8* %tmp64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4316, i32 0, i32 0), i64 3) #7
  %cmp82 = icmp eq i32 0, %call81
  br i1 %cmp82, label %if.then83, label %if.end85

if.then83:                                        ; preds = %while.body77
  %tmp65 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param71, align 8
  %gvalue84 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp65, i32 0, i32 1
  %tmp66 = load i8*, i8** %gvalue84, align 8
  store i8* %tmp66, i8** %tag2, align 8
  br label %while.end87

if.end85:                                         ; preds = %while.body77
  %tmp67 = load i32, i32* %pos70, align 4
  %inc86 = add nsw i32 %tmp67, 1
  store i32 %inc86, i32* %pos70, align 4
  br label %while.cond72

while.end87.loopexit:                             ; preds = %while.cond72
  br label %while.end87

while.end87:                                      ; preds = %while.end87.loopexit, %if.then83
  %tmp68 = load i8*, i8** %tag1, align 8
  %cmp88 = icmp ne i8* %tmp68, null
  br i1 %cmp88, label %land.lhs.true89, label %if.end96

land.lhs.true89:                                  ; preds = %while.end87
  %tmp69 = load i8*, i8** %tag2, align 8
  %cmp90 = icmp ne i8* %tmp69, null
  br i1 %cmp90, label %if.then91, label %if.end96

if.then91:                                        ; preds = %land.lhs.true89
  %tmp70 = load i8*, i8** %tag1, align 8
  %tmp71 = load i8*, i8** %tag2, align 8
  %call92 = call i32 @strcmp(i8* %tmp70, i8* %tmp71) #7
  %cmp93 = icmp ne i32 0, %call92
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.then91
  store i32 -1, i32* %retval
  br label %return

if.end95:                                         ; preds = %if.then91
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %land.lhs.true89, %while.end87
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end96, %if.then94, %if.then60, %if.then45, %if.then37, %if.then27, %if.then20, %if.then6, %if.then
  %tmp72 = load i32, i32* %retval
  ret i32 %tmp72
}

; Function Attrs: nounwind uwtable
define void @osip_generic_param_set_value(%struct.osip_uri_param* %fparam, i8* %value) #0 {
entry:
  %fparam.addr = alloca %struct.osip_uri_param*, align 8
  %value.addr = alloca i8*, align 8
  store %struct.osip_uri_param* %fparam, %struct.osip_uri_param** %fparam.addr, align 8
  store i8* %value, i8** %value.addr, align 8
  %tmp = load i8*, i8** %value.addr, align 8
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %gvalue, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_generic_param_get_name(%struct.osip_uri_param* %fparam) #0 {
entry:
  %retval = alloca i8*, align 8
  %fparam.addr = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_uri_param* %fparam, %struct.osip_uri_param** %fparam.addr, align 8
  %tmp = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %cmp = icmp eq %struct.osip_uri_param* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %gname, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_generic_param_set_name(%struct.osip_uri_param* %fparam, i8* %name) #0 {
entry:
  %fparam.addr = alloca %struct.osip_uri_param*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.osip_uri_param* %fparam, %struct.osip_uri_param** %fparam.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  %tmp = load i8*, i8** %name.addr, align 8
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %gname, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_generic_param_get_value(%struct.osip_uri_param* %fparam) #0 {
entry:
  %retval = alloca i8*, align 8
  %fparam.addr = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_uri_param* %fparam, %struct.osip_uri_param** %fparam.addr, align 8
  %tmp = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %cmp = icmp eq %struct.osip_uri_param* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %gname, align 8
  %cmp1 = icmp eq i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i8* null, i8** %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp3 = load %struct.osip_uri_param*, %struct.osip_uri_param** %fparam.addr, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp3, i32 0, i32 1
  %tmp4 = load i8*, i8** %gvalue, align 8
  store i8* %tmp4, i8** %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp5 = load i8*, i8** %retval
  ret i8* %tmp5
}

; Function Attrs: nounwind uwtable
define i32 @osip_from_tag_match(%struct.osip_from* %from1, %struct.osip_from* %from2) #0 {
entry:
  %retval = alloca i32, align 4
  %from1.addr = alloca %struct.osip_from*, align 8
  %from2.addr = alloca %struct.osip_from*, align 8
  %tag_from1 = alloca %struct.osip_uri_param*, align 8
  %tag_from2 = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_from* %from1, %struct.osip_from** %from1.addr, align 8
  store %struct.osip_from* %from2, %struct.osip_from** %from2.addr, align 8
  %tmp = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %cmp = icmp eq %struct.osip_from* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %cmp1 = icmp eq %struct.osip_from* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_from*, %struct.osip_from** %from1.addr, align 8
  %gen_params = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp2, i32 0, i32 2
  %call = call i32 @osip_uri_param_get_byname(%struct.osip_list* %gen_params, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4316, i32 0, i32 0), %struct.osip_uri_param** %tag_from1)
  %tmp3 = load %struct.osip_from*, %struct.osip_from** %from2.addr, align 8
  %gen_params2 = getelementptr inbounds %struct.osip_from, %struct.osip_from* %tmp3, i32 0, i32 2
  %call3 = call i32 @osip_uri_param_get_byname(%struct.osip_list* %gen_params2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4316, i32 0, i32 0), %struct.osip_uri_param** %tag_from2)
  %tmp4 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from1, align 8
  %cmp4 = icmp eq %struct.osip_uri_param* %tmp4, null
  br i1 %cmp4, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %tmp5 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from2, align 8
  %cmp5 = icmp eq %struct.osip_uri_param* %tmp5, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %tmp6 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from1, align 8
  %cmp8 = icmp ne %struct.osip_uri_param* %tmp6, null
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false11

land.lhs.true9:                                   ; preds = %if.end7
  %tmp7 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from2, align 8
  %cmp10 = icmp eq %struct.osip_uri_param* %tmp7, null
  br i1 %cmp10, label %if.then15, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %land.lhs.true9, %if.end7
  %tmp8 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from1, align 8
  %cmp12 = icmp eq %struct.osip_uri_param* %tmp8, null
  br i1 %cmp12, label %land.lhs.true13, label %if.end16

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from2, align 8
  %cmp14 = icmp ne %struct.osip_uri_param* %tmp9, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %land.lhs.true13, %land.lhs.true9
  store i32 -1, i32* %retval
  br label %return

if.end16:                                         ; preds = %land.lhs.true13, %lor.lhs.false11
  %tmp10 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from1, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %gvalue, align 8
  %cmp17 = icmp eq i8* %tmp11, null
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.end16
  %tmp12 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from2, align 8
  %gvalue19 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %gvalue19, align 8
  %cmp20 = icmp eq i8* %tmp13, null
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %lor.lhs.false18, %if.end16
  store i32 -1, i32* %retval
  br label %return

if.end22:                                         ; preds = %lor.lhs.false18
  %tmp14 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from1, align 8
  %gvalue23 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %gvalue23, align 8
  %tmp16 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tag_from2, align 8
  %gvalue24 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp16, i32 0, i32 1
  %tmp17 = load i8*, i8** %gvalue24, align 8
  %call25 = call i32 @strcmp(i8* %tmp15, i8* %tmp17) #7
  %cmp26 = icmp ne i32 0, %call25
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end22
  store i32 -1, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.end22
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end28, %if.then27, %if.then21, %if.then15, %if.then6, %if.then
  %tmp18 = load i32, i32* %retval
  ret i32 %tmp18
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_init(%struct.osip_uri** %url) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri**, align 8
  store %struct.osip_uri** %url, %struct.osip_uri*** %url.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 80)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 80) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_uri*
  %tmp3 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  store %struct.osip_uri* %tmp2, %struct.osip_uri** %tmp3, align 8
  %tmp4 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp5 = load %struct.osip_uri*, %struct.osip_uri** %tmp4, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp7 = load %struct.osip_uri*, %struct.osip_uri** %tmp6, align 8
  %scheme = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp7, i32 0, i32 0
  store i8* null, i8** %scheme, align 8
  %tmp8 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp9 = load %struct.osip_uri*, %struct.osip_uri** %tmp8, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp9, i32 0, i32 1
  store i8* null, i8** %username, align 8
  %tmp10 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp11 = load %struct.osip_uri*, %struct.osip_uri** %tmp10, align 8
  %password = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp11, i32 0, i32 2
  store i8* null, i8** %password, align 8
  %tmp12 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %tmp12, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp13, i32 0, i32 3
  store i8* null, i8** %host, align 8
  %tmp14 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %tmp14, align 8
  %port = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp15, i32 0, i32 4
  store i8* null, i8** %port, align 8
  %tmp16 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp17 = load %struct.osip_uri*, %struct.osip_uri** %tmp16, align 8
  %url_params = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp17, i32 0, i32 5
  %call2 = call i32 @osip_list_init(%struct.osip_list* %url_params)
  %tmp18 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp19 = load %struct.osip_uri*, %struct.osip_uri** %tmp18, align 8
  %url_headers = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp19, i32 0, i32 6
  %call3 = call i32 @osip_list_init(%struct.osip_list* %url_headers)
  %tmp20 = load %struct.osip_uri**, %struct.osip_uri*** %url.addr, align 8
  %tmp21 = load %struct.osip_uri*, %struct.osip_uri** %tmp20, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp21, i32 0, i32 7
  store i8* null, i8** %string, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp22 = load i32, i32* %retval
  ret i32 %tmp22
}

; Function Attrs: nounwind uwtable
define i8* @next_separator(i8* %ch, i32 %separator_osip_to_find, i32 %before_separator) #0 {
entry:
  %retval = alloca i8*, align 8
  %ch.addr = alloca i8*, align 8
  %separator_osip_to_find.addr = alloca i32, align 4
  %before_separator.addr = alloca i32, align 4
  %ind = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store i8* %ch, i8** %ch.addr, align 8
  store i32 %separator_osip_to_find, i32* %separator_osip_to_find.addr, align 4
  store i32 %before_separator, i32* %before_separator.addr, align 4
  %tmp1 = load i8*, i8** %ch.addr, align 8
  %tmp2 = load i32, i32* %separator_osip_to_find.addr, align 4
  %call = call i8* @strchr(i8* %tmp1, i32 %tmp2) #7
  store i8* %call, i8** %ind, align 8
  %tmp3 = load i8*, i8** %ind, align 8
  %cmp = icmp eq i8* %tmp3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  store i8* null, i8** %tmp, align 8
  %tmp4 = load i32, i32* %before_separator.addr, align 4
  %cmp1 = icmp ne i32 %tmp4, 0
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %tmp5 = load i8*, i8** %ch.addr, align 8
  %tmp6 = load i32, i32* %before_separator.addr, align 4
  %call3 = call i8* @strchr(i8* %tmp5, i32 %tmp6) #7
  store i8* %call3, i8** %tmp, align 8
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %tmp7 = load i8*, i8** %tmp, align 8
  %cmp5 = icmp ne i8* %tmp7, null
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  %tmp8 = load i8*, i8** %ind, align 8
  %tmp9 = load i8*, i8** %tmp, align 8
  %cmp7 = icmp ult i8* %tmp8, %tmp9
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then6
  %tmp10 = load i8*, i8** %ind, align 8
  store i8* %tmp10, i8** %retval
  br label %return

if.end9:                                          ; preds = %if.then6
  br label %if.end10

if.else:                                          ; preds = %if.end4
  %tmp11 = load i8*, i8** %ind, align 8
  store i8* %tmp11, i8** %retval
  br label %return

if.end10:                                         ; preds = %if.end9
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %if.end10, %if.else, %if.then8, %if.then
  %tmp12 = load i8*, i8** %retval
  ret i8* %tmp12
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_parse(%struct.osip_uri* %url, i8* %buf) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri*, align 8
  %buf.addr = alloca i8*, align 8
  %username = alloca i8*, align 8
  %password = alloca i8*, align 8
  %host = alloca i8*, align 8
  %port = alloca i8*, align 8
  %params = alloca i8*, align 8
  %headers = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %i = alloca i64, align 8
  %tmpbuf = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  %tmp1 = load i8*, i8** %buf.addr, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load i8*, i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp2, i64 0
  %tmp3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp3 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp4 = load i8*, i8** %buf.addr, align 8
  %call = call i8* @strchr(i8* %tmp4, i32 58) #7
  store i8* %call, i8** %tmp, align 8
  %tmp5 = load i8*, i8** %tmp, align 8
  %cmp3 = icmp eq i8* %tmp5, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp6 = load i8*, i8** %tmp, align 8
  %tmp7 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp6 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp7 = icmp slt i64 %sub.ptr.sub, 2
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  store i32 -5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end6
  %tmp8 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp8, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end10
  %tmp9 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp10 = load i8*, i8** %tmp, align 8
  %tmp11 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %tmp10 to i64
  %sub.ptr.rhs.cast12 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %add = add nsw i64 %sub.ptr.sub13, 1
  %call14 = call i8* %tmp9(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  %tmp12 = load i8*, i8** %tmp, align 8
  %tmp13 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast15 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast16 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16
  %add18 = add nsw i64 %sub.ptr.sub17, 1
  %call19 = call noalias i8* @malloc(i64 %add18) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call14, %cond.true ], [ %call19, %cond.false ]
  %tmp14 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp14, i32 0, i32 0
  store i8* %cond, i8** %scheme, align 8
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme20 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %scheme20, align 8
  %cmp21 = icmp eq i8* %tmp16, null
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end24:                                         ; preds = %cond.end
  %tmp17 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme25 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %scheme25, align 8
  %tmp19 = load i8*, i8** %buf.addr, align 8
  %tmp20 = load i8*, i8** %tmp, align 8
  %tmp21 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast26 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %call29 = call i8* @osip_strncpy(i8* %tmp18, i8* %tmp19, i64 %sub.ptr.sub28)
  %tmp22 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme30 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp22, i32 0, i32 0
  %tmp23 = load i8*, i8** %scheme30, align 8
  %call31 = call i8* @strchr(i8* %tmp23, i32 32) #7
  %cmp32 = icmp ne i8* %call31, null
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end24
  store i32 -5, i32* %retval
  br label %return

if.end35:                                         ; preds = %if.end24
  %tmp24 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme36 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp24, i32 0, i32 0
  %tmp25 = load i8*, i8** %scheme36, align 8
  %call37 = call i64 @strlen(i8* %tmp25) #7
  %cmp38 = icmp ult i64 %call37, 3
  br i1 %cmp38, label %if.then49, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %if.end35
  %tmp26 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme41 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %scheme41, align 8
  %call42 = call i32 @osip_strncasecmp(i8* %tmp27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str333, i32 0, i32 0), i64 3)
  %cmp43 = icmp ne i32 0, %call42
  br i1 %cmp43, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %lor.lhs.false40
  %tmp28 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme45 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp28, i32 0, i32 0
  %tmp29 = load i8*, i8** %scheme45, align 8
  %call46 = call i32 @osip_strncasecmp(i8* %tmp29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str1334, i32 0, i32 0), i64 4)
  %cmp47 = icmp ne i32 0, %call46
  br i1 %cmp47, label %if.then49, label %if.end73

if.then49:                                        ; preds = %land.lhs.true, %if.end35
  %tmp30 = load i8*, i8** %tmp, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp30, i64 1
  %call51 = call i64 @strlen(i8* %add.ptr) #7
  store i64 %call51, i64* %i, align 8
  %tmp31 = load i64, i64* %i, align 8
  %cmp52 = icmp ult i64 %tmp31, 2
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.then49
  store i32 -5, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.then49
  %tmp32 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool56 = icmp ne i8* (i64)* %tmp32, null
  br i1 %tobool56, label %cond.true57, label %cond.false60

cond.true57:                                      ; preds = %if.end55
  %tmp33 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp34 = load i64, i64* %i, align 8
  %add58 = add i64 %tmp34, 1
  %call59 = call i8* %tmp33(i64 %add58)
  br label %cond.end63

cond.false60:                                     ; preds = %if.end55
  %tmp35 = load i64, i64* %i, align 8
  %add61 = add i64 %tmp35, 1
  %call62 = call noalias i8* @malloc(i64 %add61) #8
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false60, %cond.true57
  %cond64 = phi i8* [ %call59, %cond.true57 ], [ %call62, %cond.false60 ]
  %tmp36 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp36, i32 0, i32 7
  store i8* %cond64, i8** %string, align 8
  %tmp37 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string65 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp37, i32 0, i32 7
  %tmp38 = load i8*, i8** %string65, align 8
  %cmp66 = icmp eq i8* %tmp38, null
  br i1 %cmp66, label %if.then68, label %if.end69

if.then68:                                        ; preds = %cond.end63
  store i32 -4, i32* %retval
  br label %return

if.end69:                                         ; preds = %cond.end63
  %tmp39 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string70 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp39, i32 0, i32 7
  %tmp40 = load i8*, i8** %string70, align 8
  %tmp41 = load i8*, i8** %tmp, align 8
  %add.ptr71 = getelementptr inbounds i8, i8* %tmp41, i64 1
  %tmp42 = load i64, i64* %i, align 8
  %call72 = call i8* @osip_strncpy(i8* %tmp40, i8* %add.ptr71, i64 %tmp42)
  store i32 0, i32* %retval
  br label %return

if.end73:                                         ; preds = %land.lhs.true, %lor.lhs.false40
  %tmp43 = load i8*, i8** %buf.addr, align 8
  %call74 = call i8* @strchr(i8* %tmp43, i32 58) #7
  store i8* %call74, i8** %username, align 8
  %tmp44 = load i8*, i8** %username, align 8
  %cmp75 = icmp eq i8* %tmp44, null
  br i1 %cmp75, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end73
  store i32 -5, i32* %retval
  br label %return

if.end78:                                         ; preds = %if.end73
  %tmp45 = load i8*, i8** %buf.addr, align 8
  %call79 = call i8* @strchr(i8* %tmp45, i32 64) #7
  store i8* %call79, i8** %host, align 8
  %tmp46 = load i8*, i8** %host, align 8
  %cmp80 = icmp eq i8* %tmp46, null
  br i1 %cmp80, label %if.then82, label %if.else

if.then82:                                        ; preds = %if.end78
  %tmp47 = load i8*, i8** %username, align 8
  store i8* %tmp47, i8** %host, align 8
  br label %if.end165

if.else:                                          ; preds = %if.end78
  %tmp48 = load i8*, i8** %username, align 8
  %arrayidx83 = getelementptr inbounds i8, i8* %tmp48, i64 1
  %tmp49 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %tmp49 to i32
  %cmp85 = icmp eq i32 %conv84, 64
  br i1 %cmp85, label %if.then87, label %if.else89

if.then87:                                        ; preds = %if.else
  %tmp50 = load i8*, i8** %username, align 8
  %add.ptr88 = getelementptr inbounds i8, i8* %tmp50, i64 1
  store i8* %add.ptr88, i8** %host, align 8
  br label %if.end164

if.else89:                                        ; preds = %if.else
  %tmp51 = load i8*, i8** %username, align 8
  %add.ptr90 = getelementptr inbounds i8, i8* %tmp51, i64 1
  %call91 = call i8* @next_separator(i8* %add.ptr90, i32 58, i32 64)
  store i8* %call91, i8** %password, align 8
  %tmp52 = load i8*, i8** %password, align 8
  %cmp92 = icmp eq i8* %tmp52, null
  br i1 %cmp92, label %if.then94, label %if.else95

if.then94:                                        ; preds = %if.else89
  %tmp53 = load i8*, i8** %host, align 8
  store i8* %tmp53, i8** %password, align 8
  br label %if.end129

if.else95:                                        ; preds = %if.else89
  %tmp54 = load i8*, i8** %host, align 8
  %tmp55 = load i8*, i8** %password, align 8
  %sub.ptr.lhs.cast96 = ptrtoint i8* %tmp54 to i64
  %sub.ptr.rhs.cast97 = ptrtoint i8* %tmp55 to i64
  %sub.ptr.sub98 = sub i64 %sub.ptr.lhs.cast96, %sub.ptr.rhs.cast97
  %cmp99 = icmp slt i64 %sub.ptr.sub98, 2
  br i1 %cmp99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.else95
  store i32 -5, i32* %retval
  br label %return

if.end102:                                        ; preds = %if.else95
  %tmp56 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool103 = icmp ne i8* (i64)* %tmp56, null
  br i1 %tobool103, label %cond.true104, label %cond.false109

cond.true104:                                     ; preds = %if.end102
  %tmp57 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp58 = load i8*, i8** %host, align 8
  %tmp59 = load i8*, i8** %password, align 8
  %sub.ptr.lhs.cast105 = ptrtoint i8* %tmp58 to i64
  %sub.ptr.rhs.cast106 = ptrtoint i8* %tmp59 to i64
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106
  %call108 = call i8* %tmp57(i64 %sub.ptr.sub107)
  br label %cond.end114

cond.false109:                                    ; preds = %if.end102
  %tmp60 = load i8*, i8** %host, align 8
  %tmp61 = load i8*, i8** %password, align 8
  %sub.ptr.lhs.cast110 = ptrtoint i8* %tmp60 to i64
  %sub.ptr.rhs.cast111 = ptrtoint i8* %tmp61 to i64
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111
  %call113 = call noalias i8* @malloc(i64 %sub.ptr.sub112) #8
  br label %cond.end114

cond.end114:                                      ; preds = %cond.false109, %cond.true104
  %cond115 = phi i8* [ %call108, %cond.true104 ], [ %call113, %cond.false109 ]
  %tmp62 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password116 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp62, i32 0, i32 2
  store i8* %cond115, i8** %password116, align 8
  %tmp63 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password117 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp63, i32 0, i32 2
  %tmp64 = load i8*, i8** %password117, align 8
  %cmp118 = icmp eq i8* %tmp64, null
  br i1 %cmp118, label %if.then120, label %if.end121

if.then120:                                       ; preds = %cond.end114
  store i32 -4, i32* %retval
  br label %return

if.end121:                                        ; preds = %cond.end114
  %tmp65 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password122 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp65, i32 0, i32 2
  %tmp66 = load i8*, i8** %password122, align 8
  %tmp67 = load i8*, i8** %password, align 8
  %add.ptr123 = getelementptr inbounds i8, i8* %tmp67, i64 1
  %tmp68 = load i8*, i8** %host, align 8
  %tmp69 = load i8*, i8** %password, align 8
  %sub.ptr.lhs.cast124 = ptrtoint i8* %tmp68 to i64
  %sub.ptr.rhs.cast125 = ptrtoint i8* %tmp69 to i64
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125
  %sub = sub nsw i64 %sub.ptr.sub126, 1
  %call127 = call i8* @osip_strncpy(i8* %tmp66, i8* %add.ptr123, i64 %sub)
  %tmp70 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password128 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp70, i32 0, i32 2
  %tmp71 = load i8*, i8** %password128, align 8
  call void @__osip_uri_unescape(i8* %tmp71)
  br label %if.end129

if.end129:                                        ; preds = %if.end121, %if.then94
  %tmp72 = load i8*, i8** %password, align 8
  %tmp73 = load i8*, i8** %username, align 8
  %sub.ptr.lhs.cast130 = ptrtoint i8* %tmp72 to i64
  %sub.ptr.rhs.cast131 = ptrtoint i8* %tmp73 to i64
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131
  %cmp133 = icmp slt i64 %sub.ptr.sub132, 2
  br i1 %cmp133, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.end129
  store i32 -5, i32* %retval
  br label %return

if.end136:                                        ; preds = %if.end129
  %tmp74 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool137 = icmp ne i8* (i64)* %tmp74, null
  br i1 %tobool137, label %cond.true138, label %cond.false143

cond.true138:                                     ; preds = %if.end136
  %tmp75 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp76 = load i8*, i8** %password, align 8
  %tmp77 = load i8*, i8** %username, align 8
  %sub.ptr.lhs.cast139 = ptrtoint i8* %tmp76 to i64
  %sub.ptr.rhs.cast140 = ptrtoint i8* %tmp77 to i64
  %sub.ptr.sub141 = sub i64 %sub.ptr.lhs.cast139, %sub.ptr.rhs.cast140
  %call142 = call i8* %tmp75(i64 %sub.ptr.sub141)
  br label %cond.end148

cond.false143:                                    ; preds = %if.end136
  %tmp78 = load i8*, i8** %password, align 8
  %tmp79 = load i8*, i8** %username, align 8
  %sub.ptr.lhs.cast144 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.rhs.cast145 = ptrtoint i8* %tmp79 to i64
  %sub.ptr.sub146 = sub i64 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145
  %call147 = call noalias i8* @malloc(i64 %sub.ptr.sub146) #8
  br label %cond.end148

cond.end148:                                      ; preds = %cond.false143, %cond.true138
  %cond149 = phi i8* [ %call142, %cond.true138 ], [ %call147, %cond.false143 ]
  %tmp80 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username150 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp80, i32 0, i32 1
  store i8* %cond149, i8** %username150, align 8
  %tmp81 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username151 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp81, i32 0, i32 1
  %tmp82 = load i8*, i8** %username151, align 8
  %cmp152 = icmp eq i8* %tmp82, null
  br i1 %cmp152, label %if.then154, label %if.end155

if.then154:                                       ; preds = %cond.end148
  store i32 -4, i32* %retval
  br label %return

if.end155:                                        ; preds = %cond.end148
  %tmp83 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username156 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp83, i32 0, i32 1
  %tmp84 = load i8*, i8** %username156, align 8
  %tmp85 = load i8*, i8** %username, align 8
  %add.ptr157 = getelementptr inbounds i8, i8* %tmp85, i64 1
  %tmp86 = load i8*, i8** %password, align 8
  %tmp87 = load i8*, i8** %username, align 8
  %sub.ptr.lhs.cast158 = ptrtoint i8* %tmp86 to i64
  %sub.ptr.rhs.cast159 = ptrtoint i8* %tmp87 to i64
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159
  %sub161 = sub nsw i64 %sub.ptr.sub160, 1
  %call162 = call i8* @osip_strncpy(i8* %tmp84, i8* %add.ptr157, i64 %sub161)
  %tmp88 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username163 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp88, i32 0, i32 1
  %tmp89 = load i8*, i8** %username163, align 8
  call void @__osip_uri_unescape(i8* %tmp89)
  br label %if.end164

if.end164:                                        ; preds = %if.end155, %if.then87
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then82
  %tmp90 = load i8*, i8** %host, align 8
  %call166 = call i8* @strchr(i8* %tmp90, i32 63) #7
  store i8* %call166, i8** %headers, align 8
  %tmp91 = load i8*, i8** %headers, align 8
  %cmp167 = icmp eq i8* %tmp91, null
  br i1 %cmp167, label %if.then169, label %if.else172

if.then169:                                       ; preds = %if.end165
  %tmp92 = load i8*, i8** %buf.addr, align 8
  %tmp93 = load i8*, i8** %buf.addr, align 8
  %call170 = call i64 @strlen(i8* %tmp93) #7
  %add.ptr171 = getelementptr inbounds i8, i8* %tmp92, i64 %call170
  store i8* %add.ptr171, i8** %headers, align 8
  br label %if.end174

if.else172:                                       ; preds = %if.end165
  %tmp94 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp95 = load i8*, i8** %headers, align 8
  %call173 = call i32 @osip_uri_parse_headers(%struct.osip_uri* %tmp94, i8* %tmp95)
  br label %if.end174

if.end174:                                        ; preds = %if.else172, %if.then169
  %tmp96 = load i8*, i8** %host, align 8
  %call175 = call i8* @strchr(i8* %tmp96, i32 59) #7
  store i8* %call175, i8** %params, align 8
  %tmp97 = load i8*, i8** %params, align 8
  %cmp176 = icmp eq i8* %tmp97, null
  br i1 %cmp176, label %if.then178, label %if.else179

if.then178:                                       ; preds = %if.end174
  %tmp98 = load i8*, i8** %headers, align 8
  store i8* %tmp98, i8** %params, align 8
  br label %if.end221

if.else179:                                       ; preds = %if.end174
  %tmp99 = load i8*, i8** %headers, align 8
  %tmp100 = load i8*, i8** %params, align 8
  %sub.ptr.lhs.cast181 = ptrtoint i8* %tmp99 to i64
  %sub.ptr.rhs.cast182 = ptrtoint i8* %tmp100 to i64
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182
  %add184 = add nsw i64 %sub.ptr.sub183, 1
  %cmp185 = icmp slt i64 %add184, 2
  br i1 %cmp185, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.else179
  store i32 -5, i32* %retval
  br label %return

if.end188:                                        ; preds = %if.else179
  %tmp101 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool189 = icmp ne i8* (i64)* %tmp101, null
  br i1 %tobool189, label %cond.true190, label %cond.false196

cond.true190:                                     ; preds = %if.end188
  %tmp102 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp103 = load i8*, i8** %headers, align 8
  %tmp104 = load i8*, i8** %params, align 8
  %sub.ptr.lhs.cast191 = ptrtoint i8* %tmp103 to i64
  %sub.ptr.rhs.cast192 = ptrtoint i8* %tmp104 to i64
  %sub.ptr.sub193 = sub i64 %sub.ptr.lhs.cast191, %sub.ptr.rhs.cast192
  %add194 = add nsw i64 %sub.ptr.sub193, 1
  %call195 = call i8* %tmp102(i64 %add194)
  br label %cond.end202

cond.false196:                                    ; preds = %if.end188
  %tmp105 = load i8*, i8** %headers, align 8
  %tmp106 = load i8*, i8** %params, align 8
  %sub.ptr.lhs.cast197 = ptrtoint i8* %tmp105 to i64
  %sub.ptr.rhs.cast198 = ptrtoint i8* %tmp106 to i64
  %sub.ptr.sub199 = sub i64 %sub.ptr.lhs.cast197, %sub.ptr.rhs.cast198
  %add200 = add nsw i64 %sub.ptr.sub199, 1
  %call201 = call noalias i8* @malloc(i64 %add200) #8
  br label %cond.end202

cond.end202:                                      ; preds = %cond.false196, %cond.true190
  %cond203 = phi i8* [ %call195, %cond.true190 ], [ %call201, %cond.false196 ]
  store i8* %cond203, i8** %tmpbuf, align 8
  %tmp107 = load i8*, i8** %tmpbuf, align 8
  %cmp204 = icmp eq i8* %tmp107, null
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %cond.end202
  store i32 -4, i32* %retval
  br label %return

if.end207:                                        ; preds = %cond.end202
  %tmp108 = load i8*, i8** %tmpbuf, align 8
  %tmp109 = load i8*, i8** %params, align 8
  %tmp110 = load i8*, i8** %headers, align 8
  %tmp111 = load i8*, i8** %params, align 8
  %sub.ptr.lhs.cast208 = ptrtoint i8* %tmp110 to i64
  %sub.ptr.rhs.cast209 = ptrtoint i8* %tmp111 to i64
  %sub.ptr.sub210 = sub i64 %sub.ptr.lhs.cast208, %sub.ptr.rhs.cast209
  %call211 = call i8* @osip_strncpy(i8* %tmp108, i8* %tmp109, i64 %sub.ptr.sub210)
  store i8* %call211, i8** %tmpbuf, align 8
  %tmp112 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp113 = load i8*, i8** %tmpbuf, align 8
  %call212 = call i32 @osip_uri_parse_params(%struct.osip_uri* %tmp112, i8* %tmp113)
  %tmp114 = load i8*, i8** %tmpbuf, align 8
  %cmp213 = icmp ne i8* %tmp114, null
  br i1 %cmp213, label %if.then215, label %if.end220

if.then215:                                       ; preds = %if.end207
  %tmp115 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool216 = icmp ne void (i8*)* %tmp115, null
  br i1 %tobool216, label %if.then217, label %if.else218

if.then217:                                       ; preds = %if.then215
  %tmp116 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp117 = load i8*, i8** %tmpbuf, align 8
  call void %tmp116(i8* %tmp117)
  br label %if.end219

if.else218:                                       ; preds = %if.then215
  %tmp118 = load i8*, i8** %tmpbuf, align 8
  call void @free(i8* %tmp118) #8
  br label %if.end219

if.end219:                                        ; preds = %if.else218, %if.then217
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end207
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.then178
  %tmp119 = load i8*, i8** %params, align 8
  %add.ptr222 = getelementptr inbounds i8, i8* %tmp119, i64 -1
  store i8* %add.ptr222, i8** %port, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end221
  %tmp120 = load i8*, i8** %port, align 8
  %tmp121 = load i8*, i8** %host, align 8
  %cmp223 = icmp ugt i8* %tmp120, %tmp121
  br i1 %cmp223, label %land.lhs.true225, label %land.end

land.lhs.true225:                                 ; preds = %while.cond
  %tmp122 = load i8*, i8** %port, align 8
  %tmp123 = load i8, i8* %tmp122, align 1
  %conv226 = sext i8 %tmp123 to i32
  %cmp227 = icmp ne i32 %conv226, 93
  br i1 %cmp227, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true225
  %tmp124 = load i8*, i8** %port, align 8
  %tmp125 = load i8, i8* %tmp124, align 1
  %conv229 = sext i8 %tmp125 to i32
  %cmp230 = icmp ne i32 %conv229, 58
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true225, %while.cond
  %tmp126 = phi i1 [ false, %land.lhs.true225 ], [ false, %while.cond ], [ %cmp230, %land.rhs ]
  br i1 %tmp126, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %tmp127 = load i8*, i8** %port, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp127, i32 -1
  store i8* %incdec.ptr, i8** %port, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %tmp128 = load i8*, i8** %port, align 8
  %tmp129 = load i8, i8* %tmp128, align 1
  %conv232 = sext i8 %tmp129 to i32
  %cmp233 = icmp eq i32 %conv232, 58
  br i1 %cmp233, label %if.then235, label %if.else280

if.then235:                                       ; preds = %while.end
  %tmp130 = load i8*, i8** %host, align 8
  %tmp131 = load i8*, i8** %port, align 8
  %cmp236 = icmp eq i8* %tmp130, %tmp131
  br i1 %cmp236, label %if.then238, label %if.else239

if.then238:                                       ; preds = %if.then235
  %tmp132 = load i8*, i8** %params, align 8
  store i8* %tmp132, i8** %port, align 8
  br label %if.end279

if.else239:                                       ; preds = %if.then235
  %tmp133 = load i8*, i8** %params, align 8
  %tmp134 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast240 = ptrtoint i8* %tmp133 to i64
  %sub.ptr.rhs.cast241 = ptrtoint i8* %tmp134 to i64
  %sub.ptr.sub242 = sub i64 %sub.ptr.lhs.cast240, %sub.ptr.rhs.cast241
  %cmp243 = icmp slt i64 %sub.ptr.sub242, 2
  br i1 %cmp243, label %if.then251, label %lor.lhs.false245

lor.lhs.false245:                                 ; preds = %if.else239
  %tmp135 = load i8*, i8** %params, align 8
  %tmp136 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast246 = ptrtoint i8* %tmp135 to i64
  %sub.ptr.rhs.cast247 = ptrtoint i8* %tmp136 to i64
  %sub.ptr.sub248 = sub i64 %sub.ptr.lhs.cast246, %sub.ptr.rhs.cast247
  %cmp249 = icmp sgt i64 %sub.ptr.sub248, 8
  br i1 %cmp249, label %if.then251, label %if.end252

if.then251:                                       ; preds = %lor.lhs.false245, %if.else239
  store i32 -5, i32* %retval
  br label %return

if.end252:                                        ; preds = %lor.lhs.false245
  %tmp137 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool253 = icmp ne i8* (i64)* %tmp137, null
  br i1 %tobool253, label %cond.true254, label %cond.false259

cond.true254:                                     ; preds = %if.end252
  %tmp138 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp139 = load i8*, i8** %params, align 8
  %tmp140 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast255 = ptrtoint i8* %tmp139 to i64
  %sub.ptr.rhs.cast256 = ptrtoint i8* %tmp140 to i64
  %sub.ptr.sub257 = sub i64 %sub.ptr.lhs.cast255, %sub.ptr.rhs.cast256
  %call258 = call i8* %tmp138(i64 %sub.ptr.sub257)
  br label %cond.end264

cond.false259:                                    ; preds = %if.end252
  %tmp141 = load i8*, i8** %params, align 8
  %tmp142 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast260 = ptrtoint i8* %tmp141 to i64
  %sub.ptr.rhs.cast261 = ptrtoint i8* %tmp142 to i64
  %sub.ptr.sub262 = sub i64 %sub.ptr.lhs.cast260, %sub.ptr.rhs.cast261
  %call263 = call noalias i8* @malloc(i64 %sub.ptr.sub262) #8
  br label %cond.end264

cond.end264:                                      ; preds = %cond.false259, %cond.true254
  %cond265 = phi i8* [ %call258, %cond.true254 ], [ %call263, %cond.false259 ]
  %tmp143 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port266 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp143, i32 0, i32 4
  store i8* %cond265, i8** %port266, align 8
  %tmp144 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port267 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp144, i32 0, i32 4
  %tmp145 = load i8*, i8** %port267, align 8
  %cmp268 = icmp eq i8* %tmp145, null
  br i1 %cmp268, label %if.then270, label %if.end271

if.then270:                                       ; preds = %cond.end264
  store i32 -4, i32* %retval
  br label %return

if.end271:                                        ; preds = %cond.end264
  %tmp146 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port272 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp146, i32 0, i32 4
  %tmp147 = load i8*, i8** %port272, align 8
  %tmp148 = load i8*, i8** %port, align 8
  %add.ptr273 = getelementptr inbounds i8, i8* %tmp148, i64 1
  %tmp149 = load i8*, i8** %params, align 8
  %tmp150 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast274 = ptrtoint i8* %tmp149 to i64
  %sub.ptr.rhs.cast275 = ptrtoint i8* %tmp150 to i64
  %sub.ptr.sub276 = sub i64 %sub.ptr.lhs.cast274, %sub.ptr.rhs.cast275
  %sub277 = sub nsw i64 %sub.ptr.sub276, 1
  %call278 = call i8* @osip_clrncpy(i8* %tmp147, i8* %add.ptr273, i64 %sub277)
  br label %if.end279

if.end279:                                        ; preds = %if.end271, %if.then238
  br label %if.end281

if.else280:                                       ; preds = %while.end
  %tmp151 = load i8*, i8** %params, align 8
  store i8* %tmp151, i8** %port, align 8
  br label %if.end281

if.end281:                                        ; preds = %if.else280, %if.end279
  %tmp152 = load i8*, i8** %port, align 8
  store i8* %tmp152, i8** %tmp, align 8
  br label %while.cond282

while.cond282:                                    ; preds = %while.body290, %if.end281
  %tmp153 = load i8*, i8** %tmp, align 8
  %tmp154 = load i8*, i8** %host, align 8
  %cmp283 = icmp ugt i8* %tmp153, %tmp154
  br i1 %cmp283, label %land.rhs285, label %land.end289

land.rhs285:                                      ; preds = %while.cond282
  %tmp155 = load i8*, i8** %tmp, align 8
  %tmp156 = load i8, i8* %tmp155, align 1
  %conv286 = sext i8 %tmp156 to i32
  %cmp287 = icmp ne i32 %conv286, 93
  br label %land.end289

land.end289:                                      ; preds = %land.rhs285, %while.cond282
  %tmp157 = phi i1 [ false, %while.cond282 ], [ %cmp287, %land.rhs285 ]
  br i1 %tmp157, label %while.body290, label %while.end292

while.body290:                                    ; preds = %land.end289
  %tmp158 = load i8*, i8** %tmp, align 8
  %incdec.ptr291 = getelementptr inbounds i8, i8* %tmp158, i32 -1
  store i8* %incdec.ptr291, i8** %tmp, align 8
  br label %while.cond282

while.end292:                                     ; preds = %land.end289
  %tmp159 = load i8*, i8** %tmp, align 8
  %tmp160 = load i8, i8* %tmp159, align 1
  %conv293 = sext i8 %tmp160 to i32
  %cmp294 = icmp eq i32 %conv293, 93
  br i1 %cmp294, label %if.then296, label %if.end312

if.then296:                                       ; preds = %while.end292
  %tmp161 = load i8*, i8** %tmp, align 8
  store i8* %tmp161, i8** %port, align 8
  br label %while.cond297

while.cond297:                                    ; preds = %while.body305, %if.then296
  %tmp162 = load i8*, i8** %host, align 8
  %tmp163 = load i8*, i8** %port, align 8
  %cmp298 = icmp ult i8* %tmp162, %tmp163
  br i1 %cmp298, label %land.rhs300, label %land.end304

land.rhs300:                                      ; preds = %while.cond297
  %tmp164 = load i8*, i8** %host, align 8
  %tmp165 = load i8, i8* %tmp164, align 1
  %conv301 = sext i8 %tmp165 to i32
  %cmp302 = icmp ne i32 %conv301, 91
  br label %land.end304

land.end304:                                      ; preds = %land.rhs300, %while.cond297
  %tmp166 = phi i1 [ false, %while.cond297 ], [ %cmp302, %land.rhs300 ]
  br i1 %tmp166, label %while.body305, label %while.end307

while.body305:                                    ; preds = %land.end304
  %tmp167 = load i8*, i8** %host, align 8
  %incdec.ptr306 = getelementptr inbounds i8, i8* %tmp167, i32 1
  store i8* %incdec.ptr306, i8** %host, align 8
  br label %while.cond297

while.end307:                                     ; preds = %land.end304
  %tmp168 = load i8*, i8** %host, align 8
  %tmp169 = load i8*, i8** %port, align 8
  %cmp308 = icmp uge i8* %tmp168, %tmp169
  br i1 %cmp308, label %if.then310, label %if.end311

if.then310:                                       ; preds = %while.end307
  store i32 -5, i32* %retval
  br label %return

if.end311:                                        ; preds = %while.end307
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %while.end292
  %tmp170 = load i8*, i8** %port, align 8
  %tmp171 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast313 = ptrtoint i8* %tmp170 to i64
  %sub.ptr.rhs.cast314 = ptrtoint i8* %tmp171 to i64
  %sub.ptr.sub315 = sub i64 %sub.ptr.lhs.cast313, %sub.ptr.rhs.cast314
  %cmp316 = icmp slt i64 %sub.ptr.sub315, 2
  br i1 %cmp316, label %if.then318, label %if.end319

if.then318:                                       ; preds = %if.end312
  store i32 -5, i32* %retval
  br label %return

if.end319:                                        ; preds = %if.end312
  %tmp172 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool320 = icmp ne i8* (i64)* %tmp172, null
  br i1 %tobool320, label %cond.true321, label %cond.false326

cond.true321:                                     ; preds = %if.end319
  %tmp173 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp174 = load i8*, i8** %port, align 8
  %tmp175 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast322 = ptrtoint i8* %tmp174 to i64
  %sub.ptr.rhs.cast323 = ptrtoint i8* %tmp175 to i64
  %sub.ptr.sub324 = sub i64 %sub.ptr.lhs.cast322, %sub.ptr.rhs.cast323
  %call325 = call i8* %tmp173(i64 %sub.ptr.sub324)
  br label %cond.end331

cond.false326:                                    ; preds = %if.end319
  %tmp176 = load i8*, i8** %port, align 8
  %tmp177 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast327 = ptrtoint i8* %tmp176 to i64
  %sub.ptr.rhs.cast328 = ptrtoint i8* %tmp177 to i64
  %sub.ptr.sub329 = sub i64 %sub.ptr.lhs.cast327, %sub.ptr.rhs.cast328
  %call330 = call noalias i8* @malloc(i64 %sub.ptr.sub329) #8
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false326, %cond.true321
  %cond332 = phi i8* [ %call325, %cond.true321 ], [ %call330, %cond.false326 ]
  %tmp178 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host333 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp178, i32 0, i32 3
  store i8* %cond332, i8** %host333, align 8
  %tmp179 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host334 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp179, i32 0, i32 3
  %tmp180 = load i8*, i8** %host334, align 8
  %cmp335 = icmp eq i8* %tmp180, null
  br i1 %cmp335, label %if.then337, label %if.end338

if.then337:                                       ; preds = %cond.end331
  store i32 -4, i32* %retval
  br label %return

if.end338:                                        ; preds = %cond.end331
  %tmp181 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host339 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp181, i32 0, i32 3
  %tmp182 = load i8*, i8** %host339, align 8
  %tmp183 = load i8*, i8** %host, align 8
  %add.ptr340 = getelementptr inbounds i8, i8* %tmp183, i64 1
  %tmp184 = load i8*, i8** %port, align 8
  %tmp185 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast341 = ptrtoint i8* %tmp184 to i64
  %sub.ptr.rhs.cast342 = ptrtoint i8* %tmp185 to i64
  %sub.ptr.sub343 = sub i64 %sub.ptr.lhs.cast341, %sub.ptr.rhs.cast342
  %sub344 = sub nsw i64 %sub.ptr.sub343, 1
  %call345 = call i8* @osip_clrncpy(i8* %tmp182, i8* %add.ptr340, i64 %sub344)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end338, %if.then337, %if.then318, %if.then310, %if.then270, %if.then251, %if.then206, %if.then187, %if.then154, %if.then135, %if.then120, %if.then101, %if.then77, %if.end69, %if.then68, %if.then54, %if.then34, %if.then23, %if.then9, %if.then5, %if.then
  %tmp186 = load i32, i32* %retval
  ret i32 %tmp186
}

; Function Attrs: nounwind uwtable
define void @__osip_uri_unescape(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  %alloc = alloca i64, align 8
  %in = alloca i8, align 1
  %index = alloca i32, align 4
  %hex = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %tmp = load i8*, i8** %string.addr, align 8
  %call = call i64 @strlen(i8* %tmp) #7
  %add = add i64 %call, 1
  store i64 %add, i64* %alloc, align 8
  store i32 0, i32* %index, align 4
  %tmp1 = load i8*, i8** %string.addr, align 8
  store i8* %tmp1, i8** %ptr, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end47, %entry
  %tmp2 = load i64, i64* %alloc, align 8
  %dec = add i64 %tmp2, -1
  store i64 %dec, i64* %alloc, align 8
  %cmp = icmp ugt i64 %dec, 0
  br i1 %cmp, label %while.body, label %while.end.loopexit

while.body:                                       ; preds = %while.cond
  %tmp3 = load i8*, i8** %ptr, align 8
  %tmp4 = load i8, i8* %tmp3, align 1
  store i8 %tmp4, i8* %in, align 1
  %tmp5 = load i8, i8* %in, align 1
  %conv = zext i8 %tmp5 to i32
  %cmp1 = icmp eq i32 37, %conv
  br i1 %cmp1, label %if.then, label %if.end47

if.then:                                          ; preds = %while.body
  %tmp6 = load i64, i64* %alloc, align 8
  %cmp3 = icmp ugt i64 %tmp6, 2
  br i1 %cmp3, label %land.lhs.true, label %if.else45

land.lhs.true:                                    ; preds = %if.then
  %tmp7 = load i8*, i8** %ptr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp7, i64 1
  %call5 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str16349, i32 0, i32 0), i32* %hex) #8
  %cmp6 = icmp eq i32 %call5, 1
  br i1 %cmp6, label %if.then8, label %if.else45

if.then8:                                         ; preds = %land.lhs.true
  %tmp8 = load i32, i32* %hex, align 4
  %conv9 = trunc i32 %tmp8 to i8
  store i8 %conv9, i8* %in, align 1
  %tmp9 = load i8*, i8** %ptr, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %tmp9, i64 2
  %tmp10 = load i8, i8* %add.ptr10, align 1
  %conv11 = sext i8 %tmp10 to i32
  %tobool = icmp ne i32 %conv11, 0
  br i1 %tobool, label %land.lhs.true12, label %if.else

land.lhs.true12:                                  ; preds = %if.then8
  %tmp11 = load i8*, i8** %ptr, align 8
  %add.ptr13 = getelementptr inbounds i8, i8* %tmp11, i64 2
  %tmp12 = load i8, i8* %add.ptr13, align 1
  %conv14 = sext i8 %tmp12 to i32
  %cmp15 = icmp sge i32 %conv14, 48
  br i1 %cmp15, label %land.lhs.true17, label %lor.lhs.false

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %tmp13 = load i8*, i8** %ptr, align 8
  %add.ptr18 = getelementptr inbounds i8, i8* %tmp13, i64 2
  %tmp14 = load i8, i8* %add.ptr18, align 1
  %conv19 = sext i8 %tmp14 to i32
  %cmp20 = icmp sle i32 %conv19, 57
  br i1 %cmp20, label %if.then41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true17, %land.lhs.true12
  %tmp15 = load i8*, i8** %ptr, align 8
  %add.ptr22 = getelementptr inbounds i8, i8* %tmp15, i64 2
  %tmp16 = load i8, i8* %add.ptr22, align 1
  %conv23 = sext i8 %tmp16 to i32
  %cmp24 = icmp sge i32 %conv23, 97
  br i1 %cmp24, label %land.lhs.true26, label %lor.lhs.false31

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %tmp17 = load i8*, i8** %ptr, align 8
  %add.ptr27 = getelementptr inbounds i8, i8* %tmp17, i64 2
  %tmp18 = load i8, i8* %add.ptr27, align 1
  %conv28 = sext i8 %tmp18 to i32
  %cmp29 = icmp sle i32 %conv28, 102
  br i1 %cmp29, label %if.then41, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true26, %lor.lhs.false
  %tmp19 = load i8*, i8** %ptr, align 8
  %add.ptr32 = getelementptr inbounds i8, i8* %tmp19, i64 2
  %tmp20 = load i8, i8* %add.ptr32, align 1
  %conv33 = sext i8 %tmp20 to i32
  %cmp34 = icmp sge i32 %conv33, 65
  br i1 %cmp34, label %land.lhs.true36, label %if.else

land.lhs.true36:                                  ; preds = %lor.lhs.false31
  %tmp21 = load i8*, i8** %ptr, align 8
  %add.ptr37 = getelementptr inbounds i8, i8* %tmp21, i64 2
  %tmp22 = load i8, i8* %add.ptr37, align 1
  %conv38 = sext i8 %tmp22 to i32
  %cmp39 = icmp sle i32 %conv38, 70
  br i1 %cmp39, label %if.then41, label %if.else

if.then41:                                        ; preds = %land.lhs.true36, %land.lhs.true26, %land.lhs.true17
  %tmp23 = load i64, i64* %alloc, align 8
  %sub = sub i64 %tmp23, 2
  store i64 %sub, i64* %alloc, align 8
  %tmp24 = load i8*, i8** %ptr, align 8
  %add.ptr42 = getelementptr inbounds i8, i8* %tmp24, i64 2
  store i8* %add.ptr42, i8** %ptr, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true36, %lor.lhs.false31, %if.then8
  %tmp25 = load i64, i64* %alloc, align 8
  %sub43 = sub i64 %tmp25, 1
  store i64 %sub43, i64* %alloc, align 8
  %tmp26 = load i8*, i8** %ptr, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %tmp26, i64 1
  store i8* %add.ptr44, i8** %ptr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then41
  br label %if.end46

if.else45:                                        ; preds = %land.lhs.true, %if.then
  br label %while.end

if.end46:                                         ; preds = %if.end
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %while.body
  %tmp27 = load i8, i8* %in, align 1
  %tmp28 = load i32, i32* %index, align 4
  %inc = add nsw i32 %tmp28, 1
  store i32 %inc, i32* %index, align 4
  %idxprom = sext i32 %tmp28 to i64
  %tmp29 = load i8*, i8** %string.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp29, i64 %idxprom
  store i8 %tmp27, i8* %arrayidx, align 1
  %tmp30 = load i8*, i8** %ptr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp30, i32 1
  store i8* %incdec.ptr, i8** %ptr, align 8
  br label %while.cond

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.else45
  %tmp31 = load i32, i32* %index, align 4
  %idxprom48 = sext i32 %tmp31 to i64
  %tmp32 = load i8*, i8** %string.addr, align 8
  %arrayidx49 = getelementptr inbounds i8, i8* %tmp32, i64 %idxprom48
  store i8 0, i8* %arrayidx49, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_parse_headers(%struct.osip_uri* %url, i8* %headers) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri*, align 8
  %headers.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %and = alloca i8*, align 8
  %equal = alloca i8*, align 8
  %hname = alloca i8*, align 8
  %hvalue = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %headers, i8** %headers.addr, align 8
  %tmp = load i8*, i8** %headers.addr, align 8
  %call = call i8* @strchr(i8* %tmp, i32 61) #7
  store i8* %call, i8** %equal, align 8
  %tmp1 = load i8*, i8** %headers.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp1, i64 1
  %call1 = call i8* @strchr(i8* %add.ptr, i32 38) #7
  store i8* %call1, i8** %and, align 8
  %tmp2 = load i8*, i8** %equal, align 8
  %cmp = icmp eq i8* %tmp2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end
  %tmp3 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp3, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp5 = load i8*, i8** %equal, align 8
  %tmp6 = load i8*, i8** %headers.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call2 = call i8* %tmp4(i64 %sub.ptr.sub)
  br label %cond.end

cond.false:                                       ; preds = %do.body
  %tmp7 = load i8*, i8** %equal, align 8
  %tmp8 = load i8*, i8** %headers.addr, align 8
  %sub.ptr.lhs.cast3 = ptrtoint i8* %tmp7 to i64
  %sub.ptr.rhs.cast4 = ptrtoint i8* %tmp8 to i64
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4
  %call6 = call noalias i8* @malloc(i64 %sub.ptr.sub5) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call6, %cond.false ]
  store i8* %cond, i8** %hname, align 8
  %tmp9 = load i8*, i8** %hname, align 8
  %cmp7 = icmp eq i8* %tmp9, null
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end9:                                          ; preds = %cond.end
  %tmp10 = load i8*, i8** %hname, align 8
  %tmp11 = load i8*, i8** %headers.addr, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %tmp11, i64 1
  %tmp12 = load i8*, i8** %equal, align 8
  %tmp13 = load i8*, i8** %headers.addr, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast12 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %sub = sub nsw i64 %sub.ptr.sub13, 1
  %call14 = call i8* @osip_strncpy(i8* %tmp10, i8* %add.ptr10, i64 %sub)
  %tmp14 = load i8*, i8** %hname, align 8
  call void @__osip_uri_unescape(i8* %tmp14)
  %tmp15 = load i8*, i8** %and, align 8
  %cmp15 = icmp ne i8* %tmp15, null
  br i1 %cmp15, label %if.then16, label %if.else58

if.then16:                                        ; preds = %if.end9
  %tmp16 = load i8*, i8** %and, align 8
  %tmp17 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i8* %tmp16 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %cmp20 = icmp slt i64 %sub.ptr.sub19, 2
  br i1 %cmp20, label %if.then21, label %if.end28

if.then21:                                        ; preds = %if.then16
  %tmp18 = load i8*, i8** %hname, align 8
  %cmp22 = icmp ne i8* %tmp18, null
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.then21
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool24 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.then23
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load i8*, i8** %hname, align 8
  call void %tmp20(i8* %tmp21)
  br label %if.end26

if.else:                                          ; preds = %if.then23
  %tmp22 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp22) #8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then21
  store i32 -5, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.then16
  %tmp23 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool29 = icmp ne i8* (i64)* %tmp23, null
  br i1 %tobool29, label %cond.true30, label %cond.false35

cond.true30:                                      ; preds = %if.end28
  %tmp24 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp25 = load i8*, i8** %and, align 8
  %tmp26 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast31 = ptrtoint i8* %tmp25 to i64
  %sub.ptr.rhs.cast32 = ptrtoint i8* %tmp26 to i64
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32
  %call34 = call i8* %tmp24(i64 %sub.ptr.sub33)
  br label %cond.end40

cond.false35:                                     ; preds = %if.end28
  %tmp27 = load i8*, i8** %and, align 8
  %tmp28 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast36 = ptrtoint i8* %tmp27 to i64
  %sub.ptr.rhs.cast37 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast37
  %call39 = call noalias i8* @malloc(i64 %sub.ptr.sub38) #8
  br label %cond.end40

cond.end40:                                       ; preds = %cond.false35, %cond.true30
  %cond41 = phi i8* [ %call34, %cond.true30 ], [ %call39, %cond.false35 ]
  store i8* %cond41, i8** %hvalue, align 8
  %tmp29 = load i8*, i8** %hvalue, align 8
  %cmp42 = icmp eq i8* %tmp29, null
  br i1 %cmp42, label %if.then43, label %if.end51

if.then43:                                        ; preds = %cond.end40
  %tmp30 = load i8*, i8** %hname, align 8
  %cmp44 = icmp ne i8* %tmp30, null
  br i1 %cmp44, label %if.then45, label %if.end50

if.then45:                                        ; preds = %if.then43
  %tmp31 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool46 = icmp ne void (i8*)* %tmp31, null
  br i1 %tobool46, label %if.then47, label %if.else48

if.then47:                                        ; preds = %if.then45
  %tmp32 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp33 = load i8*, i8** %hname, align 8
  call void %tmp32(i8* %tmp33)
  br label %if.end49

if.else48:                                        ; preds = %if.then45
  %tmp34 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp34) #8
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  store i32 -4, i32* %retval
  br label %return

if.end51:                                         ; preds = %cond.end40
  %tmp35 = load i8*, i8** %hvalue, align 8
  %tmp36 = load i8*, i8** %equal, align 8
  %add.ptr52 = getelementptr inbounds i8, i8* %tmp36, i64 1
  %tmp37 = load i8*, i8** %and, align 8
  %tmp38 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast53 = ptrtoint i8* %tmp37 to i64
  %sub.ptr.rhs.cast54 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.sub55 = sub i64 %sub.ptr.lhs.cast53, %sub.ptr.rhs.cast54
  %sub56 = sub nsw i64 %sub.ptr.sub55, 1
  %call57 = call i8* @osip_strncpy(i8* %tmp35, i8* %add.ptr52, i64 %sub56)
  %tmp39 = load i8*, i8** %hvalue, align 8
  call void @__osip_uri_unescape(i8* %tmp39)
  br label %if.end110

if.else58:                                        ; preds = %if.end9
  %tmp40 = load i8*, i8** %headers.addr, align 8
  %tmp41 = load i8*, i8** %headers.addr, align 8
  %call59 = call i64 @strlen(i8* %tmp41) #7
  %add.ptr60 = getelementptr inbounds i8, i8* %tmp40, i64 %call59
  %tmp42 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast61 = ptrtoint i8* %add.ptr60 to i64
  %sub.ptr.rhs.cast62 = ptrtoint i8* %tmp42 to i64
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62
  %add = add nsw i64 %sub.ptr.sub63, 1
  %cmp64 = icmp slt i64 %add, 2
  br i1 %cmp64, label %if.then65, label %if.end73

if.then65:                                        ; preds = %if.else58
  %tmp43 = load i8*, i8** %hname, align 8
  %cmp66 = icmp ne i8* %tmp43, null
  br i1 %cmp66, label %if.then67, label %if.end72

if.then67:                                        ; preds = %if.then65
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool68 = icmp ne void (i8*)* %tmp44, null
  br i1 %tobool68, label %if.then69, label %if.else70

if.then69:                                        ; preds = %if.then67
  %tmp45 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp46 = load i8*, i8** %hname, align 8
  call void %tmp45(i8* %tmp46)
  br label %if.end71

if.else70:                                        ; preds = %if.then67
  %tmp47 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp47) #8
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then69
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then65
  store i32 -5, i32* %retval
  br label %return

if.end73:                                         ; preds = %if.else58
  %tmp48 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool74 = icmp ne i8* (i64)* %tmp48, null
  br i1 %tobool74, label %cond.true75, label %cond.false83

cond.true75:                                      ; preds = %if.end73
  %tmp49 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp50 = load i8*, i8** %headers.addr, align 8
  %tmp51 = load i8*, i8** %headers.addr, align 8
  %call76 = call i64 @strlen(i8* %tmp51) #7
  %add.ptr77 = getelementptr inbounds i8, i8* %tmp50, i64 %call76
  %tmp52 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast78 = ptrtoint i8* %add.ptr77 to i64
  %sub.ptr.rhs.cast79 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79
  %add81 = add nsw i64 %sub.ptr.sub80, 1
  %call82 = call i8* %tmp49(i64 %add81)
  br label %cond.end91

cond.false83:                                     ; preds = %if.end73
  %tmp53 = load i8*, i8** %headers.addr, align 8
  %tmp54 = load i8*, i8** %headers.addr, align 8
  %call84 = call i64 @strlen(i8* %tmp54) #7
  %add.ptr85 = getelementptr inbounds i8, i8* %tmp53, i64 %call84
  %tmp55 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast86 = ptrtoint i8* %add.ptr85 to i64
  %sub.ptr.rhs.cast87 = ptrtoint i8* %tmp55 to i64
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87
  %add89 = add nsw i64 %sub.ptr.sub88, 1
  %call90 = call noalias i8* @malloc(i64 %add89) #8
  br label %cond.end91

cond.end91:                                       ; preds = %cond.false83, %cond.true75
  %cond92 = phi i8* [ %call82, %cond.true75 ], [ %call90, %cond.false83 ]
  store i8* %cond92, i8** %hvalue, align 8
  %tmp56 = load i8*, i8** %hvalue, align 8
  %cmp93 = icmp eq i8* %tmp56, null
  br i1 %cmp93, label %if.then94, label %if.end102

if.then94:                                        ; preds = %cond.end91
  %tmp57 = load i8*, i8** %hname, align 8
  %cmp95 = icmp ne i8* %tmp57, null
  br i1 %cmp95, label %if.then96, label %if.end101

if.then96:                                        ; preds = %if.then94
  %tmp58 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool97 = icmp ne void (i8*)* %tmp58, null
  br i1 %tobool97, label %if.then98, label %if.else99

if.then98:                                        ; preds = %if.then96
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp60 = load i8*, i8** %hname, align 8
  call void %tmp59(i8* %tmp60)
  br label %if.end100

if.else99:                                        ; preds = %if.then96
  %tmp61 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp61) #8
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then98
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then94
  store i32 -4, i32* %retval
  br label %return

if.end102:                                        ; preds = %cond.end91
  %tmp62 = load i8*, i8** %hvalue, align 8
  %tmp63 = load i8*, i8** %equal, align 8
  %add.ptr103 = getelementptr inbounds i8, i8* %tmp63, i64 1
  %tmp64 = load i8*, i8** %headers.addr, align 8
  %tmp65 = load i8*, i8** %headers.addr, align 8
  %call104 = call i64 @strlen(i8* %tmp65) #7
  %add.ptr105 = getelementptr inbounds i8, i8* %tmp64, i64 %call104
  %tmp66 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast106 = ptrtoint i8* %add.ptr105 to i64
  %sub.ptr.rhs.cast107 = ptrtoint i8* %tmp66 to i64
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107
  %call109 = call i8* @osip_strncpy(i8* %tmp62, i8* %add.ptr103, i64 %sub.ptr.sub108)
  %tmp67 = load i8*, i8** %hvalue, align 8
  call void @__osip_uri_unescape(i8* %tmp67)
  br label %if.end110

if.end110:                                        ; preds = %if.end102, %if.end51
  %tmp68 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp68, i32 0, i32 6
  %tmp69 = load i8*, i8** %hname, align 8
  %tmp70 = load i8*, i8** %hvalue, align 8
  %call111 = call i32 @osip_uri_param_add(%struct.osip_list* %url_headers, i8* %tmp69, i8* %tmp70)
  store i32 %call111, i32* %i, align 4
  %tmp71 = load i32, i32* %i, align 4
  %cmp112 = icmp ne i32 %tmp71, 0
  br i1 %cmp112, label %if.then113, label %if.end128

if.then113:                                       ; preds = %if.end110
  %tmp72 = load i8*, i8** %hname, align 8
  %cmp114 = icmp ne i8* %tmp72, null
  br i1 %cmp114, label %if.then115, label %if.end120

if.then115:                                       ; preds = %if.then113
  %tmp73 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool116 = icmp ne void (i8*)* %tmp73, null
  br i1 %tobool116, label %if.then117, label %if.else118

if.then117:                                       ; preds = %if.then115
  %tmp74 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp75 = load i8*, i8** %hname, align 8
  call void %tmp74(i8* %tmp75)
  br label %if.end119

if.else118:                                       ; preds = %if.then115
  %tmp76 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp76) #8
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.then117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then113
  %tmp77 = load i8*, i8** %hvalue, align 8
  %cmp121 = icmp ne i8* %tmp77, null
  br i1 %cmp121, label %if.then122, label %if.end127

if.then122:                                       ; preds = %if.end120
  %tmp78 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool123 = icmp ne void (i8*)* %tmp78, null
  br i1 %tobool123, label %if.then124, label %if.else125

if.then124:                                       ; preds = %if.then122
  %tmp79 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp80 = load i8*, i8** %hvalue, align 8
  call void %tmp79(i8* %tmp80)
  br label %if.end126

if.else125:                                       ; preds = %if.then122
  %tmp81 = load i8*, i8** %hvalue, align 8
  call void @free(i8* %tmp81) #8
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then124
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end120
  %tmp82 = load i32, i32* %i, align 4
  store i32 %tmp82, i32* %retval
  br label %return

if.end128:                                        ; preds = %if.end110
  %tmp83 = load i8*, i8** %and, align 8
  %cmp129 = icmp eq i8* %tmp83, null
  br i1 %cmp129, label %if.then130, label %if.else131

if.then130:                                       ; preds = %if.end128
  store i8* null, i8** %equal, align 8
  br label %if.end138

if.else131:                                       ; preds = %if.end128
  %tmp84 = load i8*, i8** %and, align 8
  store i8* %tmp84, i8** %headers.addr, align 8
  %tmp85 = load i8*, i8** %headers.addr, align 8
  %call132 = call i8* @strchr(i8* %tmp85, i32 61) #7
  store i8* %call132, i8** %equal, align 8
  %tmp86 = load i8*, i8** %headers.addr, align 8
  %add.ptr133 = getelementptr inbounds i8, i8* %tmp86, i64 1
  %call134 = call i8* @strchr(i8* %add.ptr133, i32 38) #7
  store i8* %call134, i8** %and, align 8
  %tmp87 = load i8*, i8** %equal, align 8
  %cmp135 = icmp eq i8* %tmp87, null
  br i1 %cmp135, label %if.then136, label %if.end137

if.then136:                                       ; preds = %if.else131
  store i32 -5, i32* %retval
  br label %return

if.end137:                                        ; preds = %if.else131
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then130
  br label %do.cond

do.cond:                                          ; preds = %if.end138
  %tmp88 = load i8*, i8** %equal, align 8
  %cmp139 = icmp ne i8* %tmp88, null
  br i1 %cmp139, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then136, %if.end127, %if.end101, %if.end72, %if.end50, %if.end27, %if.then8, %if.then
  %tmp89 = load i32, i32* %retval
  ret i32 %tmp89
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_parse_params(%struct.osip_uri* %url, i8* %params) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri*, align 8
  %params.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %pname = alloca i8*, align 8
  %pvalue = alloca i8*, align 8
  %comma = alloca i8*, align 8
  %equal = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %params, i8** %params.addr, align 8
  %tmp = load i8*, i8** %params.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp, i64 1
  %call = call i8* @next_separator(i8* %add.ptr, i32 61, i32 59)
  store i8* %call, i8** %equal, align 8
  %tmp1 = load i8*, i8** %params.addr, align 8
  %add.ptr1 = getelementptr inbounds i8, i8* %tmp1, i64 1
  %call2 = call i8* @strchr(i8* %add.ptr1, i32 59) #7
  store i8* %call2, i8** %comma, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end82, %entry
  %tmp2 = load i8*, i8** %comma, align 8
  %cmp = icmp ne i8* %tmp2, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp3 = load i8*, i8** %equal, align 8
  %cmp3 = icmp eq i8* %tmp3, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %tmp4 = load i8*, i8** %comma, align 8
  store i8* %tmp4, i8** %equal, align 8
  store i8* null, i8** %pvalue, align 8
  br label %if.end22

if.else:                                          ; preds = %while.body
  %tmp5 = load i8*, i8** %comma, align 8
  %tmp6 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp4 = icmp slt i64 %sub.ptr.sub, 2
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp7, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %tmp8 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp9 = load i8*, i8** %comma, align 8
  %tmp10 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast6 = ptrtoint i8* %tmp9 to i64
  %sub.ptr.rhs.cast7 = ptrtoint i8* %tmp10 to i64
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7
  %call9 = call i8* %tmp8(i64 %sub.ptr.sub8)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %tmp11 = load i8*, i8** %comma, align 8
  %tmp12 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast10 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.rhs.cast11 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %call13 = call noalias i8* @malloc(i64 %sub.ptr.sub12) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call9, %cond.true ], [ %call13, %cond.false ]
  store i8* %cond, i8** %pvalue, align 8
  %tmp13 = load i8*, i8** %pvalue, align 8
  %cmp14 = icmp eq i8* %tmp13, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end16:                                         ; preds = %cond.end
  %tmp14 = load i8*, i8** %pvalue, align 8
  %tmp15 = load i8*, i8** %equal, align 8
  %add.ptr17 = getelementptr inbounds i8, i8* %tmp15, i64 1
  %tmp16 = load i8*, i8** %comma, align 8
  %tmp17 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast18 = ptrtoint i8* %tmp16 to i64
  %sub.ptr.rhs.cast19 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %sub = sub nsw i64 %sub.ptr.sub20, 1
  %call21 = call i8* @osip_strncpy(i8* %tmp14, i8* %add.ptr17, i64 %sub)
  %tmp18 = load i8*, i8** %pvalue, align 8
  call void @__osip_uri_unescape(i8* %tmp18)
  br label %if.end22

if.end22:                                         ; preds = %if.end16, %if.then
  %tmp19 = load i8*, i8** %equal, align 8
  %tmp20 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast23 = ptrtoint i8* %tmp19 to i64
  %sub.ptr.rhs.cast24 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end22
  %tmp21 = load i8*, i8** %pvalue, align 8
  %cmp28 = icmp ne i8* %tmp21, null
  br i1 %cmp28, label %if.then29, label %if.end34

if.then29:                                        ; preds = %if.then27
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool30 = icmp ne void (i8*)* %tmp22, null
  br i1 %tobool30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.then29
  %tmp23 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp24 = load i8*, i8** %pvalue, align 8
  call void %tmp23(i8* %tmp24)
  br label %if.end33

if.else32:                                        ; preds = %if.then29
  %tmp25 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp25) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then27
  store i32 -5, i32* %retval
  br label %return

if.end35:                                         ; preds = %if.end22
  %tmp26 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool36 = icmp ne i8* (i64)* %tmp26, null
  br i1 %tobool36, label %cond.true37, label %cond.false42

cond.true37:                                      ; preds = %if.end35
  %tmp27 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp28 = load i8*, i8** %equal, align 8
  %tmp29 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast38 = ptrtoint i8* %tmp28 to i64
  %sub.ptr.rhs.cast39 = ptrtoint i8* %tmp29 to i64
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39
  %call41 = call i8* %tmp27(i64 %sub.ptr.sub40)
  br label %cond.end47

cond.false42:                                     ; preds = %if.end35
  %tmp30 = load i8*, i8** %equal, align 8
  %tmp31 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast43 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.rhs.cast44 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.sub45 = sub i64 %sub.ptr.lhs.cast43, %sub.ptr.rhs.cast44
  %call46 = call noalias i8* @malloc(i64 %sub.ptr.sub45) #8
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false42, %cond.true37
  %cond48 = phi i8* [ %call41, %cond.true37 ], [ %call46, %cond.false42 ]
  store i8* %cond48, i8** %pname, align 8
  %tmp32 = load i8*, i8** %pname, align 8
  %cmp49 = icmp eq i8* %tmp32, null
  br i1 %cmp49, label %if.then50, label %if.end58

if.then50:                                        ; preds = %cond.end47
  %tmp33 = load i8*, i8** %pvalue, align 8
  %cmp51 = icmp ne i8* %tmp33, null
  br i1 %cmp51, label %if.then52, label %if.end57

if.then52:                                        ; preds = %if.then50
  %tmp34 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool53 = icmp ne void (i8*)* %tmp34, null
  br i1 %tobool53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then52
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp36 = load i8*, i8** %pvalue, align 8
  call void %tmp35(i8* %tmp36)
  br label %if.end56

if.else55:                                        ; preds = %if.then52
  %tmp37 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp37) #8
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then50
  store i32 -4, i32* %retval
  br label %return

if.end58:                                         ; preds = %cond.end47
  %tmp38 = load i8*, i8** %pname, align 8
  %tmp39 = load i8*, i8** %params.addr, align 8
  %add.ptr59 = getelementptr inbounds i8, i8* %tmp39, i64 1
  %tmp40 = load i8*, i8** %equal, align 8
  %tmp41 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast60 = ptrtoint i8* %tmp40 to i64
  %sub.ptr.rhs.cast61 = ptrtoint i8* %tmp41 to i64
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61
  %sub63 = sub nsw i64 %sub.ptr.sub62, 1
  %call64 = call i8* @osip_strncpy(i8* %tmp38, i8* %add.ptr59, i64 %sub63)
  %tmp42 = load i8*, i8** %pname, align 8
  call void @__osip_uri_unescape(i8* %tmp42)
  %tmp43 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp43, i32 0, i32 5
  %tmp44 = load i8*, i8** %pname, align 8
  %tmp45 = load i8*, i8** %pvalue, align 8
  %call65 = call i32 @osip_uri_param_add(%struct.osip_list* %url_params, i8* %tmp44, i8* %tmp45)
  store i32 %call65, i32* %i, align 4
  %tmp46 = load i32, i32* %i, align 4
  %cmp66 = icmp ne i32 %tmp46, 0
  br i1 %cmp66, label %if.then67, label %if.end82

if.then67:                                        ; preds = %if.end58
  %tmp47 = load i8*, i8** %pname, align 8
  %cmp68 = icmp ne i8* %tmp47, null
  br i1 %cmp68, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.then67
  %tmp48 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool70 = icmp ne void (i8*)* %tmp48, null
  br i1 %tobool70, label %if.then71, label %if.else72

if.then71:                                        ; preds = %if.then69
  %tmp49 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp50 = load i8*, i8** %pname, align 8
  call void %tmp49(i8* %tmp50)
  br label %if.end73

if.else72:                                        ; preds = %if.then69
  %tmp51 = load i8*, i8** %pname, align 8
  call void @free(i8* %tmp51) #8
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then71
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then67
  %tmp52 = load i8*, i8** %pvalue, align 8
  %cmp75 = icmp ne i8* %tmp52, null
  br i1 %cmp75, label %if.then76, label %if.end81

if.then76:                                        ; preds = %if.end74
  %tmp53 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool77 = icmp ne void (i8*)* %tmp53, null
  br i1 %tobool77, label %if.then78, label %if.else79

if.then78:                                        ; preds = %if.then76
  %tmp54 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp55 = load i8*, i8** %pvalue, align 8
  call void %tmp54(i8* %tmp55)
  br label %if.end80

if.else79:                                        ; preds = %if.then76
  %tmp56 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp56) #8
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end74
  store i32 -4, i32* %retval
  br label %return

if.end82:                                         ; preds = %if.end58
  %tmp57 = load i8*, i8** %comma, align 8
  store i8* %tmp57, i8** %params.addr, align 8
  %tmp58 = load i8*, i8** %params.addr, align 8
  %add.ptr83 = getelementptr inbounds i8, i8* %tmp58, i64 1
  %call84 = call i8* @next_separator(i8* %add.ptr83, i32 61, i32 59)
  store i8* %call84, i8** %equal, align 8
  %tmp59 = load i8*, i8** %params.addr, align 8
  %add.ptr85 = getelementptr inbounds i8, i8* %tmp59, i64 1
  %call86 = call i8* @strchr(i8* %add.ptr85, i32 59) #7
  store i8* %call86, i8** %comma, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp60 = load i8*, i8** %params.addr, align 8
  %tmp61 = load i8*, i8** %params.addr, align 8
  %call87 = call i64 @strlen(i8* %tmp61) #7
  %add.ptr88 = getelementptr inbounds i8, i8* %tmp60, i64 %call87
  store i8* %add.ptr88, i8** %comma, align 8
  %tmp62 = load i8*, i8** %equal, align 8
  %cmp89 = icmp eq i8* %tmp62, null
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %while.end
  %tmp63 = load i8*, i8** %comma, align 8
  store i8* %tmp63, i8** %equal, align 8
  store i8* null, i8** %pvalue, align 8
  br label %if.end120

if.else91:                                        ; preds = %while.end
  %tmp64 = load i8*, i8** %comma, align 8
  %tmp65 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast92 = ptrtoint i8* %tmp64 to i64
  %sub.ptr.rhs.cast93 = ptrtoint i8* %tmp65 to i64
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93
  %cmp95 = icmp slt i64 %sub.ptr.sub94, 2
  br i1 %cmp95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.else91
  store i32 -5, i32* %retval
  br label %return

if.end97:                                         ; preds = %if.else91
  %tmp66 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool98 = icmp ne i8* (i64)* %tmp66, null
  br i1 %tobool98, label %cond.true99, label %cond.false104

cond.true99:                                      ; preds = %if.end97
  %tmp67 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp68 = load i8*, i8** %comma, align 8
  %tmp69 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast100 = ptrtoint i8* %tmp68 to i64
  %sub.ptr.rhs.cast101 = ptrtoint i8* %tmp69 to i64
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101
  %call103 = call i8* %tmp67(i64 %sub.ptr.sub102)
  br label %cond.end109

cond.false104:                                    ; preds = %if.end97
  %tmp70 = load i8*, i8** %comma, align 8
  %tmp71 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast105 = ptrtoint i8* %tmp70 to i64
  %sub.ptr.rhs.cast106 = ptrtoint i8* %tmp71 to i64
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106
  %call108 = call noalias i8* @malloc(i64 %sub.ptr.sub107) #8
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false104, %cond.true99
  %cond110 = phi i8* [ %call103, %cond.true99 ], [ %call108, %cond.false104 ]
  store i8* %cond110, i8** %pvalue, align 8
  %tmp72 = load i8*, i8** %pvalue, align 8
  %cmp111 = icmp eq i8* %tmp72, null
  br i1 %cmp111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %cond.end109
  store i32 -4, i32* %retval
  br label %return

if.end113:                                        ; preds = %cond.end109
  %tmp73 = load i8*, i8** %pvalue, align 8
  %tmp74 = load i8*, i8** %equal, align 8
  %add.ptr114 = getelementptr inbounds i8, i8* %tmp74, i64 1
  %tmp75 = load i8*, i8** %comma, align 8
  %tmp76 = load i8*, i8** %equal, align 8
  %sub.ptr.lhs.cast115 = ptrtoint i8* %tmp75 to i64
  %sub.ptr.rhs.cast116 = ptrtoint i8* %tmp76 to i64
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116
  %sub118 = sub nsw i64 %sub.ptr.sub117, 1
  %call119 = call i8* @osip_strncpy(i8* %tmp73, i8* %add.ptr114, i64 %sub118)
  %tmp77 = load i8*, i8** %pvalue, align 8
  call void @__osip_uri_unescape(i8* %tmp77)
  br label %if.end120

if.end120:                                        ; preds = %if.end113, %if.then90
  %tmp78 = load i8*, i8** %equal, align 8
  %tmp79 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast121 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.rhs.cast122 = ptrtoint i8* %tmp79 to i64
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122
  %cmp124 = icmp slt i64 %sub.ptr.sub123, 2
  br i1 %cmp124, label %if.then125, label %if.end133

if.then125:                                       ; preds = %if.end120
  %tmp80 = load i8*, i8** %pvalue, align 8
  %cmp126 = icmp ne i8* %tmp80, null
  br i1 %cmp126, label %if.then127, label %if.end132

if.then127:                                       ; preds = %if.then125
  %tmp81 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool128 = icmp ne void (i8*)* %tmp81, null
  br i1 %tobool128, label %if.then129, label %if.else130

if.then129:                                       ; preds = %if.then127
  %tmp82 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp83 = load i8*, i8** %pvalue, align 8
  call void %tmp82(i8* %tmp83)
  br label %if.end131

if.else130:                                       ; preds = %if.then127
  %tmp84 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp84) #8
  br label %if.end131

if.end131:                                        ; preds = %if.else130, %if.then129
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then125
  store i32 -5, i32* %retval
  br label %return

if.end133:                                        ; preds = %if.end120
  %tmp85 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool134 = icmp ne i8* (i64)* %tmp85, null
  br i1 %tobool134, label %cond.true135, label %cond.false140

cond.true135:                                     ; preds = %if.end133
  %tmp86 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp87 = load i8*, i8** %equal, align 8
  %tmp88 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast136 = ptrtoint i8* %tmp87 to i64
  %sub.ptr.rhs.cast137 = ptrtoint i8* %tmp88 to i64
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137
  %call139 = call i8* %tmp86(i64 %sub.ptr.sub138)
  br label %cond.end145

cond.false140:                                    ; preds = %if.end133
  %tmp89 = load i8*, i8** %equal, align 8
  %tmp90 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast141 = ptrtoint i8* %tmp89 to i64
  %sub.ptr.rhs.cast142 = ptrtoint i8* %tmp90 to i64
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142
  %call144 = call noalias i8* @malloc(i64 %sub.ptr.sub143) #8
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false140, %cond.true135
  %cond146 = phi i8* [ %call139, %cond.true135 ], [ %call144, %cond.false140 ]
  store i8* %cond146, i8** %pname, align 8
  %tmp91 = load i8*, i8** %pname, align 8
  %cmp147 = icmp eq i8* %tmp91, null
  br i1 %cmp147, label %if.then148, label %if.end156

if.then148:                                       ; preds = %cond.end145
  %tmp92 = load i8*, i8** %pvalue, align 8
  %cmp149 = icmp ne i8* %tmp92, null
  br i1 %cmp149, label %if.then150, label %if.end155

if.then150:                                       ; preds = %if.then148
  %tmp93 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool151 = icmp ne void (i8*)* %tmp93, null
  br i1 %tobool151, label %if.then152, label %if.else153

if.then152:                                       ; preds = %if.then150
  %tmp94 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp95 = load i8*, i8** %pvalue, align 8
  call void %tmp94(i8* %tmp95)
  br label %if.end154

if.else153:                                       ; preds = %if.then150
  %tmp96 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp96) #8
  br label %if.end154

if.end154:                                        ; preds = %if.else153, %if.then152
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then148
  store i32 -4, i32* %retval
  br label %return

if.end156:                                        ; preds = %cond.end145
  %tmp97 = load i8*, i8** %pname, align 8
  %tmp98 = load i8*, i8** %params.addr, align 8
  %add.ptr157 = getelementptr inbounds i8, i8* %tmp98, i64 1
  %tmp99 = load i8*, i8** %equal, align 8
  %tmp100 = load i8*, i8** %params.addr, align 8
  %sub.ptr.lhs.cast158 = ptrtoint i8* %tmp99 to i64
  %sub.ptr.rhs.cast159 = ptrtoint i8* %tmp100 to i64
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159
  %sub161 = sub nsw i64 %sub.ptr.sub160, 1
  %call162 = call i8* @osip_strncpy(i8* %tmp97, i8* %add.ptr157, i64 %sub161)
  %tmp101 = load i8*, i8** %pname, align 8
  call void @__osip_uri_unescape(i8* %tmp101)
  %tmp102 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params163 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp102, i32 0, i32 5
  %tmp103 = load i8*, i8** %pname, align 8
  %tmp104 = load i8*, i8** %pvalue, align 8
  %call164 = call i32 @osip_uri_param_add(%struct.osip_list* %url_params163, i8* %tmp103, i8* %tmp104)
  store i32 %call164, i32* %i, align 4
  %tmp105 = load i32, i32* %i, align 4
  %cmp165 = icmp ne i32 %tmp105, 0
  br i1 %cmp165, label %if.then166, label %if.end181

if.then166:                                       ; preds = %if.end156
  %tmp106 = load i8*, i8** %pname, align 8
  %cmp167 = icmp ne i8* %tmp106, null
  br i1 %cmp167, label %if.then168, label %if.end173

if.then168:                                       ; preds = %if.then166
  %tmp107 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool169 = icmp ne void (i8*)* %tmp107, null
  br i1 %tobool169, label %if.then170, label %if.else171

if.then170:                                       ; preds = %if.then168
  %tmp108 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp109 = load i8*, i8** %pname, align 8
  call void %tmp108(i8* %tmp109)
  br label %if.end172

if.else171:                                       ; preds = %if.then168
  %tmp110 = load i8*, i8** %pname, align 8
  call void @free(i8* %tmp110) #8
  br label %if.end172

if.end172:                                        ; preds = %if.else171, %if.then170
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then166
  %tmp111 = load i8*, i8** %pvalue, align 8
  %cmp174 = icmp ne i8* %tmp111, null
  br i1 %cmp174, label %if.then175, label %if.end180

if.then175:                                       ; preds = %if.end173
  %tmp112 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool176 = icmp ne void (i8*)* %tmp112, null
  br i1 %tobool176, label %if.then177, label %if.else178

if.then177:                                       ; preds = %if.then175
  %tmp113 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp114 = load i8*, i8** %pvalue, align 8
  call void %tmp113(i8* %tmp114)
  br label %if.end179

if.else178:                                       ; preds = %if.then175
  %tmp115 = load i8*, i8** %pvalue, align 8
  call void @free(i8* %tmp115) #8
  br label %if.end179

if.end179:                                        ; preds = %if.else178, %if.then177
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end173
  store i32 -4, i32* %retval
  br label %return

if.end181:                                        ; preds = %if.end156
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end181, %if.end180, %if.end155, %if.end132, %if.then112, %if.then96, %if.end81, %if.end57, %if.end34, %if.then15, %if.then5
  %tmp116 = load i32, i32* %retval
  ret i32 %tmp116
}

; Function Attrs: nounwind uwtable
define void @osip_uri_set_scheme(%struct.osip_uri* %url, i8* %scheme) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %scheme.addr = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %scheme, i8** %scheme.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %scheme.addr, align 8
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme1 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 0
  store i8* %tmp1, i8** %scheme1, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_uri_get_scheme(%struct.osip_uri* %url) #0 {
entry:
  %retval = alloca i8*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %scheme, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_uri_set_username(%struct.osip_uri* %url, i8* %username) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %username.addr = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %username, i8** %username.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %username.addr, align 8
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username1 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 1
  store i8* %tmp1, i8** %username1, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_uri_get_username(%struct.osip_uri* %url) #0 {
entry:
  %retval = alloca i8*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 1
  %tmp2 = load i8*, i8** %username, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_uri_set_password(%struct.osip_uri* %url, i8* %password) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %password.addr = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %password, i8** %password.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %password.addr, align 8
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password1 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 2
  store i8* %tmp1, i8** %password1, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_uri_get_password(%struct.osip_uri* %url) #0 {
entry:
  %retval = alloca i8*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 2
  %tmp2 = load i8*, i8** %password, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_uri_set_host(%struct.osip_uri* %url, i8* %host) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %host.addr = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %host.addr, align 8
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host1 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 3
  store i8* %tmp1, i8** %host1, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_uri_get_host(%struct.osip_uri* %url) #0 {
entry:
  %retval = alloca i8*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 3
  %tmp2 = load i8*, i8** %host, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_uri_set_port(%struct.osip_uri* %url, i8* %port) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %port.addr = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8* %port, i8** %port.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %port.addr, align 8
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port1 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 4
  store i8* %tmp1, i8** %port1, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_uri_get_port(%struct.osip_uri* %url) #0 {
entry:
  %retval = alloca i8*, align 8
  %url.addr = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 4
  %tmp2 = load i8*, i8** %port, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_param_add(%struct.osip_list* %url_params, i8* %pname, i8* %pvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %url_params.addr = alloca %struct.osip_list*, align 8
  %pname.addr = alloca i8*, align 8
  %pvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %url_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_list* %url_params, %struct.osip_list** %url_params.addr, align 8
  store i8* %pname, i8** %pname.addr, align 8
  store i8* %pvalue, i8** %pvalue.addr, align 8
  %call = call i32 @osip_uri_param_init(%struct.osip_uri_param** %url_param)
  store i32 %call, i32* %i, align 4
  %tmp = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %tmp, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp1 = load i32, i32* %i, align 4
  store i32 %tmp1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param, align 8
  %tmp3 = load i8*, i8** %pname.addr, align 8
  %tmp4 = load i8*, i8** %pvalue.addr, align 8
  %call1 = call i32 @osip_uri_param_set(%struct.osip_uri_param* %tmp2, i8* %tmp3, i8* %tmp4)
  store i32 %call1, i32* %i, align 4
  %tmp5 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp5, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp6 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param, align 8
  call void @osip_uri_param_free(%struct.osip_uri_param* %tmp6)
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp8 = load %struct.osip_list*, %struct.osip_list** %url_params.addr, align 8
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param, align 8
  %tmp10 = bitcast %struct.osip_uri_param* %tmp9 to i8*
  %call5 = call i32 @osip_list_add(%struct.osip_list* %tmp8, i8* %tmp10, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_to_str(%struct.osip_uri* %url, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %len = alloca i64, align 8
  %plen = alloca i64, align 8
  %tmp = alloca i8*, align 8
  %scheme = alloca i8*, align 8
  %tmp2 = alloca i8*, align 8
  %tmp2118 = alloca i8*, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  %tmp1 = alloca i8*, align 8
  %tmp2175 = alloca i8*, align 8
  %previous_buf = alloca i8*, align 8
  %pos275 = alloca i32, align 4
  %u_header = alloca %struct.osip_uri_param*, align 8
  %tmp1283 = alloca i8*, align 8
  %tmp2285 = alloca i8*, align 8
  %previous_buf287 = alloca i8*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp3 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp3, align 8
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp5 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp5, i32 0, i32 3
  %tmp6 = load i8*, i8** %host, align 8
  %cmp2 = icmp eq i8* %tmp6, null
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %tmp7 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp7, i32 0, i32 7
  %tmp8 = load i8*, i8** %string, align 8
  %cmp3 = icmp eq i8* %tmp8, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store i32 -2, i32* %retval
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %tmp9 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme6 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %scheme6, align 8
  %cmp7 = icmp eq i8* %tmp10, null
  br i1 %cmp7, label %land.lhs.true8, label %if.end12

land.lhs.true8:                                   ; preds = %if.end5
  %tmp11 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string9 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp11, i32 0, i32 7
  %tmp12 = load i8*, i8** %string9, align 8
  %cmp10 = icmp ne i8* %tmp12, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %land.lhs.true8
  store i32 -2, i32* %retval
  br label %return

if.end12:                                         ; preds = %land.lhs.true8, %if.end5
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string13 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp13, i32 0, i32 7
  %tmp14 = load i8*, i8** %string13, align 8
  %cmp14 = icmp eq i8* %tmp14, null
  br i1 %cmp14, label %land.lhs.true15, label %if.else

land.lhs.true15:                                  ; preds = %if.end12
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme16 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %scheme16, align 8
  %cmp17 = icmp eq i8* %tmp16, null
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %land.lhs.true15
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str333, i32 0, i32 0), i8** %scheme, align 8
  br label %if.end20

if.else:                                          ; preds = %land.lhs.true15, %if.end12
  %tmp17 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme19 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %scheme19, align 8
  store i8* %tmp18, i8** %scheme, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then18
  %tmp19 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string21 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp19, i32 0, i32 7
  %tmp20 = load i8*, i8** %string21, align 8
  %cmp22 = icmp ne i8* %tmp20, null
  br i1 %cmp22, label %if.then23, label %if.end42

if.then23:                                        ; preds = %if.end20
  %tmp21 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp21, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then23
  %tmp22 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp23 = load i8*, i8** %scheme, align 8
  %call = call i64 @strlen(i8* %tmp23) #7
  %tmp24 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string24 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp24, i32 0, i32 7
  %tmp25 = load i8*, i8** %string24, align 8
  %call25 = call i64 @strlen(i8* %tmp25) #7
  %add = add i64 %call, %call25
  %add26 = add i64 %add, 3
  %call27 = call i8* %tmp22(i64 %add26)
  br label %cond.end

cond.false:                                       ; preds = %if.then23
  %tmp26 = load i8*, i8** %scheme, align 8
  %call28 = call i64 @strlen(i8* %tmp26) #7
  %tmp27 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string29 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp27, i32 0, i32 7
  %tmp28 = load i8*, i8** %string29, align 8
  %call30 = call i64 @strlen(i8* %tmp28) #7
  %add31 = add i64 %call28, %call30
  %add32 = add i64 %add31, 3
  %call33 = call noalias i8* @malloc(i64 %add32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call27, %cond.true ], [ %call33, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp29 = load i8*, i8** %buf, align 8
  %cmp34 = icmp eq i8* %tmp29, null
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end36:                                         ; preds = %cond.end
  %tmp30 = load i8*, i8** %buf, align 8
  %tmp31 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp30, i8** %tmp31, align 8
  %tmp32 = load i8*, i8** %buf, align 8
  %tmp33 = load i8*, i8** %scheme, align 8
  %call37 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2335, i32 0, i32 0), i8* %tmp33) #8
  %tmp34 = load i8*, i8** %buf, align 8
  %tmp35 = load i8*, i8** %scheme, align 8
  %call38 = call i64 @strlen(i8* %tmp35) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp34, i64 %call38
  %add.ptr39 = getelementptr inbounds i8, i8* %add.ptr, i64 1
  store i8* %add.ptr39, i8** %buf, align 8
  %tmp36 = load i8*, i8** %buf, align 8
  %tmp37 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string40 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp37, i32 0, i32 7
  %tmp38 = load i8*, i8** %string40, align 8
  %call41 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str3336, i32 0, i32 0), i8* %tmp38) #8
  store i32 0, i32* %retval
  br label %return

if.end42:                                         ; preds = %if.end20
  %tmp39 = load i8*, i8** %scheme, align 8
  %call43 = call i64 @strlen(i8* %tmp39) #7
  %add44 = add i64 %call43, 1
  %tmp40 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host45 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp40, i32 0, i32 3
  %tmp41 = load i8*, i8** %host45, align 8
  %call46 = call i64 @strlen(i8* %tmp41) #7
  %add47 = add i64 %add44, %call46
  %add48 = add i64 %add47, 5
  store i64 %add48, i64* %len, align 8
  %tmp42 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp42, i32 0, i32 1
  %tmp43 = load i8*, i8** %username, align 8
  %cmp49 = icmp ne i8* %tmp43, null
  br i1 %cmp49, label %if.then50, label %if.end55

if.then50:                                        ; preds = %if.end42
  %tmp44 = load i64, i64* %len, align 8
  %tmp45 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username51 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp45, i32 0, i32 1
  %tmp46 = load i8*, i8** %username51, align 8
  %call52 = call i64 @strlen(i8* %tmp46) #7
  %mul = mul i64 %call52, 3
  %add53 = add i64 %tmp44, %mul
  %add54 = add i64 %add53, 1
  store i64 %add54, i64* %len, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.then50, %if.end42
  %tmp47 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp47, i32 0, i32 2
  %tmp48 = load i8*, i8** %password, align 8
  %cmp56 = icmp ne i8* %tmp48, null
  br i1 %cmp56, label %if.then57, label %if.end63

if.then57:                                        ; preds = %if.end55
  %tmp49 = load i64, i64* %len, align 8
  %tmp50 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password58 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp50, i32 0, i32 2
  %tmp51 = load i8*, i8** %password58, align 8
  %call59 = call i64 @strlen(i8* %tmp51) #7
  %mul60 = mul i64 %call59, 3
  %add61 = add i64 %tmp49, %mul60
  %add62 = add i64 %add61, 1
  store i64 %add62, i64* %len, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then57, %if.end55
  %tmp52 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp52, i32 0, i32 4
  %tmp53 = load i8*, i8** %port, align 8
  %cmp64 = icmp ne i8* %tmp53, null
  br i1 %cmp64, label %if.then65, label %if.end70

if.then65:                                        ; preds = %if.end63
  %tmp54 = load i64, i64* %len, align 8
  %tmp55 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port66 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp55, i32 0, i32 4
  %tmp56 = load i8*, i8** %port66, align 8
  %call67 = call i64 @strlen(i8* %tmp56) #7
  %add68 = add i64 %tmp54, %call67
  %add69 = add i64 %add68, 3
  store i64 %add69, i64* %len, align 8
  br label %if.end70

if.end70:                                         ; preds = %if.then65, %if.end63
  %tmp57 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool71 = icmp ne i8* (i64)* %tmp57, null
  br i1 %tobool71, label %cond.true72, label %cond.false74

cond.true72:                                      ; preds = %if.end70
  %tmp58 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp59 = load i64, i64* %len, align 8
  %call73 = call i8* %tmp58(i64 %tmp59)
  br label %cond.end76

cond.false74:                                     ; preds = %if.end70
  %tmp60 = load i64, i64* %len, align 8
  %call75 = call noalias i8* @malloc(i64 %tmp60) #8
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false74, %cond.true72
  %cond77 = phi i8* [ %call73, %cond.true72 ], [ %call75, %cond.false74 ]
  store i8* %cond77, i8** %buf, align 8
  %tmp61 = load i8*, i8** %buf, align 8
  %cmp78 = icmp eq i8* %tmp61, null
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %cond.end76
  store i32 -4, i32* %retval
  br label %return

if.end80:                                         ; preds = %cond.end76
  %tmp62 = load i8*, i8** %buf, align 8
  store i8* %tmp62, i8** %tmp, align 8
  %tmp63 = load i8*, i8** %tmp, align 8
  %tmp64 = load i8*, i8** %scheme, align 8
  %call81 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str2335, i32 0, i32 0), i8* %tmp64) #8
  %tmp65 = load i8*, i8** %tmp, align 8
  %tmp66 = load i8*, i8** %tmp, align 8
  %call82 = call i64 @strlen(i8* %tmp66) #7
  %add.ptr83 = getelementptr inbounds i8, i8* %tmp65, i64 %call82
  store i8* %add.ptr83, i8** %tmp, align 8
  %tmp67 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username84 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp67, i32 0, i32 1
  %tmp68 = load i8*, i8** %username84, align 8
  %cmp85 = icmp ne i8* %tmp68, null
  br i1 %cmp85, label %if.then86, label %if.end110

if.then86:                                        ; preds = %if.end80
  %tmp69 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username88 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp69, i32 0, i32 1
  %tmp70 = load i8*, i8** %username88, align 8
  %call89 = call i8* @__osip_uri_escape_userinfo(i8* %tmp70)
  store i8* %call89, i8** %tmp2, align 8
  %tmp71 = load i8*, i8** %tmp2, align 8
  %cmp90 = icmp eq i8* %tmp71, null
  br i1 %cmp90, label %if.then91, label %if.end99

if.then91:                                        ; preds = %if.then86
  %tmp72 = load i8*, i8** %buf, align 8
  %cmp92 = icmp ne i8* %tmp72, null
  br i1 %cmp92, label %if.then93, label %if.end98

if.then93:                                        ; preds = %if.then91
  %tmp73 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool94 = icmp ne void (i8*)* %tmp73, null
  br i1 %tobool94, label %if.then95, label %if.else96

if.then95:                                        ; preds = %if.then93
  %tmp74 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp75 = load i8*, i8** %buf, align 8
  call void %tmp74(i8* %tmp75)
  br label %if.end97

if.else96:                                        ; preds = %if.then93
  %tmp76 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp76) #8
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then91
  store i32 -4, i32* %retval
  br label %return

if.end99:                                         ; preds = %if.then86
  %tmp77 = load i8*, i8** %tmp, align 8
  %tmp78 = load i8*, i8** %tmp2, align 8
  %call100 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str3336, i32 0, i32 0), i8* %tmp78) #8
  %tmp79 = load i8*, i8** %tmp2, align 8
  %cmp101 = icmp ne i8* %tmp79, null
  br i1 %cmp101, label %if.then102, label %if.end107

if.then102:                                       ; preds = %if.end99
  %tmp80 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool103 = icmp ne void (i8*)* %tmp80, null
  br i1 %tobool103, label %if.then104, label %if.else105

if.then104:                                       ; preds = %if.then102
  %tmp81 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp82 = load i8*, i8** %tmp2, align 8
  call void %tmp81(i8* %tmp82)
  br label %if.end106

if.else105:                                       ; preds = %if.then102
  %tmp83 = load i8*, i8** %tmp2, align 8
  call void @free(i8* %tmp83) #8
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then104
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end99
  %tmp84 = load i8*, i8** %tmp, align 8
  %tmp85 = load i8*, i8** %tmp, align 8
  %call108 = call i64 @strlen(i8* %tmp85) #7
  %add.ptr109 = getelementptr inbounds i8, i8* %tmp84, i64 %call108
  store i8* %add.ptr109, i8** %tmp, align 8
  br label %if.end110

if.end110:                                        ; preds = %if.end107, %if.end80
  %tmp86 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password111 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp86, i32 0, i32 2
  %tmp87 = load i8*, i8** %password111, align 8
  %cmp112 = icmp ne i8* %tmp87, null
  br i1 %cmp112, label %land.lhs.true113, label %if.end141

land.lhs.true113:                                 ; preds = %if.end110
  %tmp88 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username114 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp88, i32 0, i32 1
  %tmp89 = load i8*, i8** %username114, align 8
  %cmp115 = icmp ne i8* %tmp89, null
  br i1 %cmp115, label %if.then116, label %if.end141

if.then116:                                       ; preds = %land.lhs.true113
  %tmp90 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password119 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp90, i32 0, i32 2
  %tmp91 = load i8*, i8** %password119, align 8
  %call120 = call i8* @__osip_uri_escape_password(i8* %tmp91)
  store i8* %call120, i8** %tmp2118, align 8
  %tmp92 = load i8*, i8** %tmp2118, align 8
  %cmp121 = icmp eq i8* %tmp92, null
  br i1 %cmp121, label %if.then122, label %if.end130

if.then122:                                       ; preds = %if.then116
  %tmp93 = load i8*, i8** %buf, align 8
  %cmp123 = icmp ne i8* %tmp93, null
  br i1 %cmp123, label %if.then124, label %if.end129

if.then124:                                       ; preds = %if.then122
  %tmp94 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool125 = icmp ne void (i8*)* %tmp94, null
  br i1 %tobool125, label %if.then126, label %if.else127

if.then126:                                       ; preds = %if.then124
  %tmp95 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp96 = load i8*, i8** %buf, align 8
  call void %tmp95(i8* %tmp96)
  br label %if.end128

if.else127:                                       ; preds = %if.then124
  %tmp97 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp97) #8
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then126
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then122
  store i32 -4, i32* %retval
  br label %return

if.end130:                                        ; preds = %if.then116
  %tmp98 = load i8*, i8** %tmp, align 8
  %tmp99 = load i8*, i8** %tmp2118, align 8
  %call131 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4337, i32 0, i32 0), i8* %tmp99) #8
  %tmp100 = load i8*, i8** %tmp2118, align 8
  %cmp132 = icmp ne i8* %tmp100, null
  br i1 %cmp132, label %if.then133, label %if.end138

if.then133:                                       ; preds = %if.end130
  %tmp101 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool134 = icmp ne void (i8*)* %tmp101, null
  br i1 %tobool134, label %if.then135, label %if.else136

if.then135:                                       ; preds = %if.then133
  %tmp102 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp103 = load i8*, i8** %tmp2118, align 8
  call void %tmp102(i8* %tmp103)
  br label %if.end137

if.else136:                                       ; preds = %if.then133
  %tmp104 = load i8*, i8** %tmp2118, align 8
  call void @free(i8* %tmp104) #8
  br label %if.end137

if.end137:                                        ; preds = %if.else136, %if.then135
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end130
  %tmp105 = load i8*, i8** %tmp, align 8
  %tmp106 = load i8*, i8** %tmp, align 8
  %call139 = call i64 @strlen(i8* %tmp106) #7
  %add.ptr140 = getelementptr inbounds i8, i8* %tmp105, i64 %call139
  store i8* %add.ptr140, i8** %tmp, align 8
  br label %if.end141

if.end141:                                        ; preds = %if.end138, %land.lhs.true113, %if.end110
  %tmp107 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username142 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp107, i32 0, i32 1
  %tmp108 = load i8*, i8** %username142, align 8
  %cmp143 = icmp ne i8* %tmp108, null
  br i1 %cmp143, label %if.then144, label %if.end146

if.then144:                                       ; preds = %if.end141
  %tmp109 = load i8*, i8** %tmp, align 8
  %call145 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str5338, i32 0, i32 0)) #8
  %tmp110 = load i8*, i8** %tmp, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp110, i32 1
  store i8* %incdec.ptr, i8** %tmp, align 8
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %if.end141
  %tmp111 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host147 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp111, i32 0, i32 3
  %tmp112 = load i8*, i8** %host147, align 8
  %call148 = call i8* @strchr(i8* %tmp112, i32 58) #7
  %cmp149 = icmp ne i8* %call148, null
  br i1 %cmp149, label %if.then150, label %if.else155

if.then150:                                       ; preds = %if.end146
  %tmp113 = load i8*, i8** %tmp, align 8
  %tmp114 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host151 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp114, i32 0, i32 3
  %tmp115 = load i8*, i8** %host151, align 8
  %call152 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str6339, i32 0, i32 0), i8* %tmp115) #8
  %tmp116 = load i8*, i8** %tmp, align 8
  %tmp117 = load i8*, i8** %tmp, align 8
  %call153 = call i64 @strlen(i8* %tmp117) #7
  %add.ptr154 = getelementptr inbounds i8, i8* %tmp116, i64 %call153
  store i8* %add.ptr154, i8** %tmp, align 8
  br label %if.end160

if.else155:                                       ; preds = %if.end146
  %tmp118 = load i8*, i8** %tmp, align 8
  %tmp119 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host156 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp119, i32 0, i32 3
  %tmp120 = load i8*, i8** %host156, align 8
  %call157 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str3336, i32 0, i32 0), i8* %tmp120) #8
  %tmp121 = load i8*, i8** %tmp, align 8
  %tmp122 = load i8*, i8** %tmp, align 8
  %call158 = call i64 @strlen(i8* %tmp122) #7
  %add.ptr159 = getelementptr inbounds i8, i8* %tmp121, i64 %call158
  store i8* %add.ptr159, i8** %tmp, align 8
  br label %if.end160

if.end160:                                        ; preds = %if.else155, %if.then150
  %tmp123 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port161 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp123, i32 0, i32 4
  %tmp124 = load i8*, i8** %port161, align 8
  %cmp162 = icmp ne i8* %tmp124, null
  br i1 %cmp162, label %if.then163, label %if.end168

if.then163:                                       ; preds = %if.end160
  %tmp125 = load i8*, i8** %tmp, align 8
  %tmp126 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port164 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp126, i32 0, i32 4
  %tmp127 = load i8*, i8** %port164, align 8
  %call165 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str4337, i32 0, i32 0), i8* %tmp127) #8
  %tmp128 = load i8*, i8** %tmp, align 8
  %tmp129 = load i8*, i8** %tmp, align 8
  %call166 = call i64 @strlen(i8* %tmp129) #7
  %add.ptr167 = getelementptr inbounds i8, i8* %tmp128, i64 %call166
  store i8* %add.ptr167, i8** %tmp, align 8
  br label %if.end168

if.end168:                                        ; preds = %if.then163, %if.end160
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end273, %if.end168
  %tmp130 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp130, i32 0, i32 5
  %tmp131 = load i32, i32* %pos, align 4
  %call171 = call i32 @osip_list_eol(%struct.osip_list* %url_params, i32 %tmp131)
  %tobool172 = icmp ne i32 %call171, 0
  %lnot = xor i1 %tobool172, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i8* null, i8** %tmp2175, align 8
  %tmp132 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params177 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp132, i32 0, i32 5
  %tmp133 = load i32, i32* %pos, align 4
  %call178 = call i8* @osip_list_get(%struct.osip_list* %url_params177, i32 %tmp133)
  %tmp134 = bitcast i8* %call178 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp134, %struct.osip_uri_param** %u_param, align 8
  %tmp135 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp135, i32 0, i32 0
  %tmp136 = load i8*, i8** %gname, align 8
  %call179 = call i8* @__osip_uri_escape_uri_param(i8* %tmp136)
  store i8* %call179, i8** %tmp1, align 8
  %tmp137 = load i8*, i8** %tmp1, align 8
  %cmp180 = icmp eq i8* %tmp137, null
  br i1 %cmp180, label %if.then181, label %if.end189

if.then181:                                       ; preds = %while.body
  %tmp138 = load i8*, i8** %buf, align 8
  %cmp182 = icmp ne i8* %tmp138, null
  br i1 %cmp182, label %if.then183, label %if.end188

if.then183:                                       ; preds = %if.then181
  %tmp139 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool184 = icmp ne void (i8*)* %tmp139, null
  br i1 %tobool184, label %if.then185, label %if.else186

if.then185:                                       ; preds = %if.then183
  %tmp140 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp141 = load i8*, i8** %buf, align 8
  call void %tmp140(i8* %tmp141)
  br label %if.end187

if.else186:                                       ; preds = %if.then183
  %tmp142 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp142) #8
  br label %if.end187

if.end187:                                        ; preds = %if.else186, %if.then185
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then181
  store i32 -5, i32* %retval
  br label %return

if.end189:                                        ; preds = %while.body
  %tmp143 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp143, i32 0, i32 1
  %tmp144 = load i8*, i8** %gvalue, align 8
  %cmp190 = icmp eq i8* %tmp144, null
  br i1 %cmp190, label %if.then191, label %if.else194

if.then191:                                       ; preds = %if.end189
  %tmp145 = load i8*, i8** %tmp1, align 8
  %call192 = call i64 @strlen(i8* %tmp145) #7
  %add193 = add i64 %call192, 2
  store i64 %add193, i64* %plen, align 8
  br label %if.end218

if.else194:                                       ; preds = %if.end189
  %tmp146 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue195 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp146, i32 0, i32 1
  %tmp147 = load i8*, i8** %gvalue195, align 8
  %call196 = call i8* @__osip_uri_escape_uri_param(i8* %tmp147)
  store i8* %call196, i8** %tmp2175, align 8
  %tmp148 = load i8*, i8** %tmp2175, align 8
  %cmp197 = icmp eq i8* %tmp148, null
  br i1 %cmp197, label %if.then198, label %if.end213

if.then198:                                       ; preds = %if.else194
  %tmp149 = load i8*, i8** %tmp1, align 8
  %cmp199 = icmp ne i8* %tmp149, null
  br i1 %cmp199, label %if.then200, label %if.end205

if.then200:                                       ; preds = %if.then198
  %tmp150 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool201 = icmp ne void (i8*)* %tmp150, null
  br i1 %tobool201, label %if.then202, label %if.else203

if.then202:                                       ; preds = %if.then200
  %tmp151 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp152 = load i8*, i8** %tmp1, align 8
  call void %tmp151(i8* %tmp152)
  br label %if.end204

if.else203:                                       ; preds = %if.then200
  %tmp153 = load i8*, i8** %tmp1, align 8
  call void @free(i8* %tmp153) #8
  br label %if.end204

if.end204:                                        ; preds = %if.else203, %if.then202
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then198
  %tmp154 = load i8*, i8** %buf, align 8
  %cmp206 = icmp ne i8* %tmp154, null
  br i1 %cmp206, label %if.then207, label %if.end212

if.then207:                                       ; preds = %if.end205
  %tmp155 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool208 = icmp ne void (i8*)* %tmp155, null
  br i1 %tobool208, label %if.then209, label %if.else210

if.then209:                                       ; preds = %if.then207
  %tmp156 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp157 = load i8*, i8** %buf, align 8
  call void %tmp156(i8* %tmp157)
  br label %if.end211

if.else210:                                       ; preds = %if.then207
  %tmp158 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp158) #8
  br label %if.end211

if.end211:                                        ; preds = %if.else210, %if.then209
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.end205
  store i32 -5, i32* %retval
  br label %return

if.end213:                                        ; preds = %if.else194
  %tmp159 = load i8*, i8** %tmp1, align 8
  %call214 = call i64 @strlen(i8* %tmp159) #7
  %tmp160 = load i8*, i8** %tmp2175, align 8
  %call215 = call i64 @strlen(i8* %tmp160) #7
  %add216 = add i64 %call214, %call215
  %add217 = add i64 %add216, 3
  store i64 %add217, i64* %plen, align 8
  br label %if.end218

if.end218:                                        ; preds = %if.end213, %if.then191
  %tmp161 = load i64, i64* %len, align 8
  %tmp162 = load i64, i64* %plen, align 8
  %add219 = add i64 %tmp161, %tmp162
  store i64 %add219, i64* %len, align 8
  %tmp163 = load i8*, i8** %buf, align 8
  store i8* %tmp163, i8** %previous_buf, align 8
  %tmp164 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool220 = icmp ne i8* (i8*, i64)* %tmp164, null
  br i1 %tobool220, label %cond.true221, label %cond.false223

cond.true221:                                     ; preds = %if.end218
  %tmp165 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp166 = load i8*, i8** %buf, align 8
  %tmp167 = load i64, i64* %len, align 8
  %call222 = call i8* %tmp165(i8* %tmp166, i64 %tmp167)
  br label %cond.end225

cond.false223:                                    ; preds = %if.end218
  %tmp168 = load i8*, i8** %buf, align 8
  %tmp169 = load i64, i64* %len, align 8
  %call224 = call i8* @realloc(i8* %tmp168, i64 %tmp169) #8
  br label %cond.end225

cond.end225:                                      ; preds = %cond.false223, %cond.true221
  %cond226 = phi i8* [ %call222, %cond.true221 ], [ %call224, %cond.false223 ]
  store i8* %cond226, i8** %buf, align 8
  %tmp170 = load i8*, i8** %buf, align 8
  %cmp227 = icmp eq i8* %tmp170, null
  br i1 %cmp227, label %if.then228, label %if.end250

if.then228:                                       ; preds = %cond.end225
  %tmp171 = load i8*, i8** %previous_buf, align 8
  %cmp229 = icmp ne i8* %tmp171, null
  br i1 %cmp229, label %if.then230, label %if.end235

if.then230:                                       ; preds = %if.then228
  %tmp172 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool231 = icmp ne void (i8*)* %tmp172, null
  br i1 %tobool231, label %if.then232, label %if.else233

if.then232:                                       ; preds = %if.then230
  %tmp173 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp174 = load i8*, i8** %previous_buf, align 8
  call void %tmp173(i8* %tmp174)
  br label %if.end234

if.else233:                                       ; preds = %if.then230
  %tmp175 = load i8*, i8** %previous_buf, align 8
  call void @free(i8* %tmp175) #8
  br label %if.end234

if.end234:                                        ; preds = %if.else233, %if.then232
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.then228
  %tmp176 = load i8*, i8** %tmp1, align 8
  %cmp236 = icmp ne i8* %tmp176, null
  br i1 %cmp236, label %if.then237, label %if.end242

if.then237:                                       ; preds = %if.end235
  %tmp177 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool238 = icmp ne void (i8*)* %tmp177, null
  br i1 %tobool238, label %if.then239, label %if.else240

if.then239:                                       ; preds = %if.then237
  %tmp178 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp179 = load i8*, i8** %tmp1, align 8
  call void %tmp178(i8* %tmp179)
  br label %if.end241

if.else240:                                       ; preds = %if.then237
  %tmp180 = load i8*, i8** %tmp1, align 8
  call void @free(i8* %tmp180) #8
  br label %if.end241

if.end241:                                        ; preds = %if.else240, %if.then239
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.end235
  %tmp181 = load i8*, i8** %tmp2175, align 8
  %cmp243 = icmp ne i8* %tmp181, null
  br i1 %cmp243, label %if.then244, label %if.end249

if.then244:                                       ; preds = %if.end242
  %tmp182 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool245 = icmp ne void (i8*)* %tmp182, null
  br i1 %tobool245, label %if.then246, label %if.else247

if.then246:                                       ; preds = %if.then244
  %tmp183 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp184 = load i8*, i8** %tmp2175, align 8
  call void %tmp183(i8* %tmp184)
  br label %if.end248

if.else247:                                       ; preds = %if.then244
  %tmp185 = load i8*, i8** %tmp2175, align 8
  call void @free(i8* %tmp185) #8
  br label %if.end248

if.end248:                                        ; preds = %if.else247, %if.then246
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.end242
  store i32 -4, i32* %retval
  br label %return

if.end250:                                        ; preds = %cond.end225
  %tmp186 = load i8*, i8** %buf, align 8
  store i8* %tmp186, i8** %tmp, align 8
  %tmp187 = load i8*, i8** %tmp, align 8
  %tmp188 = load i8*, i8** %tmp, align 8
  %call251 = call i64 @strlen(i8* %tmp188) #7
  %add.ptr252 = getelementptr inbounds i8, i8* %tmp187, i64 %call251
  store i8* %add.ptr252, i8** %tmp, align 8
  %tmp189 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue253 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp189, i32 0, i32 1
  %tmp190 = load i8*, i8** %gvalue253, align 8
  %cmp254 = icmp eq i8* %tmp190, null
  br i1 %cmp254, label %if.then255, label %if.else257

if.then255:                                       ; preds = %if.end250
  %tmp191 = load i8*, i8** %tmp, align 8
  %tmp192 = load i8*, i8** %tmp1, align 8
  %call256 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str7340, i32 0, i32 0), i8* %tmp192) #8
  br label %if.end266

if.else257:                                       ; preds = %if.end250
  %tmp193 = load i8*, i8** %tmp, align 8
  %tmp194 = load i8*, i8** %tmp1, align 8
  %tmp195 = load i8*, i8** %tmp2175, align 8
  %call258 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp193, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str8341, i32 0, i32 0), i8* %tmp194, i8* %tmp195) #8
  %tmp196 = load i8*, i8** %tmp2175, align 8
  %cmp259 = icmp ne i8* %tmp196, null
  br i1 %cmp259, label %if.then260, label %if.end265

if.then260:                                       ; preds = %if.else257
  %tmp197 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool261 = icmp ne void (i8*)* %tmp197, null
  br i1 %tobool261, label %if.then262, label %if.else263

if.then262:                                       ; preds = %if.then260
  %tmp198 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp199 = load i8*, i8** %tmp2175, align 8
  call void %tmp198(i8* %tmp199)
  br label %if.end264

if.else263:                                       ; preds = %if.then260
  %tmp200 = load i8*, i8** %tmp2175, align 8
  call void @free(i8* %tmp200) #8
  br label %if.end264

if.end264:                                        ; preds = %if.else263, %if.then262
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.else257
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then255
  %tmp201 = load i8*, i8** %tmp1, align 8
  %cmp267 = icmp ne i8* %tmp201, null
  br i1 %cmp267, label %if.then268, label %if.end273

if.then268:                                       ; preds = %if.end266
  %tmp202 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool269 = icmp ne void (i8*)* %tmp202, null
  br i1 %tobool269, label %if.then270, label %if.else271

if.then270:                                       ; preds = %if.then268
  %tmp203 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp204 = load i8*, i8** %tmp1, align 8
  call void %tmp203(i8* %tmp204)
  br label %if.end272

if.else271:                                       ; preds = %if.then268
  %tmp205 = load i8*, i8** %tmp1, align 8
  call void @free(i8* %tmp205) #8
  br label %if.end272

if.end272:                                        ; preds = %if.else271, %if.then270
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end266
  %tmp206 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp206, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %pos275, align 4
  br label %while.cond277

while.cond277:                                    ; preds = %if.end382, %while.end
  %tmp207 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp207, i32 0, i32 6
  %tmp208 = load i32, i32* %pos275, align 4
  %call278 = call i32 @osip_list_eol(%struct.osip_list* %url_headers, i32 %tmp208)
  %tobool279 = icmp ne i32 %call278, 0
  %lnot280 = xor i1 %tobool279, true
  br i1 %lnot280, label %while.body281, label %while.end384

while.body281:                                    ; preds = %while.cond277
  %tmp209 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers288 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp209, i32 0, i32 6
  %tmp210 = load i32, i32* %pos275, align 4
  %call289 = call i8* @osip_list_get(%struct.osip_list* %url_headers288, i32 %tmp210)
  %tmp211 = bitcast i8* %call289 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp211, %struct.osip_uri_param** %u_header, align 8
  %tmp212 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_header, align 8
  %gname290 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp212, i32 0, i32 0
  %tmp213 = load i8*, i8** %gname290, align 8
  %call291 = call i8* @__osip_uri_escape_header_param(i8* %tmp213)
  store i8* %call291, i8** %tmp1283, align 8
  %tmp214 = load i8*, i8** %tmp1283, align 8
  %cmp292 = icmp eq i8* %tmp214, null
  br i1 %cmp292, label %if.then293, label %if.end301

if.then293:                                       ; preds = %while.body281
  %tmp215 = load i8*, i8** %buf, align 8
  %cmp294 = icmp ne i8* %tmp215, null
  br i1 %cmp294, label %if.then295, label %if.end300

if.then295:                                       ; preds = %if.then293
  %tmp216 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool296 = icmp ne void (i8*)* %tmp216, null
  br i1 %tobool296, label %if.then297, label %if.else298

if.then297:                                       ; preds = %if.then295
  %tmp217 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp218 = load i8*, i8** %buf, align 8
  call void %tmp217(i8* %tmp218)
  br label %if.end299

if.else298:                                       ; preds = %if.then295
  %tmp219 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp219) #8
  br label %if.end299

if.end299:                                        ; preds = %if.else298, %if.then297
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then293
  store i32 -5, i32* %retval
  br label %return

if.end301:                                        ; preds = %while.body281
  %tmp220 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_header, align 8
  %gvalue302 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp220, i32 0, i32 1
  %tmp221 = load i8*, i8** %gvalue302, align 8
  %call303 = call i8* @__osip_uri_escape_header_param(i8* %tmp221)
  store i8* %call303, i8** %tmp2285, align 8
  %tmp222 = load i8*, i8** %tmp2285, align 8
  %cmp304 = icmp eq i8* %tmp222, null
  br i1 %cmp304, label %if.then305, label %if.end320

if.then305:                                       ; preds = %if.end301
  %tmp223 = load i8*, i8** %tmp1283, align 8
  %cmp306 = icmp ne i8* %tmp223, null
  br i1 %cmp306, label %if.then307, label %if.end312

if.then307:                                       ; preds = %if.then305
  %tmp224 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool308 = icmp ne void (i8*)* %tmp224, null
  br i1 %tobool308, label %if.then309, label %if.else310

if.then309:                                       ; preds = %if.then307
  %tmp225 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp226 = load i8*, i8** %tmp1283, align 8
  call void %tmp225(i8* %tmp226)
  br label %if.end311

if.else310:                                       ; preds = %if.then307
  %tmp227 = load i8*, i8** %tmp1283, align 8
  call void @free(i8* %tmp227) #8
  br label %if.end311

if.end311:                                        ; preds = %if.else310, %if.then309
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then305
  %tmp228 = load i8*, i8** %buf, align 8
  %cmp313 = icmp ne i8* %tmp228, null
  br i1 %cmp313, label %if.then314, label %if.end319

if.then314:                                       ; preds = %if.end312
  %tmp229 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool315 = icmp ne void (i8*)* %tmp229, null
  br i1 %tobool315, label %if.then316, label %if.else317

if.then316:                                       ; preds = %if.then314
  %tmp230 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp231 = load i8*, i8** %buf, align 8
  call void %tmp230(i8* %tmp231)
  br label %if.end318

if.else317:                                       ; preds = %if.then314
  %tmp232 = load i8*, i8** %buf, align 8
  call void @free(i8* %tmp232) #8
  br label %if.end318

if.end318:                                        ; preds = %if.else317, %if.then316
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.end312
  store i32 -5, i32* %retval
  br label %return

if.end320:                                        ; preds = %if.end301
  %tmp233 = load i8*, i8** %tmp1283, align 8
  %call321 = call i64 @strlen(i8* %tmp233) #7
  %tmp234 = load i8*, i8** %tmp2285, align 8
  %call322 = call i64 @strlen(i8* %tmp234) #7
  %add323 = add i64 %call321, %call322
  %add324 = add i64 %add323, 4
  store i64 %add324, i64* %plen, align 8
  %tmp235 = load i64, i64* %len, align 8
  %tmp236 = load i64, i64* %plen, align 8
  %add325 = add i64 %tmp235, %tmp236
  store i64 %add325, i64* %len, align 8
  %tmp237 = load i8*, i8** %buf, align 8
  store i8* %tmp237, i8** %previous_buf287, align 8
  %tmp238 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool326 = icmp ne i8* (i8*, i64)* %tmp238, null
  br i1 %tobool326, label %cond.true327, label %cond.false329

cond.true327:                                     ; preds = %if.end320
  %tmp239 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp240 = load i8*, i8** %buf, align 8
  %tmp241 = load i64, i64* %len, align 8
  %call328 = call i8* %tmp239(i8* %tmp240, i64 %tmp241)
  br label %cond.end331

cond.false329:                                    ; preds = %if.end320
  %tmp242 = load i8*, i8** %buf, align 8
  %tmp243 = load i64, i64* %len, align 8
  %call330 = call i8* @realloc(i8* %tmp242, i64 %tmp243) #8
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false329, %cond.true327
  %cond332 = phi i8* [ %call328, %cond.true327 ], [ %call330, %cond.false329 ]
  store i8* %cond332, i8** %buf, align 8
  %tmp244 = load i8*, i8** %buf, align 8
  %cmp333 = icmp eq i8* %tmp244, null
  br i1 %cmp333, label %if.then334, label %if.end356

if.then334:                                       ; preds = %cond.end331
  %tmp245 = load i8*, i8** %previous_buf287, align 8
  %cmp335 = icmp ne i8* %tmp245, null
  br i1 %cmp335, label %if.then336, label %if.end341

if.then336:                                       ; preds = %if.then334
  %tmp246 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool337 = icmp ne void (i8*)* %tmp246, null
  br i1 %tobool337, label %if.then338, label %if.else339

if.then338:                                       ; preds = %if.then336
  %tmp247 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp248 = load i8*, i8** %previous_buf287, align 8
  call void %tmp247(i8* %tmp248)
  br label %if.end340

if.else339:                                       ; preds = %if.then336
  %tmp249 = load i8*, i8** %previous_buf287, align 8
  call void @free(i8* %tmp249) #8
  br label %if.end340

if.end340:                                        ; preds = %if.else339, %if.then338
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.then334
  %tmp250 = load i8*, i8** %tmp1283, align 8
  %cmp342 = icmp ne i8* %tmp250, null
  br i1 %cmp342, label %if.then343, label %if.end348

if.then343:                                       ; preds = %if.end341
  %tmp251 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool344 = icmp ne void (i8*)* %tmp251, null
  br i1 %tobool344, label %if.then345, label %if.else346

if.then345:                                       ; preds = %if.then343
  %tmp252 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp253 = load i8*, i8** %tmp1283, align 8
  call void %tmp252(i8* %tmp253)
  br label %if.end347

if.else346:                                       ; preds = %if.then343
  %tmp254 = load i8*, i8** %tmp1283, align 8
  call void @free(i8* %tmp254) #8
  br label %if.end347

if.end347:                                        ; preds = %if.else346, %if.then345
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %if.end341
  %tmp255 = load i8*, i8** %tmp2285, align 8
  %cmp349 = icmp ne i8* %tmp255, null
  br i1 %cmp349, label %if.then350, label %if.end355

if.then350:                                       ; preds = %if.end348
  %tmp256 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool351 = icmp ne void (i8*)* %tmp256, null
  br i1 %tobool351, label %if.then352, label %if.else353

if.then352:                                       ; preds = %if.then350
  %tmp257 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp258 = load i8*, i8** %tmp2285, align 8
  call void %tmp257(i8* %tmp258)
  br label %if.end354

if.else353:                                       ; preds = %if.then350
  %tmp259 = load i8*, i8** %tmp2285, align 8
  call void @free(i8* %tmp259) #8
  br label %if.end354

if.end354:                                        ; preds = %if.else353, %if.then352
  br label %if.end355

if.end355:                                        ; preds = %if.end354, %if.end348
  store i32 -4, i32* %retval
  br label %return

if.end356:                                        ; preds = %cond.end331
  %tmp260 = load i8*, i8** %buf, align 8
  store i8* %tmp260, i8** %tmp, align 8
  %tmp261 = load i8*, i8** %tmp, align 8
  %tmp262 = load i8*, i8** %tmp, align 8
  %call357 = call i64 @strlen(i8* %tmp262) #7
  %add.ptr358 = getelementptr inbounds i8, i8* %tmp261, i64 %call357
  store i8* %add.ptr358, i8** %tmp, align 8
  %tmp263 = load i32, i32* %pos275, align 4
  %cmp359 = icmp eq i32 %tmp263, 0
  br i1 %cmp359, label %if.then360, label %if.else362

if.then360:                                       ; preds = %if.end356
  %tmp264 = load i8*, i8** %tmp, align 8
  %tmp265 = load i64, i64* %len, align 8
  %tmp266 = load i8*, i8** %tmp, align 8
  %tmp267 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp266 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp267 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp265, %sub.ptr.sub
  %tmp268 = load i8*, i8** %tmp1283, align 8
  %tmp269 = load i8*, i8** %tmp2285, align 8
  %call361 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp264, i64 %sub, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str9342, i32 0, i32 0), i8* %tmp268, i8* %tmp269) #8
  br label %if.end368

if.else362:                                       ; preds = %if.end356
  %tmp270 = load i8*, i8** %tmp, align 8
  %tmp271 = load i64, i64* %len, align 8
  %tmp272 = load i8*, i8** %tmp, align 8
  %tmp273 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast363 = ptrtoint i8* %tmp272 to i64
  %sub.ptr.rhs.cast364 = ptrtoint i8* %tmp273 to i64
  %sub.ptr.sub365 = sub i64 %sub.ptr.lhs.cast363, %sub.ptr.rhs.cast364
  %sub366 = sub i64 %tmp271, %sub.ptr.sub365
  %tmp274 = load i8*, i8** %tmp1283, align 8
  %tmp275 = load i8*, i8** %tmp2285, align 8
  %call367 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp270, i64 %sub366, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str10343, i32 0, i32 0), i8* %tmp274, i8* %tmp275) #8
  br label %if.end368

if.end368:                                        ; preds = %if.else362, %if.then360
  %tmp276 = load i8*, i8** %tmp1283, align 8
  %cmp369 = icmp ne i8* %tmp276, null
  br i1 %cmp369, label %if.then370, label %if.end375

if.then370:                                       ; preds = %if.end368
  %tmp277 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool371 = icmp ne void (i8*)* %tmp277, null
  br i1 %tobool371, label %if.then372, label %if.else373

if.then372:                                       ; preds = %if.then370
  %tmp278 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp279 = load i8*, i8** %tmp1283, align 8
  call void %tmp278(i8* %tmp279)
  br label %if.end374

if.else373:                                       ; preds = %if.then370
  %tmp280 = load i8*, i8** %tmp1283, align 8
  call void @free(i8* %tmp280) #8
  br label %if.end374

if.end374:                                        ; preds = %if.else373, %if.then372
  br label %if.end375

if.end375:                                        ; preds = %if.end374, %if.end368
  %tmp281 = load i8*, i8** %tmp2285, align 8
  %cmp376 = icmp ne i8* %tmp281, null
  br i1 %cmp376, label %if.then377, label %if.end382

if.then377:                                       ; preds = %if.end375
  %tmp282 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool378 = icmp ne void (i8*)* %tmp282, null
  br i1 %tobool378, label %if.then379, label %if.else380

if.then379:                                       ; preds = %if.then377
  %tmp283 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp284 = load i8*, i8** %tmp2285, align 8
  call void %tmp283(i8* %tmp284)
  br label %if.end381

if.else380:                                       ; preds = %if.then377
  %tmp285 = load i8*, i8** %tmp2285, align 8
  call void @free(i8* %tmp285) #8
  br label %if.end381

if.end381:                                        ; preds = %if.else380, %if.then379
  br label %if.end382

if.end382:                                        ; preds = %if.end381, %if.end375
  %tmp286 = load i32, i32* %pos275, align 4
  %inc383 = add nsw i32 %tmp286, 1
  store i32 %inc383, i32* %pos275, align 4
  br label %while.cond277

while.end384:                                     ; preds = %while.cond277
  %tmp287 = load i8*, i8** %buf, align 8
  %tmp288 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp287, i8** %tmp288, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end384, %if.end355, %if.end319, %if.end300, %if.end249, %if.end212, %if.end188, %if.end129, %if.end98, %if.then79, %if.end36, %if.then35, %if.then11, %if.then4, %if.then
  %tmp289 = load i32, i32* %retval
  ret i32 %tmp289
}

; Function Attrs: nounwind uwtable
define i8* @__osip_uri_escape_userinfo(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %tmp = load i8*, i8** %string.addr, align 8
  %tmp1 = load i8*, i8** @userinfo_def, align 8
  %call = call i8* @__osip_uri_escape_nonascii_and_nondef(i8* %tmp, i8* %tmp1)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define i8* @__osip_uri_escape_password(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %tmp = load i8*, i8** %string.addr, align 8
  %tmp1 = load i8*, i8** @password_def, align 8
  %call = call i8* @__osip_uri_escape_nonascii_and_nondef(i8* %tmp, i8* %tmp1)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define i8* @__osip_uri_escape_uri_param(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %tmp = load i8*, i8** %string.addr, align 8
  %tmp1 = load i8*, i8** @uri_param_def, align 8
  %call = call i8* @__osip_uri_escape_nonascii_and_nondef(i8* %tmp, i8* %tmp1)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define i8* @__osip_uri_escape_header_param(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  %tmp = load i8*, i8** %string.addr, align 8
  %tmp1 = load i8*, i8** @header_param_def, align 8
  %call = call i8* @__osip_uri_escape_nonascii_and_nondef(i8* %tmp, i8* %tmp1)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define void @osip_uri_free(%struct.osip_uri* %url) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %pos = alloca i32, align 4
  %u_header = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i32 0, i32* %pos, align 4
  %tmp = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end64

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %scheme, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme4 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %scheme4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme5 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %scheme5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %username, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username12 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %username12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username14 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %username14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp17, i32 0, i32 2
  %tmp18 = load i8*, i8** %password, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end16
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.then18
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password21 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp21, i32 0, i32 2
  %tmp22 = load i8*, i8** %password21, align 8
  call void %tmp20(i8* %tmp22)
  br label %if.end24

if.else22:                                        ; preds = %if.then18
  %tmp23 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password23 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp23, i32 0, i32 2
  %tmp24 = load i8*, i8** %password23, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16
  %tmp25 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %host, align 8
  %cmp26 = icmp ne i8* %tmp26, null
  br i1 %cmp26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end25
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool28 = icmp ne void (i8*)* %tmp27, null
  br i1 %tobool28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.then27
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp29 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host30 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp29, i32 0, i32 3
  %tmp30 = load i8*, i8** %host30, align 8
  call void %tmp28(i8* %tmp30)
  br label %if.end33

if.else31:                                        ; preds = %if.then27
  %tmp31 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host32 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp31, i32 0, i32 3
  %tmp32 = load i8*, i8** %host32, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end25
  %tmp33 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp33, i32 0, i32 4
  %tmp34 = load i8*, i8** %port, align 8
  %cmp35 = icmp ne i8* %tmp34, null
  br i1 %cmp35, label %if.then36, label %if.end43

if.then36:                                        ; preds = %if.end34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool37 = icmp ne void (i8*)* %tmp35, null
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then36
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp37 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port39 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp37, i32 0, i32 4
  %tmp38 = load i8*, i8** %port39, align 8
  call void %tmp36(i8* %tmp38)
  br label %if.end42

if.else40:                                        ; preds = %if.then36
  %tmp39 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port41 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp39, i32 0, i32 4
  %tmp40 = load i8*, i8** %port41, align 8
  call void @free(i8* %tmp40) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  %tmp41 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp41, i32 0, i32 5
  call void @osip_uri_param_freelist(%struct.osip_list* %url_params)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end43
  %tmp42 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp42, i32 0, i32 6
  %tmp43 = load i32, i32* %pos, align 4
  %call = call i32 @osip_list_eol(%struct.osip_list* %url_headers, i32 %tmp43)
  %tobool44 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool44, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp44 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers45 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp44, i32 0, i32 6
  %tmp45 = load i32, i32* %pos, align 4
  %call46 = call i8* @osip_list_get(%struct.osip_list* %url_headers45, i32 %tmp45)
  %tmp46 = bitcast i8* %call46 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp46, %struct.osip_uri_param** %u_header, align 8
  %tmp47 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers47 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp47, i32 0, i32 6
  %tmp48 = load i32, i32* %pos, align 4
  %call48 = call i32 @osip_list_remove(%struct.osip_list* %url_headers47, i32 %tmp48)
  %tmp49 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_header, align 8
  call void @osip_uri_param_free(%struct.osip_uri_param* %tmp49)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp50 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp50, i32 0, i32 7
  %tmp51 = load i8*, i8** %string, align 8
  %cmp49 = icmp ne i8* %tmp51, null
  br i1 %cmp49, label %if.then50, label %if.end57

if.then50:                                        ; preds = %while.end
  %tmp52 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool51 = icmp ne void (i8*)* %tmp52, null
  br i1 %tobool51, label %if.then52, label %if.else54

if.then52:                                        ; preds = %if.then50
  %tmp53 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp54 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string53 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp54, i32 0, i32 7
  %tmp55 = load i8*, i8** %string53, align 8
  call void %tmp53(i8* %tmp55)
  br label %if.end56

if.else54:                                        ; preds = %if.then50
  %tmp56 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string55 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp56, i32 0, i32 7
  %tmp57 = load i8*, i8** %string55, align 8
  call void @free(i8* %tmp57) #8
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then52
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %while.end
  %tmp58 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp58 = icmp ne %struct.osip_uri* %tmp58, null
  br i1 %cmp58, label %if.then59, label %if.end64

if.then59:                                        ; preds = %if.end57
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool60 = icmp ne void (i8*)* %tmp59, null
  br i1 %tobool60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.then59
  %tmp60 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp61 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp62 = bitcast %struct.osip_uri* %tmp61 to i8*
  call void %tmp60(i8* %tmp62)
  br label %if.end63

if.else62:                                        ; preds = %if.then59
  %tmp63 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp64 = bitcast %struct.osip_uri* %tmp63 to i8*
  call void @free(i8* %tmp64) #8
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end57, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_uri_param_freelist(%struct.osip_list* %params) #0 {
entry:
  %params.addr = alloca %struct.osip_list*, align 8
  %u_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_list* %params, %struct.osip_list** %params.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %tmp = load %struct.osip_list*, %struct.osip_list** %params.addr, align 8
  %call = call i32 @osip_list_eol(%struct.osip_list* %tmp, i32 0)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp1 = load %struct.osip_list*, %struct.osip_list** %params.addr, align 8
  %call1 = call i8* @osip_list_get(%struct.osip_list* %tmp1, i32 0)
  %tmp2 = bitcast i8* %call1 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp2, %struct.osip_uri_param** %u_param, align 8
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %params.addr, align 8
  %call2 = call i32 @osip_list_remove(%struct.osip_list* %tmp3, i32 0)
  %tmp4 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  call void @osip_uri_param_free(%struct.osip_uri_param* %tmp4)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @osip_uri_param_free(%struct.osip_uri_param* %url_param) #0 {
entry:
  %url_param.addr = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_uri_param* %url_param, %struct.osip_uri_param** %url_param.addr, align 8
  %tmp = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %gname, align 8
  %cmp = icmp ne i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %tmp2 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp2, null
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp4 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gname2 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %gname2, align 8
  call void %tmp3(i8* %tmp5)
  br label %if.end

if.else:                                          ; preds = %if.then
  %tmp6 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gname3 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %gname3, align 8
  call void @free(i8* %tmp7) #8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %tmp8 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp8, i32 0, i32 1
  %tmp9 = load i8*, i8** %gvalue, align 8
  %cmp5 = icmp ne i8* %tmp9, null
  br i1 %cmp5, label %if.then6, label %if.end13

if.then6:                                         ; preds = %if.end4
  %tmp10 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool7 = icmp ne void (i8*)* %tmp10, null
  br i1 %tobool7, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.then6
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp12 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue9 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %gvalue9, align 8
  call void %tmp11(i8* %tmp13)
  br label %if.end12

if.else10:                                        ; preds = %if.then6
  %tmp14 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue11 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %gvalue11, align 8
  call void @free(i8* %tmp15) #8
  br label %if.end12

if.end12:                                         ; preds = %if.else10, %if.then8
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end4
  %tmp16 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %cmp14 = icmp ne %struct.osip_uri_param* %tmp16, null
  br i1 %cmp14, label %if.then15, label %if.end20

if.then15:                                        ; preds = %if.end13
  %tmp17 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool16 = icmp ne void (i8*)* %tmp17, null
  br i1 %tobool16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.then15
  %tmp18 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp19 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %tmp20 = bitcast %struct.osip_uri_param* %tmp19 to i8*
  call void %tmp18(i8* %tmp20)
  br label %if.end19

if.else18:                                        ; preds = %if.then15
  %tmp21 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %tmp22 = bitcast %struct.osip_uri_param* %tmp21 to i8*
  call void @free(i8* %tmp22) #8
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then17
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end13
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_clone(%struct.osip_uri* %url, %struct.osip_uri** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %url.addr = alloca %struct.osip_uri*, align 8
  %dest.addr = alloca %struct.osip_uri**, align 8
  %i = alloca i32, align 4
  %ur = alloca %struct.osip_uri*, align 8
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store %struct.osip_uri** %dest, %struct.osip_uri*** %dest.addr, align 8
  %tmp = load %struct.osip_uri**, %struct.osip_uri*** %dest.addr, align 8
  store %struct.osip_uri* null, %struct.osip_uri** %tmp, align 8
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %cmp = icmp eq %struct.osip_uri* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp2, i32 0, i32 3
  %tmp3 = load i8*, i8** %host, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %land.lhs.true, label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %tmp4 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp4, i32 0, i32 7
  %tmp5 = load i8*, i8** %string, align 8
  %cmp2 = icmp eq i8* %tmp5, null
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %land.lhs.true
  store i32 -2, i32* %retval
  br label %return

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %call = call i32 @osip_uri_init(%struct.osip_uri** %ur)
  store i32 %call, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp5 = icmp ne i32 %tmp6, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end4
  %tmp8 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp8, i32 0, i32 0
  %tmp9 = load i8*, i8** %scheme, align 8
  %cmp8 = icmp ne i8* %tmp9, null
  br i1 %cmp8, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.end7
  %tmp10 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %scheme10 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %scheme10, align 8
  %call11 = call i8* @osip_strdup(i8* %tmp11)
  %tmp12 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %scheme12 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp12, i32 0, i32 0
  store i8* %call11, i8** %scheme12, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end7
  %tmp13 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %username, align 8
  %cmp14 = icmp ne i8* %tmp14, null
  br i1 %cmp14, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end13
  %tmp15 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %username16 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %username16, align 8
  %call17 = call i8* @osip_strdup(i8* %tmp16)
  %tmp17 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %username18 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp17, i32 0, i32 1
  store i8* %call17, i8** %username18, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end13
  %tmp18 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp18, i32 0, i32 2
  %tmp19 = load i8*, i8** %password, align 8
  %cmp20 = icmp ne i8* %tmp19, null
  br i1 %cmp20, label %if.then21, label %if.end25

if.then21:                                        ; preds = %if.end19
  %tmp20 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %password22 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp20, i32 0, i32 2
  %tmp21 = load i8*, i8** %password22, align 8
  %call23 = call i8* @osip_strdup(i8* %tmp21)
  %tmp22 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %password24 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp22, i32 0, i32 2
  store i8* %call23, i8** %password24, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.end19
  %tmp23 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host26 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp23, i32 0, i32 3
  %tmp24 = load i8*, i8** %host26, align 8
  %cmp27 = icmp ne i8* %tmp24, null
  br i1 %cmp27, label %if.then28, label %if.end32

if.then28:                                        ; preds = %if.end25
  %tmp25 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %host29 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %host29, align 8
  %call30 = call i8* @osip_strdup(i8* %tmp26)
  %tmp27 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %host31 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp27, i32 0, i32 3
  store i8* %call30, i8** %host31, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %if.end25
  %tmp28 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp28, i32 0, i32 4
  %tmp29 = load i8*, i8** %port, align 8
  %cmp33 = icmp ne i8* %tmp29, null
  br i1 %cmp33, label %if.then34, label %if.end38

if.then34:                                        ; preds = %if.end32
  %tmp30 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %port35 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp30, i32 0, i32 4
  %tmp31 = load i8*, i8** %port35, align 8
  %call36 = call i8* @osip_strdup(i8* %tmp31)
  %tmp32 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %port37 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp32, i32 0, i32 4
  store i8* %call36, i8** %port37, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %if.end32
  %tmp33 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string39 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp33, i32 0, i32 7
  %tmp34 = load i8*, i8** %string39, align 8
  %cmp40 = icmp ne i8* %tmp34, null
  br i1 %cmp40, label %if.then41, label %if.end45

if.then41:                                        ; preds = %if.end38
  %tmp35 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %string42 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp35, i32 0, i32 7
  %tmp36 = load i8*, i8** %string42, align 8
  %call43 = call i8* @osip_strdup(i8* %tmp36)
  %tmp37 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %string44 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp37, i32 0, i32 7
  store i8* %call43, i8** %string44, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then41, %if.end38
  %tmp38 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_params = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp38, i32 0, i32 5
  %tmp39 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %url_params46 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp39, i32 0, i32 5
  %call47 = call i32 @osip_list_clone(%struct.osip_list* %url_params, %struct.osip_list* %url_params46, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_uri_param*, %struct.osip_uri_param**)* @osip_uri_param_clone to i32 (i8*, i8**)*))
  store i32 %call47, i32* %i, align 4
  %tmp40 = load i32, i32* %i, align 4
  %cmp48 = icmp ne i32 %tmp40, 0
  br i1 %cmp48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end45
  %tmp41 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp41)
  %tmp42 = load i32, i32* %i, align 4
  store i32 %tmp42, i32* %retval
  br label %return

if.end50:                                         ; preds = %if.end45
  %tmp43 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %url_headers = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp43, i32 0, i32 6
  %tmp44 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %url_headers51 = getelementptr inbounds %struct.osip_uri, %struct.osip_uri* %tmp44, i32 0, i32 6
  %call52 = call i32 @osip_list_clone(%struct.osip_list* %url_headers, %struct.osip_list* %url_headers51, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_uri_param*, %struct.osip_uri_param**)* @osip_uri_param_clone to i32 (i8*, i8**)*))
  store i32 %call52, i32* %i, align 4
  %tmp45 = load i32, i32* %i, align 4
  %cmp53 = icmp ne i32 %tmp45, 0
  br i1 %cmp53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end50
  %tmp46 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  call void @osip_uri_free(%struct.osip_uri* %tmp46)
  %tmp47 = load i32, i32* %i, align 4
  store i32 %tmp47, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.end50
  %tmp48 = load %struct.osip_uri*, %struct.osip_uri** %ur, align 8
  %tmp49 = load %struct.osip_uri**, %struct.osip_uri*** %dest.addr, align 8
  store %struct.osip_uri* %tmp48, %struct.osip_uri** %tmp49, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end55, %if.then54, %if.then49, %if.then6, %if.then3, %if.then
  %tmp50 = load i32, i32* %retval
  ret i32 %tmp50
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_param_clone(%struct.osip_uri_param* %uparam, %struct.osip_uri_param** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %uparam.addr = alloca %struct.osip_uri_param*, align 8
  %dest.addr = alloca %struct.osip_uri_param**, align 8
  %i = alloca i32, align 4
  %up = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_uri_param* %uparam, %struct.osip_uri_param** %uparam.addr, align 8
  store %struct.osip_uri_param** %dest, %struct.osip_uri_param*** %dest.addr, align 8
  %tmp = load %struct.osip_uri_param**, %struct.osip_uri_param*** %dest.addr, align 8
  store %struct.osip_uri_param* null, %struct.osip_uri_param** %tmp, align 8
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %uparam.addr, align 8
  %cmp = icmp eq %struct.osip_uri_param* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_uri_param*, %struct.osip_uri_param** %uparam.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %gname, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_uri_param_init(%struct.osip_uri_param** %up)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_uri_param*, %struct.osip_uri_param** %uparam.addr, align 8
  %gname7 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %gname7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_uri_param*, %struct.osip_uri_param** %up, align 8
  %gname9 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %gname9, align 8
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %uparam.addr, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %gvalue, align 8
  %cmp10 = icmp ne i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end6
  %tmp11 = load %struct.osip_uri_param*, %struct.osip_uri_param** %uparam.addr, align 8
  %gvalue12 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp11, i32 0, i32 1
  %tmp12 = load i8*, i8** %gvalue12, align 8
  %call13 = call i8* @osip_strdup(i8* %tmp12)
  %tmp13 = load %struct.osip_uri_param*, %struct.osip_uri_param** %up, align 8
  %gvalue14 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp13, i32 0, i32 1
  store i8* %call13, i8** %gvalue14, align 8
  br label %if.end16

if.else:                                          ; preds = %if.end6
  %tmp14 = load %struct.osip_uri_param*, %struct.osip_uri_param** %up, align 8
  %gvalue15 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp14, i32 0, i32 1
  store i8* null, i8** %gvalue15, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then11
  %tmp15 = load %struct.osip_uri_param*, %struct.osip_uri_param** %up, align 8
  %tmp16 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %dest.addr, align 8
  store %struct.osip_uri_param* %tmp15, %struct.osip_uri_param** %tmp16, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end16, %if.then5, %if.then2, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_param_init(%struct.osip_uri_param** %url_param) #0 {
entry:
  %retval = alloca i32, align 4
  %url_param.addr = alloca %struct.osip_uri_param**, align 8
  store %struct.osip_uri_param** %url_param, %struct.osip_uri_param*** %url_param.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 16)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_uri_param*
  %tmp3 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  store %struct.osip_uri_param* %tmp2, %struct.osip_uri_param** %tmp3, align 8
  %tmp4 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  %tmp5 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tmp4, align 8
  %cmp = icmp eq %struct.osip_uri_param* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  %tmp7 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tmp6, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp7, i32 0, i32 0
  store i8* null, i8** %gname, align 8
  %tmp8 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %tmp8, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp9, i32 0, i32 1
  store i8* null, i8** %gvalue, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_param_set(%struct.osip_uri_param* %url_param, i8* %pname, i8* %pvalue) #0 {
entry:
  %url_param.addr = alloca %struct.osip_uri_param*, align 8
  %pname.addr = alloca i8*, align 8
  %pvalue.addr = alloca i8*, align 8
  store %struct.osip_uri_param* %url_param, %struct.osip_uri_param** %url_param.addr, align 8
  store i8* %pname, i8** %pname.addr, align 8
  store i8* %pvalue, i8** %pvalue.addr, align 8
  %tmp = load i8*, i8** %pname.addr, align 8
  %tmp1 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %gname, align 8
  %tmp2 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gname1 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %gname1, align 8
  %call = call i32 @osip_clrspace(i8* %tmp3)
  %tmp4 = load i8*, i8** %pvalue.addr, align 8
  %tmp5 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp5, i32 0, i32 1
  store i8* %tmp4, i8** %gvalue, align 8
  %tmp6 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue2 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp6, i32 0, i32 1
  %tmp7 = load i8*, i8** %gvalue2, align 8
  %cmp = icmp ne i8* %tmp7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp8 = load %struct.osip_uri_param*, %struct.osip_uri_param** %url_param.addr, align 8
  %gvalue3 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp8, i32 0, i32 1
  %tmp9 = load i8*, i8** %gvalue3, align 8
  %call4 = call i32 @osip_clrspace(i8* %tmp9)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_param_get_byname(%struct.osip_list* %params, i8* %pname, %struct.osip_uri_param** %url_param) #0 {
entry:
  %retval = alloca i32, align 4
  %params.addr = alloca %struct.osip_list*, align 8
  %pname.addr = alloca i8*, align 8
  %url_param.addr = alloca %struct.osip_uri_param**, align 8
  %pos = alloca i32, align 4
  %pname_len = alloca i64, align 8
  %u_param = alloca %struct.osip_uri_param*, align 8
  %len = alloca i64, align 8
  store %struct.osip_list* %params, %struct.osip_list** %params.addr, align 8
  store i8* %pname, i8** %pname.addr, align 8
  store %struct.osip_uri_param** %url_param, %struct.osip_uri_param*** %url_param.addr, align 8
  store i32 0, i32* %pos, align 4
  %tmp = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  store %struct.osip_uri_param* null, %struct.osip_uri_param** %tmp, align 8
  %tmp1 = load i8*, i8** %pname.addr, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %pname.addr, align 8
  %call = call i64 @strlen(i8* %tmp2) #7
  store i64 %call, i64* %pname_len, align 8
  %tmp3 = load i64, i64* %pname_len, align 8
  %cmp1 = icmp ule i64 %tmp3, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %if.end13, %if.end3
  %tmp4 = load %struct.osip_list*, %struct.osip_list** %params.addr, align 8
  %tmp5 = load i32, i32* %pos, align 4
  %call4 = call i32 @osip_list_eol(%struct.osip_list* %tmp4, i32 %tmp5)
  %tobool = icmp ne i32 %call4, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp6 = load %struct.osip_list*, %struct.osip_list** %params.addr, align 8
  %tmp7 = load i32, i32* %pos, align 4
  %call5 = call i8* @osip_list_get(%struct.osip_list* %tmp6, i32 %tmp7)
  %tmp8 = bitcast i8* %call5 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp8, %struct.osip_uri_param** %u_param, align 8
  %tmp9 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %gname, align 8
  %call6 = call i64 @strlen(i8* %tmp10) #7
  store i64 %call6, i64* %len, align 8
  %tmp11 = load i64, i64* %pname_len, align 8
  %tmp12 = load i64, i64* %len, align 8
  %cmp7 = icmp eq i64 %tmp11, %tmp12
  br i1 %cmp7, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %while.body
  %tmp13 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname8 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %gname8, align 8
  %tmp15 = load i8*, i8** %pname.addr, align 8
  %tmp16 = load i8*, i8** %pname.addr, align 8
  %call9 = call i64 @strlen(i8* %tmp16) #7
  %call10 = call i32 @osip_strncasecmp(i8* %tmp14, i8* %tmp15, i64 %call9)
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  %tmp17 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %tmp18 = load %struct.osip_uri_param**, %struct.osip_uri_param*** %url_param.addr, align 8
  store %struct.osip_uri_param* %tmp17, %struct.osip_uri_param** %tmp18, align 8
  store i32 0, i32* %retval
  br label %return

if.end13:                                         ; preds = %land.lhs.true, %while.body
  %tmp19 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp19, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then12, %if.then2, %if.then
  %tmp20 = load i32, i32* %retval
  ret i32 %tmp20
}

; Function Attrs: nounwind uwtable
define i8* @__osip_uri_escape_nonascii_and_nondef(i8* %string, i8* %def) #0 {
entry:
  %retval = alloca i8*, align 8
  %string.addr = alloca i8*, align 8
  %def.addr = alloca i8*, align 8
  %alloc = alloca i64, align 8
  %length = alloca i64, align 8
  %ns = alloca i8*, align 8
  %in = alloca i8, align 1
  %newlen = alloca i64, align 8
  %index = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %i = alloca i32, align 4
  %previous_ns = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  store i8* %def, i8** %def.addr, align 8
  %tmp1 = load i8*, i8** %string.addr, align 8
  %call = call i64 @strlen(i8* %tmp1) #7
  %add = add i64 %call, 1
  store i64 %add, i64* %alloc, align 8
  %tmp2 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp3 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp4 = load i64, i64* %alloc, align 8
  %call1 = call i8* %tmp3(i64 %tmp4)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %tmp5 = load i64, i64* %alloc, align 8
  %call2 = call noalias i8* @malloc(i64 %tmp5) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call2, %cond.false ]
  store i8* %cond, i8** %ns, align 8
  %tmp6 = load i64, i64* %alloc, align 8
  store i64 %tmp6, i64* %newlen, align 8
  store i32 0, i32* %index, align 4
  %tmp7 = load i8*, i8** %ns, align 8
  %cmp = icmp eq i8* %tmp7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp8 = load i64, i64* %alloc, align 8
  %sub = sub i64 %tmp8, 1
  store i64 %sub, i64* %length, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end80, %if.end
  %tmp9 = load i64, i64* %length, align 8
  %dec = add i64 %tmp9, -1
  store i64 %dec, i64* %length, align 8
  %tobool4 = icmp ne i64 %tmp9, 0
  br i1 %tobool4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp10 = load i8*, i8** %string.addr, align 8
  %tmp11 = load i8, i8* %tmp10, align 1
  store i8 %tmp11, i8* %in, align 1
  store i32 0, i32* %i, align 4
  store i8* null, i8** %tmp, align 8
  %tmp12 = load i8, i8* %in, align 1
  %conv = zext i8 %tmp12 to i32
  %cmp5 = icmp sge i32 %conv, 97
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %while.body
  %tmp13 = load i8, i8* %in, align 1
  %conv7 = zext i8 %tmp13 to i32
  %cmp8 = icmp sle i32 %conv7, 122
  br i1 %cmp8, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %tmp14 = load i8, i8* %in, align 1
  %conv10 = zext i8 %tmp14 to i32
  %cmp11 = icmp sge i32 %conv10, 65
  br i1 %cmp11, label %land.lhs.true13, label %lor.lhs.false17

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %tmp15 = load i8, i8* %in, align 1
  %conv14 = zext i8 %tmp15 to i32
  %cmp15 = icmp sle i32 %conv14, 90
  br i1 %cmp15, label %if.then25, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %land.lhs.true13, %lor.lhs.false
  %tmp16 = load i8, i8* %in, align 1
  %conv18 = zext i8 %tmp16 to i32
  %cmp19 = icmp sge i32 %conv18, 48
  br i1 %cmp19, label %land.lhs.true21, label %if.else

land.lhs.true21:                                  ; preds = %lor.lhs.false17
  %tmp17 = load i8, i8* %in, align 1
  %conv22 = zext i8 %tmp17 to i32
  %cmp23 = icmp sle i32 %conv22, 57
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %land.lhs.true21, %land.lhs.true13, %land.lhs.true
  %tmp18 = load i8*, i8** %string.addr, align 8
  store i8* %tmp18, i8** %tmp, align 8
  br label %if.end43

if.else:                                          ; preds = %land.lhs.true21, %lor.lhs.false17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %tmp19 = load i32, i32* %i, align 4
  %idxprom = sext i32 %tmp19 to i64
  %tmp20 = load i8*, i8** %def.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp20, i64 %idxprom
  %tmp21 = load i8, i8* %arrayidx, align 1
  %conv26 = sext i8 %tmp21 to i32
  %cmp27 = icmp ne i32 %conv26, 0
  br i1 %cmp27, label %land.lhs.true29, label %for.end

land.lhs.true29:                                  ; preds = %for.cond
  %tmp22 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %tmp22 to i64
  %tmp23 = load i8*, i8** %def.addr, align 8
  %arrayidx31 = getelementptr inbounds i8, i8* %tmp23, i64 %idxprom30
  %tmp24 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %tmp24 to i32
  %tmp25 = load i8, i8* %in, align 1
  %conv33 = zext i8 %tmp25 to i32
  %cmp34 = icmp ne i32 %conv32, %conv33
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %land.lhs.true29
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp26 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp26, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true29, %for.cond
  %tmp27 = load i32, i32* %i, align 4
  %idxprom36 = sext i32 %tmp27 to i64
  %tmp28 = load i8*, i8** %def.addr, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %tmp28, i64 %idxprom36
  %tmp29 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %tmp29 to i32
  %cmp39 = icmp ne i32 %conv38, 0
  br i1 %cmp39, label %if.then41, label %if.end42

if.then41:                                        ; preds = %for.end
  %tmp30 = load i8*, i8** %string.addr, align 8
  store i8* %tmp30, i8** %tmp, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %for.end
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then25
  %tmp31 = load i8*, i8** %tmp, align 8
  %cmp44 = icmp eq i8* %tmp31, null
  br i1 %cmp44, label %if.then46, label %if.else76

if.then46:                                        ; preds = %if.end43
  %tmp32 = load i64, i64* %newlen, align 8
  %add47 = add i64 %tmp32, 2
  store i64 %add47, i64* %newlen, align 8
  %tmp33 = load i64, i64* %newlen, align 8
  %tmp34 = load i64, i64* %alloc, align 8
  %cmp48 = icmp ugt i64 %tmp33, %tmp34
  br i1 %cmp48, label %if.then50, label %if.end70

if.then50:                                        ; preds = %if.then46
  %tmp35 = load i64, i64* %alloc, align 8
  %mul = mul i64 %tmp35, 2
  store i64 %mul, i64* %alloc, align 8
  %tmp36 = load i8*, i8** %ns, align 8
  store i8* %tmp36, i8** %previous_ns, align 8
  %tmp37 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool52 = icmp ne i8* (i8*, i64)* %tmp37, null
  br i1 %tobool52, label %cond.true53, label %cond.false55

cond.true53:                                      ; preds = %if.then50
  %tmp38 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp39 = load i8*, i8** %ns, align 8
  %tmp40 = load i64, i64* %alloc, align 8
  %call54 = call i8* %tmp38(i8* %tmp39, i64 %tmp40)
  br label %cond.end57

cond.false55:                                     ; preds = %if.then50
  %tmp41 = load i8*, i8** %ns, align 8
  %tmp42 = load i64, i64* %alloc, align 8
  %call56 = call i8* @realloc(i8* %tmp41, i64 %tmp42) #8
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false55, %cond.true53
  %cond58 = phi i8* [ %call54, %cond.true53 ], [ %call56, %cond.false55 ]
  store i8* %cond58, i8** %ns, align 8
  %tmp43 = load i8*, i8** %ns, align 8
  %tobool59 = icmp ne i8* %tmp43, null
  br i1 %tobool59, label %if.end69, label %if.then60

if.then60:                                        ; preds = %cond.end57
  %tmp44 = load i8*, i8** %previous_ns, align 8
  %cmp61 = icmp ne i8* %tmp44, null
  br i1 %cmp61, label %if.then63, label %if.end68

if.then63:                                        ; preds = %if.then60
  %tmp45 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool64 = icmp ne void (i8*)* %tmp45, null
  br i1 %tobool64, label %if.then65, label %if.else66

if.then65:                                        ; preds = %if.then63
  %tmp46 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp47 = load i8*, i8** %previous_ns, align 8
  call void %tmp46(i8* %tmp47)
  br label %if.end67

if.else66:                                        ; preds = %if.then63
  %tmp48 = load i8*, i8** %previous_ns, align 8
  call void @free(i8* %tmp48) #8
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then60
  store i8* null, i8** %retval
  br label %return

if.end69:                                         ; preds = %cond.end57
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then46
  %tmp49 = load i32, i32* %index, align 4
  %idxprom71 = sext i32 %tmp49 to i64
  %tmp50 = load i8*, i8** %ns, align 8
  %arrayidx72 = getelementptr inbounds i8, i8* %tmp50, i64 %idxprom71
  %tmp51 = load i8, i8* %in, align 1
  %conv73 = zext i8 %tmp51 to i32
  %call74 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx72, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str11344, i32 0, i32 0), i32 %conv73) #8
  %tmp52 = load i32, i32* %index, align 4
  %add75 = add nsw i32 %tmp52, 3
  store i32 %add75, i32* %index, align 4
  br label %if.end80

if.else76:                                        ; preds = %if.end43
  %tmp53 = load i8, i8* %in, align 1
  %tmp54 = load i32, i32* %index, align 4
  %inc77 = add nsw i32 %tmp54, 1
  store i32 %inc77, i32* %index, align 4
  %idxprom78 = sext i32 %tmp54 to i64
  %tmp55 = load i8*, i8** %ns, align 8
  %arrayidx79 = getelementptr inbounds i8, i8* %tmp55, i64 %idxprom78
  store i8 %tmp53, i8* %arrayidx79, align 1
  br label %if.end80

if.end80:                                         ; preds = %if.else76, %if.end70
  %tmp56 = load i8*, i8** %string.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp56, i32 1
  store i8* %incdec.ptr, i8** %string.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp57 = load i32, i32* %index, align 4
  %idxprom81 = sext i32 %tmp57 to i64
  %tmp58 = load i8*, i8** %ns, align 8
  %arrayidx82 = getelementptr inbounds i8, i8* %tmp58, i64 %idxprom81
  store i8 0, i8* %arrayidx82, align 1
  %tmp59 = load i8*, i8** %ns, align 8
  store i8* %tmp59, i8** %retval
  br label %return

return:                                           ; preds = %while.end, %if.end68, %if.then
  %tmp60 = load i8*, i8** %retval
  ret i8* %tmp60
}

; Function Attrs: nounwind uwtable
define i32 @osip_uri_to_str_canonical(%struct.osip_uri* %url, i8** %dest) #0 {
entry:
  %url.addr = alloca %struct.osip_uri*, align 8
  %dest.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.osip_uri* %url, %struct.osip_uri** %url.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load %struct.osip_uri*, %struct.osip_uri** %url.addr, align 8
  %tmp2 = load i8**, i8*** %dest.addr, align 8
  %call = call i32 @osip_uri_to_str(%struct.osip_uri* %tmp1, i8** %tmp2)
  store i32 %call, i32* %result, align 4
  %tmp3 = load i32, i32* %result, align 4
  %cmp = icmp eq i32 %tmp3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp4 = load i8**, i8*** %dest.addr, align 8
  %tmp5 = load i8*, i8** %tmp4, align 8
  call void @__osip_uri_unescape(i8* %tmp5)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tmp6 = load i32, i32* %result, align 4
  ret i32 %tmp6
}

; Function Attrs: nounwind uwtable
define i32 @osip_authorization_init(%struct.osip_authorization** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authorization**, align 8
  store %struct.osip_authorization** %dest, %struct.osip_authorization*** %dest.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 104)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 104) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_authorization*
  %tmp3 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* %tmp2, %struct.osip_authorization** %tmp3, align 8
  %tmp4 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp5 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp4, align 8
  %cmp = icmp eq %struct.osip_authorization* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp7 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp6, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp7, i32 0, i32 0
  store i8* null, i8** %auth_type, align 8
  %tmp8 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp9 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp8, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp9, i32 0, i32 1
  store i8* null, i8** %username, align 8
  %tmp10 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp11 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp10, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp11, i32 0, i32 2
  store i8* null, i8** %realm, align 8
  %tmp12 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp13 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp12, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp13, i32 0, i32 3
  store i8* null, i8** %nonce, align 8
  %tmp14 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp15 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp14, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp15, i32 0, i32 4
  store i8* null, i8** %uri, align 8
  %tmp16 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp17 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp16, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp17, i32 0, i32 5
  store i8* null, i8** %response, align 8
  %tmp18 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp19 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp18, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp19, i32 0, i32 6
  store i8* null, i8** %digest, align 8
  %tmp20 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp21 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp20, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp21, i32 0, i32 7
  store i8* null, i8** %algorithm, align 8
  %tmp22 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp23 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp22, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp23, i32 0, i32 8
  store i8* null, i8** %cnonce, align 8
  %tmp24 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp25 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp24, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp25, i32 0, i32 9
  store i8* null, i8** %opaque, align 8
  %tmp26 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp27 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp26, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp27, i32 0, i32 10
  store i8* null, i8** %message_qop, align 8
  %tmp28 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp29 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp28, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp29, i32 0, i32 11
  store i8* null, i8** %nonce_count, align 8
  %tmp30 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  %tmp31 = load %struct.osip_authorization*, %struct.osip_authorization** %tmp30, align 8
  %auth_param = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp31, i32 0, i32 12
  store i8* null, i8** %auth_param, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp32 = load i32, i32* %retval
  ret i32 %tmp32
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_authorization(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %authorization = alloca %struct.osip_authorization*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp3 = icmp eq %struct.osip_message* %tmp3, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call = call i32 @osip_authorization_init(%struct.osip_authorization** %authorization)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp4, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end6
  %tmp6 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call11 = call i32 @osip_authorization_parse(%struct.osip_authorization* %tmp6, i8* %tmp7)
  store i32 %call11, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp12 = icmp ne i32 %tmp8, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end10
  %tmp9 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp9)
  %tmp10 = load i32, i32* %i, align 4
  store i32 %tmp10, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.end10
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 11
  %tmp13 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization, align 8
  %tmp14 = bitcast %struct.osip_authorization* %tmp13 to i8*
  %call16 = call i32 @osip_list_add(%struct.osip_list* %authorizations, i8* %tmp14, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then14, %if.then9, %if.then5, %if.then
  %tmp15 = load i32, i32* %retval
  ret i32 %tmp15
}

; Function Attrs: nounwind uwtable
define i32 @osip_authorization_parse(%struct.osip_authorization* %auth, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %auth.addr = alloca %struct.osip_authorization*, align 8
  %hvalue.addr = alloca i8*, align 8
  %space = alloca i8*, align 8
  %next = alloca i8*, align 8
  %i = alloca i32, align 4
  %parse_ok = alloca i32, align 4
  %quote1 = alloca i8*, align 8
  %quote2 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_authorization* %auth, %struct.osip_authorization** %auth.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  store i8* null, i8** %next, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp1, i32 32) #7
  store i8* %call, i8** %space, align 8
  %tmp2 = load i8*, i8** %space, align 8
  %cmp = icmp eq i8* %tmp2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load i8*, i8** %space, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp1 = icmp slt i64 %sub.ptr.sub, 1
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end3
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp7 = load i8*, i8** %space, align 8
  %tmp8 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast4 = ptrtoint i8* %tmp7 to i64
  %sub.ptr.rhs.cast5 = ptrtoint i8* %tmp8 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %add = add nsw i64 %sub.ptr.sub6, 1
  %call7 = call i8* %tmp6(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  %tmp9 = load i8*, i8** %space, align 8
  %tmp10 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast8 = ptrtoint i8* %tmp9 to i64
  %sub.ptr.rhs.cast9 = ptrtoint i8* %tmp10 to i64
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9
  %add11 = add nsw i64 %sub.ptr.sub10, 1
  %call12 = call noalias i8* @malloc(i64 %add11) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call7, %cond.true ], [ %call12, %cond.false ]
  %tmp11 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp11, i32 0, i32 0
  store i8* %cond, i8** %auth_type, align 8
  %tmp12 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type13 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %auth_type13, align 8
  %cmp14 = icmp eq i8* %tmp13, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end16:                                         ; preds = %cond.end
  %tmp14 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type17 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp14, i32 0, i32 0
  %tmp15 = load i8*, i8** %auth_type17, align 8
  %tmp16 = load i8*, i8** %hvalue.addr, align 8
  %tmp17 = load i8*, i8** %space, align 8
  %tmp18 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast18 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.rhs.cast19 = ptrtoint i8* %tmp18 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %call21 = call i8* @osip_strncpy(i8* %tmp15, i8* %tmp16, i64 %sub.ptr.sub20)
  br label %for.cond

for.cond:                                         ; preds = %if.end181, %if.end16
  store i32 0, i32* %parse_ok, align 4
  %tmp19 = load i8*, i8** %space, align 8
  %tmp20 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp20, i32 0, i32 1
  %call22 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str370, i32 0, i32 0), i8* %tmp19, i8** %username, i8** %next)
  store i32 %call22, i32* %i, align 4
  %tmp21 = load i32, i32* %i, align 4
  %cmp23 = icmp ne i32 %tmp21, 0
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %for.cond
  %tmp22 = load i32, i32* %i, align 4
  store i32 %tmp22, i32* %retval
  br label %return

if.end25:                                         ; preds = %for.cond
  %tmp23 = load i8*, i8** %next, align 8
  %cmp26 = icmp eq i8* %tmp23, null
  br i1 %cmp26, label %if.then27, label %if.else

if.then27:                                        ; preds = %if.end25
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end25
  %tmp24 = load i8*, i8** %next, align 8
  %tmp25 = load i8*, i8** %space, align 8
  %cmp28 = icmp ne i8* %tmp24, %tmp25
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.else
  %tmp26 = load i8*, i8** %next, align 8
  store i8* %tmp26, i8** %space, align 8
  %tmp27 = load i32, i32* %parse_ok, align 4
  %inc = add nsw i32 %tmp27, 1
  store i32 %inc, i32* %parse_ok, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30
  %tmp28 = load i8*, i8** %space, align 8
  %tmp29 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp29, i32 0, i32 2
  %call32 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str1371, i32 0, i32 0), i8* %tmp28, i8** %realm, i8** %next)
  store i32 %call32, i32* %i, align 4
  %tmp30 = load i32, i32* %i, align 4
  %cmp33 = icmp ne i32 %tmp30, 0
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end31
  %tmp31 = load i32, i32* %i, align 4
  store i32 %tmp31, i32* %retval
  br label %return

if.end35:                                         ; preds = %if.end31
  %tmp32 = load i8*, i8** %next, align 8
  %cmp36 = icmp eq i8* %tmp32, null
  br i1 %cmp36, label %if.then37, label %if.else38

if.then37:                                        ; preds = %if.end35
  store i32 0, i32* %retval
  br label %return

if.else38:                                        ; preds = %if.end35
  %tmp33 = load i8*, i8** %next, align 8
  %tmp34 = load i8*, i8** %space, align 8
  %cmp39 = icmp ne i8* %tmp33, %tmp34
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %if.else38
  %tmp35 = load i8*, i8** %next, align 8
  store i8* %tmp35, i8** %space, align 8
  %tmp36 = load i32, i32* %parse_ok, align 4
  %inc41 = add nsw i32 %tmp36, 1
  store i32 %inc41, i32* %parse_ok, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %if.else38
  br label %if.end43

if.end43:                                         ; preds = %if.end42
  %tmp37 = load i8*, i8** %space, align 8
  %tmp38 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp38, i32 0, i32 3
  %call44 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str2372, i32 0, i32 0), i8* %tmp37, i8** %nonce, i8** %next)
  store i32 %call44, i32* %i, align 4
  %tmp39 = load i32, i32* %i, align 4
  %cmp45 = icmp ne i32 %tmp39, 0
  br i1 %cmp45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end43
  %tmp40 = load i32, i32* %i, align 4
  store i32 %tmp40, i32* %retval
  br label %return

if.end47:                                         ; preds = %if.end43
  %tmp41 = load i8*, i8** %next, align 8
  %cmp48 = icmp eq i8* %tmp41, null
  br i1 %cmp48, label %if.then49, label %if.else50

if.then49:                                        ; preds = %if.end47
  store i32 0, i32* %retval
  br label %return

if.else50:                                        ; preds = %if.end47
  %tmp42 = load i8*, i8** %next, align 8
  %tmp43 = load i8*, i8** %space, align 8
  %cmp51 = icmp ne i8* %tmp42, %tmp43
  br i1 %cmp51, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.else50
  %tmp44 = load i8*, i8** %next, align 8
  store i8* %tmp44, i8** %space, align 8
  %tmp45 = load i32, i32* %parse_ok, align 4
  %inc53 = add nsw i32 %tmp45, 1
  store i32 %inc53, i32* %parse_ok, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54
  %tmp46 = load i8*, i8** %space, align 8
  %tmp47 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp47, i32 0, i32 4
  %call56 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str3373, i32 0, i32 0), i8* %tmp46, i8** %uri, i8** %next)
  store i32 %call56, i32* %i, align 4
  %tmp48 = load i32, i32* %i, align 4
  %cmp57 = icmp ne i32 %tmp48, 0
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.end55
  %tmp49 = load i32, i32* %i, align 4
  store i32 %tmp49, i32* %retval
  br label %return

if.end59:                                         ; preds = %if.end55
  %tmp50 = load i8*, i8** %next, align 8
  %cmp60 = icmp eq i8* %tmp50, null
  br i1 %cmp60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.end59
  store i32 0, i32* %retval
  br label %return

if.else62:                                        ; preds = %if.end59
  %tmp51 = load i8*, i8** %next, align 8
  %tmp52 = load i8*, i8** %space, align 8
  %cmp63 = icmp ne i8* %tmp51, %tmp52
  br i1 %cmp63, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.else62
  %tmp53 = load i8*, i8** %next, align 8
  store i8* %tmp53, i8** %space, align 8
  %tmp54 = load i32, i32* %parse_ok, align 4
  %inc65 = add nsw i32 %tmp54, 1
  store i32 %inc65, i32* %parse_ok, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then64, %if.else62
  br label %if.end67

if.end67:                                         ; preds = %if.end66
  %tmp55 = load i8*, i8** %space, align 8
  %tmp56 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp56, i32 0, i32 5
  %call68 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str4374, i32 0, i32 0), i8* %tmp55, i8** %response, i8** %next)
  store i32 %call68, i32* %i, align 4
  %tmp57 = load i32, i32* %i, align 4
  %cmp69 = icmp ne i32 %tmp57, 0
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  %tmp58 = load i32, i32* %i, align 4
  store i32 %tmp58, i32* %retval
  br label %return

if.end71:                                         ; preds = %if.end67
  %tmp59 = load i8*, i8** %next, align 8
  %cmp72 = icmp eq i8* %tmp59, null
  br i1 %cmp72, label %if.then73, label %if.else74

if.then73:                                        ; preds = %if.end71
  store i32 0, i32* %retval
  br label %return

if.else74:                                        ; preds = %if.end71
  %tmp60 = load i8*, i8** %next, align 8
  %tmp61 = load i8*, i8** %space, align 8
  %cmp75 = icmp ne i8* %tmp60, %tmp61
  br i1 %cmp75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %if.else74
  %tmp62 = load i8*, i8** %next, align 8
  store i8* %tmp62, i8** %space, align 8
  %tmp63 = load i32, i32* %parse_ok, align 4
  %inc77 = add nsw i32 %tmp63, 1
  store i32 %inc77, i32* %parse_ok, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %if.else74
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  %tmp64 = load i8*, i8** %space, align 8
  %tmp65 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp65, i32 0, i32 6
  %call80 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str5375, i32 0, i32 0), i8* %tmp64, i8** %digest, i8** %next)
  store i32 %call80, i32* %i, align 4
  %tmp66 = load i32, i32* %i, align 4
  %cmp81 = icmp ne i32 %tmp66, 0
  br i1 %cmp81, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end79
  %tmp67 = load i32, i32* %i, align 4
  store i32 %tmp67, i32* %retval
  br label %return

if.end83:                                         ; preds = %if.end79
  %tmp68 = load i8*, i8** %next, align 8
  %cmp84 = icmp eq i8* %tmp68, null
  br i1 %cmp84, label %if.then85, label %if.else86

if.then85:                                        ; preds = %if.end83
  store i32 0, i32* %retval
  br label %return

if.else86:                                        ; preds = %if.end83
  %tmp69 = load i8*, i8** %next, align 8
  %tmp70 = load i8*, i8** %space, align 8
  %cmp87 = icmp ne i8* %tmp69, %tmp70
  br i1 %cmp87, label %if.then88, label %if.end90

if.then88:                                        ; preds = %if.else86
  %tmp71 = load i8*, i8** %next, align 8
  store i8* %tmp71, i8** %space, align 8
  %tmp72 = load i32, i32* %parse_ok, align 4
  %inc89 = add nsw i32 %tmp72, 1
  store i32 %inc89, i32* %parse_ok, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then88, %if.else86
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  %tmp73 = load i8*, i8** %space, align 8
  %tmp74 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp74, i32 0, i32 7
  %call92 = call i32 @__osip_token_set(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str6376, i32 0, i32 0), i8* %tmp73, i8** %algorithm, i8** %next)
  store i32 %call92, i32* %i, align 4
  %tmp75 = load i32, i32* %i, align 4
  %cmp93 = icmp ne i32 %tmp75, 0
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end91
  %tmp76 = load i32, i32* %i, align 4
  store i32 %tmp76, i32* %retval
  br label %return

if.end95:                                         ; preds = %if.end91
  %tmp77 = load i8*, i8** %next, align 8
  %cmp96 = icmp eq i8* %tmp77, null
  br i1 %cmp96, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.end95
  store i32 0, i32* %retval
  br label %return

if.else98:                                        ; preds = %if.end95
  %tmp78 = load i8*, i8** %next, align 8
  %tmp79 = load i8*, i8** %space, align 8
  %cmp99 = icmp ne i8* %tmp78, %tmp79
  br i1 %cmp99, label %if.then100, label %if.end102

if.then100:                                       ; preds = %if.else98
  %tmp80 = load i8*, i8** %next, align 8
  store i8* %tmp80, i8** %space, align 8
  %tmp81 = load i32, i32* %parse_ok, align 4
  %inc101 = add nsw i32 %tmp81, 1
  store i32 %inc101, i32* %parse_ok, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %if.else98
  br label %if.end103

if.end103:                                        ; preds = %if.end102
  %tmp82 = load i8*, i8** %space, align 8
  %tmp83 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp83, i32 0, i32 8
  %call104 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str7377, i32 0, i32 0), i8* %tmp82, i8** %cnonce, i8** %next)
  store i32 %call104, i32* %i, align 4
  %tmp84 = load i32, i32* %i, align 4
  %cmp105 = icmp ne i32 %tmp84, 0
  br i1 %cmp105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.end103
  %tmp85 = load i32, i32* %i, align 4
  store i32 %tmp85, i32* %retval
  br label %return

if.end107:                                        ; preds = %if.end103
  %tmp86 = load i8*, i8** %next, align 8
  %cmp108 = icmp eq i8* %tmp86, null
  br i1 %cmp108, label %if.then109, label %if.else110

if.then109:                                       ; preds = %if.end107
  store i32 0, i32* %retval
  br label %return

if.else110:                                       ; preds = %if.end107
  %tmp87 = load i8*, i8** %next, align 8
  %tmp88 = load i8*, i8** %space, align 8
  %cmp111 = icmp ne i8* %tmp87, %tmp88
  br i1 %cmp111, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else110
  %tmp89 = load i8*, i8** %next, align 8
  store i8* %tmp89, i8** %space, align 8
  %tmp90 = load i32, i32* %parse_ok, align 4
  %inc113 = add nsw i32 %tmp90, 1
  store i32 %inc113, i32* %parse_ok, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else110
  br label %if.end115

if.end115:                                        ; preds = %if.end114
  %tmp91 = load i8*, i8** %space, align 8
  %tmp92 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp92, i32 0, i32 9
  %call116 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str8378, i32 0, i32 0), i8* %tmp91, i8** %opaque, i8** %next)
  store i32 %call116, i32* %i, align 4
  %tmp93 = load i32, i32* %i, align 4
  %cmp117 = icmp ne i32 %tmp93, 0
  br i1 %cmp117, label %if.then118, label %if.end119

if.then118:                                       ; preds = %if.end115
  %tmp94 = load i32, i32* %i, align 4
  store i32 %tmp94, i32* %retval
  br label %return

if.end119:                                        ; preds = %if.end115
  %tmp95 = load i8*, i8** %next, align 8
  %cmp120 = icmp eq i8* %tmp95, null
  br i1 %cmp120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.end119
  store i32 0, i32* %retval
  br label %return

if.else122:                                       ; preds = %if.end119
  %tmp96 = load i8*, i8** %next, align 8
  %tmp97 = load i8*, i8** %space, align 8
  %cmp123 = icmp ne i8* %tmp96, %tmp97
  br i1 %cmp123, label %if.then124, label %if.end126

if.then124:                                       ; preds = %if.else122
  %tmp98 = load i8*, i8** %next, align 8
  store i8* %tmp98, i8** %space, align 8
  %tmp99 = load i32, i32* %parse_ok, align 4
  %inc125 = add nsw i32 %tmp99, 1
  store i32 %inc125, i32* %parse_ok, align 4
  br label %if.end126

if.end126:                                        ; preds = %if.then124, %if.else122
  br label %if.end127

if.end127:                                        ; preds = %if.end126
  %tmp100 = load i8*, i8** %space, align 8
  %tmp101 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp101, i32 0, i32 10
  %call128 = call i32 @__osip_token_set(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str9379, i32 0, i32 0), i8* %tmp100, i8** %message_qop, i8** %next)
  store i32 %call128, i32* %i, align 4
  %tmp102 = load i32, i32* %i, align 4
  %cmp129 = icmp ne i32 %tmp102, 0
  br i1 %cmp129, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.end127
  %tmp103 = load i32, i32* %i, align 4
  store i32 %tmp103, i32* %retval
  br label %return

if.end131:                                        ; preds = %if.end127
  %tmp104 = load i8*, i8** %next, align 8
  %cmp132 = icmp eq i8* %tmp104, null
  br i1 %cmp132, label %if.then133, label %if.else134

if.then133:                                       ; preds = %if.end131
  store i32 0, i32* %retval
  br label %return

if.else134:                                       ; preds = %if.end131
  %tmp105 = load i8*, i8** %next, align 8
  %tmp106 = load i8*, i8** %space, align 8
  %cmp135 = icmp ne i8* %tmp105, %tmp106
  br i1 %cmp135, label %if.then136, label %if.end138

if.then136:                                       ; preds = %if.else134
  %tmp107 = load i8*, i8** %next, align 8
  store i8* %tmp107, i8** %space, align 8
  %tmp108 = load i32, i32* %parse_ok, align 4
  %inc137 = add nsw i32 %tmp108, 1
  store i32 %inc137, i32* %parse_ok, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %if.else134
  br label %if.end139

if.end139:                                        ; preds = %if.end138
  %tmp109 = load i8*, i8** %space, align 8
  %tmp110 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp110, i32 0, i32 11
  %call140 = call i32 @__osip_token_set(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str10380, i32 0, i32 0), i8* %tmp109, i8** %nonce_count, i8** %next)
  store i32 %call140, i32* %i, align 4
  %tmp111 = load i32, i32* %i, align 4
  %cmp141 = icmp ne i32 %tmp111, 0
  br i1 %cmp141, label %if.then142, label %if.end143

if.then142:                                       ; preds = %if.end139
  %tmp112 = load i32, i32* %i, align 4
  store i32 %tmp112, i32* %retval
  br label %return

if.end143:                                        ; preds = %if.end139
  %tmp113 = load i8*, i8** %next, align 8
  %cmp144 = icmp eq i8* %tmp113, null
  br i1 %cmp144, label %if.then145, label %if.else146

if.then145:                                       ; preds = %if.end143
  store i32 0, i32* %retval
  br label %return

if.else146:                                       ; preds = %if.end143
  %tmp114 = load i8*, i8** %next, align 8
  %tmp115 = load i8*, i8** %space, align 8
  %cmp147 = icmp ne i8* %tmp114, %tmp115
  br i1 %cmp147, label %if.then148, label %if.end150

if.then148:                                       ; preds = %if.else146
  %tmp116 = load i8*, i8** %next, align 8
  store i8* %tmp116, i8** %space, align 8
  %tmp117 = load i32, i32* %parse_ok, align 4
  %inc149 = add nsw i32 %tmp117, 1
  store i32 %inc149, i32* %parse_ok, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.then148, %if.else146
  br label %if.end151

if.end151:                                        ; preds = %if.end150
  %tmp118 = load i32, i32* %parse_ok, align 4
  %cmp152 = icmp eq i32 0, %tmp118
  br i1 %cmp152, label %if.then153, label %if.end181

if.then153:                                       ; preds = %if.end151
  %tmp119 = load i8*, i8** %space, align 8
  %call154 = call i64 @strlen(i8* %tmp119) #7
  %cmp155 = icmp ult i64 %call154, 1
  br i1 %cmp155, label %if.then156, label %if.end157

if.then156:                                       ; preds = %if.then153
  store i32 0, i32* %retval
  br label %return

if.end157:                                        ; preds = %if.then153
  %tmp120 = load i8*, i8** %space, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp120, i64 1
  %call158 = call i8* @strchr(i8* %add.ptr, i32 44) #7
  store i8* %call158, i8** %tmp, align 8
  %tmp121 = load i8*, i8** %tmp, align 8
  %cmp159 = icmp eq i8* %tmp121, null
  br i1 %cmp159, label %if.then160, label %if.end161

if.then160:                                       ; preds = %if.end157
  store i32 0, i32* %retval
  br label %return

if.end161:                                        ; preds = %if.end157
  %tmp122 = load i8*, i8** %space, align 8
  %call162 = call i8* @__osip_quote_find(i8* %tmp122)
  store i8* %call162, i8** %quote1, align 8
  %tmp123 = load i8*, i8** %quote1, align 8
  %cmp163 = icmp ne i8* %tmp123, null
  br i1 %cmp163, label %land.lhs.true, label %if.else179

land.lhs.true:                                    ; preds = %if.end161
  %tmp124 = load i8*, i8** %quote1, align 8
  %tmp125 = load i8*, i8** %tmp, align 8
  %cmp164 = icmp ult i8* %tmp124, %tmp125
  br i1 %cmp164, label %if.then165, label %if.else179

if.then165:                                       ; preds = %land.lhs.true
  %tmp126 = load i8*, i8** %quote1, align 8
  %add.ptr166 = getelementptr inbounds i8, i8* %tmp126, i64 1
  %call167 = call i8* @__osip_quote_find(i8* %add.ptr166)
  store i8* %call167, i8** %quote2, align 8
  %tmp127 = load i8*, i8** %quote2, align 8
  %cmp168 = icmp eq i8* %tmp127, null
  br i1 %cmp168, label %if.then169, label %if.end170

if.then169:                                       ; preds = %if.then165
  store i32 -5, i32* %retval
  br label %return

if.end170:                                        ; preds = %if.then165
  %tmp128 = load i8*, i8** %tmp, align 8
  %tmp129 = load i8*, i8** %quote2, align 8
  %cmp171 = icmp ult i8* %tmp128, %tmp129
  br i1 %cmp171, label %if.then172, label %if.else174

if.then172:                                       ; preds = %if.end170
  %tmp130 = load i8*, i8** %quote2, align 8
  %call173 = call i8* @strchr(i8* %tmp130, i32 44) #7
  store i8* %call173, i8** %space, align 8
  br label %if.end175

if.else174:                                       ; preds = %if.end170
  %tmp131 = load i8*, i8** %tmp, align 8
  store i8* %tmp131, i8** %space, align 8
  br label %if.end175

if.end175:                                        ; preds = %if.else174, %if.then172
  %tmp132 = load i8*, i8** %space, align 8
  %cmp176 = icmp eq i8* %tmp132, null
  br i1 %cmp176, label %if.then177, label %if.end178

if.then177:                                       ; preds = %if.end175
  store i32 0, i32* %retval
  br label %return

if.end178:                                        ; preds = %if.end175
  br label %if.end180

if.else179:                                       ; preds = %land.lhs.true, %if.end161
  %tmp133 = load i8*, i8** %tmp, align 8
  store i8* %tmp133, i8** %space, align 8
  br label %if.end180

if.end180:                                        ; preds = %if.else179, %if.end178
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end151
  br label %for.cond

return:                                           ; preds = %if.then177, %if.then169, %if.then160, %if.then156, %if.then145, %if.then142, %if.then133, %if.then130, %if.then121, %if.then118, %if.then109, %if.then106, %if.then97, %if.then94, %if.then85, %if.then82, %if.then73, %if.then70, %if.then61, %if.then58, %if.then49, %if.then46, %if.then37, %if.then34, %if.then27, %if.then24, %if.then15, %if.then2, %if.then
  %tmp134 = load i32, i32* %retval
  ret i32 %tmp134
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_free(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cmp = icmp eq %struct.osip_authorization* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end113

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %auth_type, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %auth_type4 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %auth_type4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %auth_type5 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %auth_type5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %username, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %username12 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %username12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %username14 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %username14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp17, i32 0, i32 2
  %tmp18 = load i8*, i8** %realm, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end16
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.then18
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %realm21 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp21, i32 0, i32 2
  %tmp22 = load i8*, i8** %realm21, align 8
  call void %tmp20(i8* %tmp22)
  br label %if.end24

if.else22:                                        ; preds = %if.then18
  %tmp23 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %realm23 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp23, i32 0, i32 2
  %tmp24 = load i8*, i8** %realm23, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16
  %tmp25 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %nonce, align 8
  %cmp26 = icmp ne i8* %tmp26, null
  br i1 %cmp26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end25
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool28 = icmp ne void (i8*)* %tmp27, null
  br i1 %tobool28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.then27
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp29 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce30 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp29, i32 0, i32 3
  %tmp30 = load i8*, i8** %nonce30, align 8
  call void %tmp28(i8* %tmp30)
  br label %if.end33

if.else31:                                        ; preds = %if.then27
  %tmp31 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce32 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp31, i32 0, i32 3
  %tmp32 = load i8*, i8** %nonce32, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end25
  %tmp33 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp33, i32 0, i32 4
  %tmp34 = load i8*, i8** %uri, align 8
  %cmp35 = icmp ne i8* %tmp34, null
  br i1 %cmp35, label %if.then36, label %if.end43

if.then36:                                        ; preds = %if.end34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool37 = icmp ne void (i8*)* %tmp35, null
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then36
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp37 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %uri39 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp37, i32 0, i32 4
  %tmp38 = load i8*, i8** %uri39, align 8
  call void %tmp36(i8* %tmp38)
  br label %if.end42

if.else40:                                        ; preds = %if.then36
  %tmp39 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %uri41 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp39, i32 0, i32 4
  %tmp40 = load i8*, i8** %uri41, align 8
  call void @free(i8* %tmp40) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  %tmp41 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp41, i32 0, i32 5
  %tmp42 = load i8*, i8** %response, align 8
  %cmp44 = icmp ne i8* %tmp42, null
  br i1 %cmp44, label %if.then45, label %if.end52

if.then45:                                        ; preds = %if.end43
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool46 = icmp ne void (i8*)* %tmp43, null
  br i1 %tobool46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.then45
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp45 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %response48 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp45, i32 0, i32 5
  %tmp46 = load i8*, i8** %response48, align 8
  call void %tmp44(i8* %tmp46)
  br label %if.end51

if.else49:                                        ; preds = %if.then45
  %tmp47 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %response50 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp47, i32 0, i32 5
  %tmp48 = load i8*, i8** %response50, align 8
  call void @free(i8* %tmp48) #8
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end43
  %tmp49 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp49, i32 0, i32 6
  %tmp50 = load i8*, i8** %digest, align 8
  %cmp53 = icmp ne i8* %tmp50, null
  br i1 %cmp53, label %if.then54, label %if.end61

if.then54:                                        ; preds = %if.end52
  %tmp51 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool55 = icmp ne void (i8*)* %tmp51, null
  br i1 %tobool55, label %if.then56, label %if.else58

if.then56:                                        ; preds = %if.then54
  %tmp52 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp53 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %digest57 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp53, i32 0, i32 6
  %tmp54 = load i8*, i8** %digest57, align 8
  call void %tmp52(i8* %tmp54)
  br label %if.end60

if.else58:                                        ; preds = %if.then54
  %tmp55 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %digest59 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp55, i32 0, i32 6
  %tmp56 = load i8*, i8** %digest59, align 8
  call void @free(i8* %tmp56) #8
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then56
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end52
  %tmp57 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp57, i32 0, i32 7
  %tmp58 = load i8*, i8** %algorithm, align 8
  %cmp62 = icmp ne i8* %tmp58, null
  br i1 %cmp62, label %if.then63, label %if.end70

if.then63:                                        ; preds = %if.end61
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool64 = icmp ne void (i8*)* %tmp59, null
  br i1 %tobool64, label %if.then65, label %if.else67

if.then65:                                        ; preds = %if.then63
  %tmp60 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp61 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %algorithm66 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp61, i32 0, i32 7
  %tmp62 = load i8*, i8** %algorithm66, align 8
  call void %tmp60(i8* %tmp62)
  br label %if.end69

if.else67:                                        ; preds = %if.then63
  %tmp63 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %algorithm68 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp63, i32 0, i32 7
  %tmp64 = load i8*, i8** %algorithm68, align 8
  call void @free(i8* %tmp64) #8
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end61
  %tmp65 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp65, i32 0, i32 8
  %tmp66 = load i8*, i8** %cnonce, align 8
  %cmp71 = icmp ne i8* %tmp66, null
  br i1 %cmp71, label %if.then72, label %if.end79

if.then72:                                        ; preds = %if.end70
  %tmp67 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool73 = icmp ne void (i8*)* %tmp67, null
  br i1 %tobool73, label %if.then74, label %if.else76

if.then74:                                        ; preds = %if.then72
  %tmp68 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp69 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cnonce75 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp69, i32 0, i32 8
  %tmp70 = load i8*, i8** %cnonce75, align 8
  call void %tmp68(i8* %tmp70)
  br label %if.end78

if.else76:                                        ; preds = %if.then72
  %tmp71 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cnonce77 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp71, i32 0, i32 8
  %tmp72 = load i8*, i8** %cnonce77, align 8
  call void @free(i8* %tmp72) #8
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then74
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end70
  %tmp73 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp73, i32 0, i32 9
  %tmp74 = load i8*, i8** %opaque, align 8
  %cmp80 = icmp ne i8* %tmp74, null
  br i1 %cmp80, label %if.then81, label %if.end88

if.then81:                                        ; preds = %if.end79
  %tmp75 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool82 = icmp ne void (i8*)* %tmp75, null
  br i1 %tobool82, label %if.then83, label %if.else85

if.then83:                                        ; preds = %if.then81
  %tmp76 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp77 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %opaque84 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp77, i32 0, i32 9
  %tmp78 = load i8*, i8** %opaque84, align 8
  call void %tmp76(i8* %tmp78)
  br label %if.end87

if.else85:                                        ; preds = %if.then81
  %tmp79 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %opaque86 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp79, i32 0, i32 9
  %tmp80 = load i8*, i8** %opaque86, align 8
  call void @free(i8* %tmp80) #8
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then83
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end79
  %tmp81 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp81, i32 0, i32 10
  %tmp82 = load i8*, i8** %message_qop, align 8
  %cmp89 = icmp ne i8* %tmp82, null
  br i1 %cmp89, label %if.then90, label %if.end97

if.then90:                                        ; preds = %if.end88
  %tmp83 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool91 = icmp ne void (i8*)* %tmp83, null
  br i1 %tobool91, label %if.then92, label %if.else94

if.then92:                                        ; preds = %if.then90
  %tmp84 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp85 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %message_qop93 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp85, i32 0, i32 10
  %tmp86 = load i8*, i8** %message_qop93, align 8
  call void %tmp84(i8* %tmp86)
  br label %if.end96

if.else94:                                        ; preds = %if.then90
  %tmp87 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %message_qop95 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp87, i32 0, i32 10
  %tmp88 = load i8*, i8** %message_qop95, align 8
  call void @free(i8* %tmp88) #8
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then92
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end88
  %tmp89 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp89, i32 0, i32 11
  %tmp90 = load i8*, i8** %nonce_count, align 8
  %cmp98 = icmp ne i8* %tmp90, null
  br i1 %cmp98, label %if.then99, label %if.end106

if.then99:                                        ; preds = %if.end97
  %tmp91 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool100 = icmp ne void (i8*)* %tmp91, null
  br i1 %tobool100, label %if.then101, label %if.else103

if.then101:                                       ; preds = %if.then99
  %tmp92 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp93 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce_count102 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp93, i32 0, i32 11
  %tmp94 = load i8*, i8** %nonce_count102, align 8
  call void %tmp92(i8* %tmp94)
  br label %if.end105

if.else103:                                       ; preds = %if.then99
  %tmp95 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce_count104 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp95, i32 0, i32 11
  %tmp96 = load i8*, i8** %nonce_count104, align 8
  call void @free(i8* %tmp96) #8
  br label %if.end105

if.end105:                                        ; preds = %if.else103, %if.then101
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end97
  %tmp97 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cmp107 = icmp ne %struct.osip_authorization* %tmp97, null
  br i1 %cmp107, label %if.then108, label %if.end113

if.then108:                                       ; preds = %if.end106
  %tmp98 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool109 = icmp ne void (i8*)* %tmp98, null
  br i1 %tobool109, label %if.then110, label %if.else111

if.then110:                                       ; preds = %if.then108
  %tmp99 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp100 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %tmp101 = bitcast %struct.osip_authorization* %tmp100 to i8*
  call void %tmp99(i8* %tmp101)
  br label %if.end112

if.else111:                                       ; preds = %if.then108
  %tmp102 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %tmp103 = bitcast %struct.osip_authorization* %tmp102 to i8*
  call void @free(i8* %tmp103) #8
  br label %if.end112

if.end112:                                        ; preds = %if.else111, %if.then110
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end106, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_authorization(%struct.osip_message* %sip, i32 %pos, %struct.osip_authorization** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_authorization**, align 8
  %authorization = alloca %struct.osip_authorization*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_authorization** %dest, %struct.osip_authorization*** %dest.addr, align 8
  %tmp = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* null, %struct.osip_authorization** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 11
  %call = call i32 @osip_list_size(%struct.osip_list* %authorizations)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %authorizations1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 11
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %authorizations1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_authorization*
  store %struct.osip_authorization* %tmp5, %struct.osip_authorization** %authorization, align 8
  %tmp6 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization, align 8
  %tmp7 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* %tmp6, %struct.osip_authorization** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_auth_type(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %auth_type, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_auth_type(%struct.osip_authorization* %authorization, i8* %auth_type) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %auth_type.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %auth_type, i8** %auth_type.addr, align 8
  %tmp = load i8*, i8** %auth_type.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %auth_type1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %auth_type1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_username(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 1
  %tmp1 = load i8*, i8** %username, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_username(%struct.osip_authorization* %authorization, i8* %username) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %username.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %username, i8** %username.addr, align 8
  %tmp = load i8*, i8** %username.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %username1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %username1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_realm(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 2
  %tmp1 = load i8*, i8** %realm, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_realm(%struct.osip_authorization* %authorization, i8* %realm) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %realm.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %realm, i8** %realm.addr, align 8
  %tmp = load i8*, i8** %realm.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %realm1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 2
  store i8* %tmp, i8** %realm1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_nonce(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 3
  %tmp1 = load i8*, i8** %nonce, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_nonce(%struct.osip_authorization* %authorization, i8* %nonce) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %nonce.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %nonce, i8** %nonce.addr, align 8
  %tmp = load i8*, i8** %nonce.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 3
  store i8* %tmp, i8** %nonce1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_uri(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 4
  %tmp1 = load i8*, i8** %uri, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_uri(%struct.osip_authorization* %authorization, i8* %uri) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %uri.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %uri, i8** %uri.addr, align 8
  %tmp = load i8*, i8** %uri.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %uri1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 4
  store i8* %tmp, i8** %uri1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_response(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 5
  %tmp1 = load i8*, i8** %response, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_response(%struct.osip_authorization* %authorization, i8* %response) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %response.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %response, i8** %response.addr, align 8
  %tmp = load i8*, i8** %response.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %response1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 5
  store i8* %tmp, i8** %response1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_digest(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 6
  %tmp1 = load i8*, i8** %digest, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_digest(%struct.osip_authorization* %authorization, i8* %digest) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %digest.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %digest, i8** %digest.addr, align 8
  %tmp = load i8*, i8** %digest.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %digest1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 6
  store i8* %tmp, i8** %digest1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_algorithm(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 7
  %tmp1 = load i8*, i8** %algorithm, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_algorithm(%struct.osip_authorization* %authorization, i8* %algorithm) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %algorithm.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %algorithm, i8** %algorithm.addr, align 8
  %tmp = load i8*, i8** %algorithm.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %algorithm1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 7
  store i8* %tmp, i8** %algorithm1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_cnonce(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 8
  %tmp1 = load i8*, i8** %cnonce, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_cnonce(%struct.osip_authorization* %authorization, i8* %cnonce) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %cnonce.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %cnonce, i8** %cnonce.addr, align 8
  %tmp = load i8*, i8** %cnonce.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %cnonce1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 8
  store i8* %tmp, i8** %cnonce1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_opaque(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 9
  %tmp1 = load i8*, i8** %opaque, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_opaque(%struct.osip_authorization* %authorization, i8* %opaque) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %opaque.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  %tmp = load i8*, i8** %opaque.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %opaque1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 9
  store i8* %tmp, i8** %opaque1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_message_qop(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 10
  %tmp1 = load i8*, i8** %message_qop, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_message_qop(%struct.osip_authorization* %authorization, i8* %message_qop) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %message_qop.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %message_qop, i8** %message_qop.addr, align 8
  %tmp = load i8*, i8** %message_qop.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %message_qop1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 10
  store i8* %tmp, i8** %message_qop1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_authorization_get_nonce_count(%struct.osip_authorization* %authorization) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  %tmp = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp, i32 0, i32 11
  %tmp1 = load i8*, i8** %nonce_count, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_authorization_set_nonce_count(%struct.osip_authorization* %authorization, i8* %nonce_count) #0 {
entry:
  %authorization.addr = alloca %struct.osip_authorization*, align 8
  %nonce_count.addr = alloca i8*, align 8
  store %struct.osip_authorization* %authorization, %struct.osip_authorization** %authorization.addr, align 8
  store i8* %nonce_count, i8** %nonce_count.addr, align 8
  %tmp = load i8*, i8** %nonce_count.addr, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %authorization.addr, align 8
  %nonce_count1 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp1, i32 0, i32 11
  store i8* %tmp, i8** %nonce_count1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_authorization_to_str(%struct.osip_authorization* %auth, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %auth.addr = alloca %struct.osip_authorization*, align 8
  %dest.addr = alloca i8**, align 8
  %len = alloca i64, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_authorization* %auth, %struct.osip_authorization** %auth.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cmp = icmp eq %struct.osip_authorization* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %auth_type, align 8
  %cmp1 = icmp eq i8* %tmp4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type2 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %auth_type2, align 8
  %call = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call, 1
  store i64 %add, i64* %len, align 8
  %tmp7 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp7, i32 0, i32 1
  %tmp8 = load i8*, i8** %username, align 8
  %cmp3 = icmp ne i8* %tmp8, null
  br i1 %cmp3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %tmp9 = load i64, i64* %len, align 8
  %add5 = add i64 %tmp9, 10
  %tmp10 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username6 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %username6, align 8
  %call7 = call i64 @strlen(i8* %tmp11) #7
  %add8 = add i64 %add5, %call7
  store i64 %add8, i64* %len, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.end
  %tmp12 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp12, i32 0, i32 2
  %tmp13 = load i8*, i8** %realm, align 8
  %cmp10 = icmp ne i8* %tmp13, null
  br i1 %cmp10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end9
  %tmp14 = load i64, i64* %len, align 8
  %add12 = add i64 %tmp14, 8
  %tmp15 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm13 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp15, i32 0, i32 2
  %tmp16 = load i8*, i8** %realm13, align 8
  %call14 = call i64 @strlen(i8* %tmp16) #7
  %add15 = add i64 %add12, %call14
  store i64 %add15, i64* %len, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %if.end9
  %tmp17 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp17, i32 0, i32 3
  %tmp18 = load i8*, i8** %nonce, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end23

if.then18:                                        ; preds = %if.end16
  %tmp19 = load i64, i64* %len, align 8
  %add19 = add i64 %tmp19, 8
  %tmp20 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce20 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp20, i32 0, i32 3
  %tmp21 = load i8*, i8** %nonce20, align 8
  %call21 = call i64 @strlen(i8* %tmp21) #7
  %add22 = add i64 %add19, %call21
  store i64 %add22, i64* %len, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %if.end16
  %tmp22 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp22, i32 0, i32 4
  %tmp23 = load i8*, i8** %uri, align 8
  %cmp24 = icmp ne i8* %tmp23, null
  br i1 %cmp24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end23
  %tmp24 = load i64, i64* %len, align 8
  %add26 = add i64 %tmp24, 6
  %tmp25 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri27 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp25, i32 0, i32 4
  %tmp26 = load i8*, i8** %uri27, align 8
  %call28 = call i64 @strlen(i8* %tmp26) #7
  %add29 = add i64 %add26, %call28
  store i64 %add29, i64* %len, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end23
  %tmp27 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp27, i32 0, i32 5
  %tmp28 = load i8*, i8** %response, align 8
  %cmp31 = icmp ne i8* %tmp28, null
  br i1 %cmp31, label %if.then32, label %if.end37

if.then32:                                        ; preds = %if.end30
  %tmp29 = load i64, i64* %len, align 8
  %add33 = add i64 %tmp29, 11
  %tmp30 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response34 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp30, i32 0, i32 5
  %tmp31 = load i8*, i8** %response34, align 8
  %call35 = call i64 @strlen(i8* %tmp31) #7
  %add36 = add i64 %add33, %call35
  store i64 %add36, i64* %len, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end30
  %tmp32 = load i64, i64* %len, align 8
  %add38 = add i64 %tmp32, 2
  store i64 %add38, i64* %len, align 8
  %tmp33 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp33, i32 0, i32 6
  %tmp34 = load i8*, i8** %digest, align 8
  %cmp39 = icmp ne i8* %tmp34, null
  br i1 %cmp39, label %if.then40, label %if.end45

if.then40:                                        ; preds = %if.end37
  %tmp35 = load i64, i64* %len, align 8
  %tmp36 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest41 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp36, i32 0, i32 6
  %tmp37 = load i8*, i8** %digest41, align 8
  %call42 = call i64 @strlen(i8* %tmp37) #7
  %add43 = add i64 %tmp35, %call42
  %add44 = add i64 %add43, 9
  store i64 %add44, i64* %len, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then40, %if.end37
  %tmp38 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp38, i32 0, i32 7
  %tmp39 = load i8*, i8** %algorithm, align 8
  %cmp46 = icmp ne i8* %tmp39, null
  br i1 %cmp46, label %if.then47, label %if.end52

if.then47:                                        ; preds = %if.end45
  %tmp40 = load i64, i64* %len, align 8
  %tmp41 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm48 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp41, i32 0, i32 7
  %tmp42 = load i8*, i8** %algorithm48, align 8
  %call49 = call i64 @strlen(i8* %tmp42) #7
  %add50 = add i64 %tmp40, %call49
  %add51 = add i64 %add50, 12
  store i64 %add51, i64* %len, align 8
  br label %if.end52

if.end52:                                         ; preds = %if.then47, %if.end45
  %tmp43 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp43, i32 0, i32 8
  %tmp44 = load i8*, i8** %cnonce, align 8
  %cmp53 = icmp ne i8* %tmp44, null
  br i1 %cmp53, label %if.then54, label %if.end59

if.then54:                                        ; preds = %if.end52
  %tmp45 = load i64, i64* %len, align 8
  %tmp46 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce55 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp46, i32 0, i32 8
  %tmp47 = load i8*, i8** %cnonce55, align 8
  %call56 = call i64 @strlen(i8* %tmp47) #7
  %add57 = add i64 %tmp45, %call56
  %add58 = add i64 %add57, 9
  store i64 %add58, i64* %len, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.then54, %if.end52
  %tmp48 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp48, i32 0, i32 9
  %tmp49 = load i8*, i8** %opaque, align 8
  %cmp60 = icmp ne i8* %tmp49, null
  br i1 %cmp60, label %if.then61, label %if.end66

if.then61:                                        ; preds = %if.end59
  %tmp50 = load i64, i64* %len, align 8
  %add62 = add i64 %tmp50, 9
  %tmp51 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque63 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp51, i32 0, i32 9
  %tmp52 = load i8*, i8** %opaque63, align 8
  %call64 = call i64 @strlen(i8* %tmp52) #7
  %add65 = add i64 %add62, %call64
  store i64 %add65, i64* %len, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.then61, %if.end59
  %tmp53 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp53, i32 0, i32 11
  %tmp54 = load i8*, i8** %nonce_count, align 8
  %cmp67 = icmp ne i8* %tmp54, null
  br i1 %cmp67, label %if.then68, label %if.end73

if.then68:                                        ; preds = %if.end66
  %tmp55 = load i64, i64* %len, align 8
  %tmp56 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count69 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp56, i32 0, i32 11
  %tmp57 = load i8*, i8** %nonce_count69, align 8
  %call70 = call i64 @strlen(i8* %tmp57) #7
  %add71 = add i64 %tmp55, %call70
  %add72 = add i64 %add71, 5
  store i64 %add72, i64* %len, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.then68, %if.end66
  %tmp58 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp58, i32 0, i32 10
  %tmp59 = load i8*, i8** %message_qop, align 8
  %cmp74 = icmp ne i8* %tmp59, null
  br i1 %cmp74, label %if.then75, label %if.end80

if.then75:                                        ; preds = %if.end73
  %tmp60 = load i64, i64* %len, align 8
  %tmp61 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop76 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp61, i32 0, i32 10
  %tmp62 = load i8*, i8** %message_qop76, align 8
  %call77 = call i64 @strlen(i8* %tmp62) #7
  %add78 = add i64 %tmp60, %call77
  %add79 = add i64 %add78, 6
  store i64 %add79, i64* %len, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then75, %if.end73
  %tmp63 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp63, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end80
  %tmp64 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp65 = load i64, i64* %len, align 8
  %call81 = call i8* %tmp64(i64 %tmp65)
  br label %cond.end

cond.false:                                       ; preds = %if.end80
  %tmp66 = load i64, i64* %len, align 8
  %call82 = call noalias i8* @malloc(i64 %tmp66) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call81, %cond.true ], [ %call82, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp67 = load i8*, i8** %tmp, align 8
  %cmp83 = icmp eq i8* %tmp67, null
  br i1 %cmp83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end85:                                         ; preds = %cond.end
  %tmp68 = load i8*, i8** %tmp, align 8
  %tmp69 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp68, i8** %tmp69, align 8
  %tmp70 = load i8*, i8** %tmp, align 8
  %tmp71 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type86 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp71, i32 0, i32 0
  %tmp72 = load i8*, i8** %auth_type86, align 8
  %call87 = call i8* @osip_str_append(i8* %tmp70, i8* %tmp72)
  store i8* %call87, i8** %tmp, align 8
  %tmp73 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username88 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp73, i32 0, i32 1
  %tmp74 = load i8*, i8** %username88, align 8
  %cmp89 = icmp ne i8* %tmp74, null
  br i1 %cmp89, label %if.then90, label %if.end94

if.then90:                                        ; preds = %if.end85
  %tmp75 = load i8*, i8** %tmp, align 8
  %call91 = call i8* @osip_strn_append(i8* %tmp75, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str11381, i32 0, i32 0), i64 10)
  store i8* %call91, i8** %tmp, align 8
  %tmp76 = load i8*, i8** %tmp, align 8
  %tmp77 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username92 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp77, i32 0, i32 1
  %tmp78 = load i8*, i8** %username92, align 8
  %call93 = call i8* @osip_str_append(i8* %tmp76, i8* %tmp78)
  store i8* %call93, i8** %tmp, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then90, %if.end85
  %tmp79 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm95 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp79, i32 0, i32 2
  %tmp80 = load i8*, i8** %realm95, align 8
  %cmp96 = icmp ne i8* %tmp80, null
  br i1 %cmp96, label %if.then97, label %if.end101

if.then97:                                        ; preds = %if.end94
  %tmp81 = load i8*, i8** %tmp, align 8
  %call98 = call i8* @osip_strn_append(i8* %tmp81, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str12382, i32 0, i32 0), i64 8)
  store i8* %call98, i8** %tmp, align 8
  %tmp82 = load i8*, i8** %tmp, align 8
  %tmp83 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm99 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp83, i32 0, i32 2
  %tmp84 = load i8*, i8** %realm99, align 8
  %call100 = call i8* @osip_str_append(i8* %tmp82, i8* %tmp84)
  store i8* %call100, i8** %tmp, align 8
  br label %if.end101

if.end101:                                        ; preds = %if.then97, %if.end94
  %tmp85 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce102 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp85, i32 0, i32 3
  %tmp86 = load i8*, i8** %nonce102, align 8
  %cmp103 = icmp ne i8* %tmp86, null
  br i1 %cmp103, label %if.then104, label %if.end108

if.then104:                                       ; preds = %if.end101
  %tmp87 = load i8*, i8** %tmp, align 8
  %call105 = call i8* @osip_strn_append(i8* %tmp87, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str13383, i32 0, i32 0), i64 8)
  store i8* %call105, i8** %tmp, align 8
  %tmp88 = load i8*, i8** %tmp, align 8
  %tmp89 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce106 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp89, i32 0, i32 3
  %tmp90 = load i8*, i8** %nonce106, align 8
  %call107 = call i8* @osip_str_append(i8* %tmp88, i8* %tmp90)
  store i8* %call107, i8** %tmp, align 8
  br label %if.end108

if.end108:                                        ; preds = %if.then104, %if.end101
  %tmp91 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri109 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp91, i32 0, i32 4
  %tmp92 = load i8*, i8** %uri109, align 8
  %cmp110 = icmp ne i8* %tmp92, null
  br i1 %cmp110, label %if.then111, label %if.end115

if.then111:                                       ; preds = %if.end108
  %tmp93 = load i8*, i8** %tmp, align 8
  %call112 = call i8* @osip_strn_append(i8* %tmp93, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str14384, i32 0, i32 0), i64 6)
  store i8* %call112, i8** %tmp, align 8
  %tmp94 = load i8*, i8** %tmp, align 8
  %tmp95 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri113 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp95, i32 0, i32 4
  %tmp96 = load i8*, i8** %uri113, align 8
  %call114 = call i8* @osip_str_append(i8* %tmp94, i8* %tmp96)
  store i8* %call114, i8** %tmp, align 8
  br label %if.end115

if.end115:                                        ; preds = %if.then111, %if.end108
  %tmp97 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response116 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp97, i32 0, i32 5
  %tmp98 = load i8*, i8** %response116, align 8
  %cmp117 = icmp ne i8* %tmp98, null
  br i1 %cmp117, label %if.then118, label %if.end122

if.then118:                                       ; preds = %if.end115
  %tmp99 = load i8*, i8** %tmp, align 8
  %call119 = call i8* @osip_strn_append(i8* %tmp99, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str15385, i32 0, i32 0), i64 11)
  store i8* %call119, i8** %tmp, align 8
  %tmp100 = load i8*, i8** %tmp, align 8
  %tmp101 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response120 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp101, i32 0, i32 5
  %tmp102 = load i8*, i8** %response120, align 8
  %call121 = call i8* @osip_str_append(i8* %tmp100, i8* %tmp102)
  store i8* %call121, i8** %tmp, align 8
  br label %if.end122

if.end122:                                        ; preds = %if.then118, %if.end115
  %tmp103 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest123 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp103, i32 0, i32 6
  %tmp104 = load i8*, i8** %digest123, align 8
  %cmp124 = icmp ne i8* %tmp104, null
  br i1 %cmp124, label %if.then125, label %if.end129

if.then125:                                       ; preds = %if.end122
  %tmp105 = load i8*, i8** %tmp, align 8
  %call126 = call i8* @osip_strn_append(i8* %tmp105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str16386, i32 0, i32 0), i64 9)
  store i8* %call126, i8** %tmp, align 8
  %tmp106 = load i8*, i8** %tmp, align 8
  %tmp107 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest127 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp107, i32 0, i32 6
  %tmp108 = load i8*, i8** %digest127, align 8
  %call128 = call i8* @osip_str_append(i8* %tmp106, i8* %tmp108)
  store i8* %call128, i8** %tmp, align 8
  br label %if.end129

if.end129:                                        ; preds = %if.then125, %if.end122
  %tmp109 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm130 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp109, i32 0, i32 7
  %tmp110 = load i8*, i8** %algorithm130, align 8
  %cmp131 = icmp ne i8* %tmp110, null
  br i1 %cmp131, label %if.then132, label %if.end136

if.then132:                                       ; preds = %if.end129
  %tmp111 = load i8*, i8** %tmp, align 8
  %call133 = call i8* @osip_strn_append(i8* %tmp111, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str17387, i32 0, i32 0), i64 12)
  store i8* %call133, i8** %tmp, align 8
  %tmp112 = load i8*, i8** %tmp, align 8
  %tmp113 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm134 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp113, i32 0, i32 7
  %tmp114 = load i8*, i8** %algorithm134, align 8
  %call135 = call i8* @osip_str_append(i8* %tmp112, i8* %tmp114)
  store i8* %call135, i8** %tmp, align 8
  br label %if.end136

if.end136:                                        ; preds = %if.then132, %if.end129
  %tmp115 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce137 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp115, i32 0, i32 8
  %tmp116 = load i8*, i8** %cnonce137, align 8
  %cmp138 = icmp ne i8* %tmp116, null
  br i1 %cmp138, label %if.then139, label %if.end143

if.then139:                                       ; preds = %if.end136
  %tmp117 = load i8*, i8** %tmp, align 8
  %call140 = call i8* @osip_strn_append(i8* %tmp117, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str18388, i32 0, i32 0), i64 9)
  store i8* %call140, i8** %tmp, align 8
  %tmp118 = load i8*, i8** %tmp, align 8
  %tmp119 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce141 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp119, i32 0, i32 8
  %tmp120 = load i8*, i8** %cnonce141, align 8
  %call142 = call i8* @osip_str_append(i8* %tmp118, i8* %tmp120)
  store i8* %call142, i8** %tmp, align 8
  br label %if.end143

if.end143:                                        ; preds = %if.then139, %if.end136
  %tmp121 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque144 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp121, i32 0, i32 9
  %tmp122 = load i8*, i8** %opaque144, align 8
  %cmp145 = icmp ne i8* %tmp122, null
  br i1 %cmp145, label %if.then146, label %if.end150

if.then146:                                       ; preds = %if.end143
  %tmp123 = load i8*, i8** %tmp, align 8
  %call147 = call i8* @osip_strn_append(i8* %tmp123, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str19389, i32 0, i32 0), i64 9)
  store i8* %call147, i8** %tmp, align 8
  %tmp124 = load i8*, i8** %tmp, align 8
  %tmp125 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque148 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp125, i32 0, i32 9
  %tmp126 = load i8*, i8** %opaque148, align 8
  %call149 = call i8* @osip_str_append(i8* %tmp124, i8* %tmp126)
  store i8* %call149, i8** %tmp, align 8
  br label %if.end150

if.end150:                                        ; preds = %if.then146, %if.end143
  %tmp127 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop151 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp127, i32 0, i32 10
  %tmp128 = load i8*, i8** %message_qop151, align 8
  %cmp152 = icmp ne i8* %tmp128, null
  br i1 %cmp152, label %if.then153, label %if.end157

if.then153:                                       ; preds = %if.end150
  %tmp129 = load i8*, i8** %tmp, align 8
  %call154 = call i8* @osip_strn_append(i8* %tmp129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str20390, i32 0, i32 0), i64 6)
  store i8* %call154, i8** %tmp, align 8
  %tmp130 = load i8*, i8** %tmp, align 8
  %tmp131 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop155 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp131, i32 0, i32 10
  %tmp132 = load i8*, i8** %message_qop155, align 8
  %call156 = call i8* @osip_str_append(i8* %tmp130, i8* %tmp132)
  store i8* %call156, i8** %tmp, align 8
  br label %if.end157

if.end157:                                        ; preds = %if.then153, %if.end150
  %tmp133 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count158 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp133, i32 0, i32 11
  %tmp134 = load i8*, i8** %nonce_count158, align 8
  %cmp159 = icmp ne i8* %tmp134, null
  br i1 %cmp159, label %if.then160, label %if.end164

if.then160:                                       ; preds = %if.end157
  %tmp135 = load i8*, i8** %tmp, align 8
  %call161 = call i8* @osip_strn_append(i8* %tmp135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str21391, i32 0, i32 0), i64 5)
  store i8* %call161, i8** %tmp, align 8
  %tmp136 = load i8*, i8** %tmp, align 8
  %tmp137 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count162 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp137, i32 0, i32 11
  %tmp138 = load i8*, i8** %nonce_count162, align 8
  %call163 = call i8* @osip_str_append(i8* %tmp136, i8* %tmp138)
  store i8* %call163, i8** %tmp, align 8
  br label %if.end164

if.end164:                                        ; preds = %if.then160, %if.end157
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end164, %if.then84, %if.then
  %tmp139 = load i32, i32* %retval
  ret i32 %tmp139
}

; Function Attrs: nounwind uwtable
define i32 @osip_authorization_clone(%struct.osip_authorization* %auth, %struct.osip_authorization** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %auth.addr = alloca %struct.osip_authorization*, align 8
  %dest.addr = alloca %struct.osip_authorization**, align 8
  %i = alloca i32, align 4
  %au = alloca %struct.osip_authorization*, align 8
  store %struct.osip_authorization* %auth, %struct.osip_authorization** %auth.addr, align 8
  store %struct.osip_authorization** %dest, %struct.osip_authorization*** %dest.addr, align 8
  %tmp = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* null, %struct.osip_authorization** %tmp, align 8
  %tmp1 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cmp = icmp eq %struct.osip_authorization* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_authorization_init(%struct.osip_authorization** %au)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp2, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %auth_type, align 8
  %cmp4 = icmp ne i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end3
  %tmp6 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %auth_type6 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %auth_type6, align 8
  %call7 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %auth_type8 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp8, i32 0, i32 0
  store i8* %call7, i8** %auth_type8, align 8
  %tmp9 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %auth_type9 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %auth_type9, align 8
  %cmp10 = icmp eq i8* %tmp10, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then5
  %tmp11 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end3
  %tmp12 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %username, align 8
  %cmp14 = icmp ne i8* %tmp13, null
  br i1 %cmp14, label %if.then15, label %if.end23

if.then15:                                        ; preds = %if.end13
  %tmp14 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %username16 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %username16, align 8
  %call17 = call i8* @osip_strdup(i8* %tmp15)
  %tmp16 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %username18 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp16, i32 0, i32 1
  store i8* %call17, i8** %username18, align 8
  %tmp17 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %username19 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp17, i32 0, i32 1
  %tmp18 = load i8*, i8** %username19, align 8
  %cmp20 = icmp eq i8* %tmp18, null
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.then15
  %tmp19 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp19)
  store i32 -4, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.then15
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end13
  %tmp20 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp20, i32 0, i32 2
  %tmp21 = load i8*, i8** %realm, align 8
  %cmp24 = icmp ne i8* %tmp21, null
  br i1 %cmp24, label %if.then25, label %if.end33

if.then25:                                        ; preds = %if.end23
  %tmp22 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm26 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp22, i32 0, i32 2
  %tmp23 = load i8*, i8** %realm26, align 8
  %call27 = call i8* @osip_strdup(i8* %tmp23)
  %tmp24 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %realm28 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp24, i32 0, i32 2
  store i8* %call27, i8** %realm28, align 8
  %tmp25 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %realm29 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp25, i32 0, i32 2
  %tmp26 = load i8*, i8** %realm29, align 8
  %cmp30 = icmp eq i8* %tmp26, null
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.then25
  %tmp27 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp27)
  store i32 -4, i32* %retval
  br label %return

if.end32:                                         ; preds = %if.then25
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end23
  %tmp28 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp28, i32 0, i32 3
  %tmp29 = load i8*, i8** %nonce, align 8
  %cmp34 = icmp ne i8* %tmp29, null
  br i1 %cmp34, label %if.then35, label %if.end43

if.then35:                                        ; preds = %if.end33
  %tmp30 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce36 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp30, i32 0, i32 3
  %tmp31 = load i8*, i8** %nonce36, align 8
  %call37 = call i8* @osip_strdup(i8* %tmp31)
  %tmp32 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %nonce38 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp32, i32 0, i32 3
  store i8* %call37, i8** %nonce38, align 8
  %tmp33 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce39 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp33, i32 0, i32 3
  %tmp34 = load i8*, i8** %nonce39, align 8
  %cmp40 = icmp eq i8* %tmp34, null
  br i1 %cmp40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.then35
  %tmp35 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp35)
  store i32 -4, i32* %retval
  br label %return

if.end42:                                         ; preds = %if.then35
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end33
  %tmp36 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp36, i32 0, i32 4
  %tmp37 = load i8*, i8** %uri, align 8
  %cmp44 = icmp ne i8* %tmp37, null
  br i1 %cmp44, label %if.then45, label %if.end53

if.then45:                                        ; preds = %if.end43
  %tmp38 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %uri46 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp38, i32 0, i32 4
  %tmp39 = load i8*, i8** %uri46, align 8
  %call47 = call i8* @osip_strdup(i8* %tmp39)
  %tmp40 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %uri48 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp40, i32 0, i32 4
  store i8* %call47, i8** %uri48, align 8
  %tmp41 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %uri49 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp41, i32 0, i32 4
  %tmp42 = load i8*, i8** %uri49, align 8
  %cmp50 = icmp eq i8* %tmp42, null
  br i1 %cmp50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.then45
  %tmp43 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp43)
  store i32 -4, i32* %retval
  br label %return

if.end52:                                         ; preds = %if.then45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end43
  %tmp44 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp44, i32 0, i32 5
  %tmp45 = load i8*, i8** %response, align 8
  %cmp54 = icmp ne i8* %tmp45, null
  br i1 %cmp54, label %if.then55, label %if.end63

if.then55:                                        ; preds = %if.end53
  %tmp46 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response56 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp46, i32 0, i32 5
  %tmp47 = load i8*, i8** %response56, align 8
  %call57 = call i8* @osip_strdup(i8* %tmp47)
  %tmp48 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %response58 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp48, i32 0, i32 5
  store i8* %call57, i8** %response58, align 8
  %tmp49 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %response59 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp49, i32 0, i32 5
  %tmp50 = load i8*, i8** %response59, align 8
  %cmp60 = icmp eq i8* %tmp50, null
  br i1 %cmp60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.then55
  %tmp51 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp51)
  store i32 -4, i32* %retval
  br label %return

if.end62:                                         ; preds = %if.then55
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end53
  %tmp52 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp52, i32 0, i32 6
  %tmp53 = load i8*, i8** %digest, align 8
  %cmp64 = icmp ne i8* %tmp53, null
  br i1 %cmp64, label %if.then65, label %if.end73

if.then65:                                        ; preds = %if.end63
  %tmp54 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %digest66 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp54, i32 0, i32 6
  %tmp55 = load i8*, i8** %digest66, align 8
  %call67 = call i8* @osip_strdup(i8* %tmp55)
  %tmp56 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %digest68 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp56, i32 0, i32 6
  store i8* %call67, i8** %digest68, align 8
  %tmp57 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %digest69 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp57, i32 0, i32 6
  %tmp58 = load i8*, i8** %digest69, align 8
  %cmp70 = icmp eq i8* %tmp58, null
  br i1 %cmp70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.then65
  %tmp59 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp59)
  store i32 -4, i32* %retval
  br label %return

if.end72:                                         ; preds = %if.then65
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end63
  %tmp60 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp60, i32 0, i32 7
  %tmp61 = load i8*, i8** %algorithm, align 8
  %cmp74 = icmp ne i8* %tmp61, null
  br i1 %cmp74, label %if.then75, label %if.end83

if.then75:                                        ; preds = %if.end73
  %tmp62 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm76 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp62, i32 0, i32 7
  %tmp63 = load i8*, i8** %algorithm76, align 8
  %call77 = call i8* @osip_strdup(i8* %tmp63)
  %tmp64 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %algorithm78 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp64, i32 0, i32 7
  store i8* %call77, i8** %algorithm78, align 8
  %tmp65 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %algorithm79 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp65, i32 0, i32 7
  %tmp66 = load i8*, i8** %algorithm79, align 8
  %cmp80 = icmp eq i8* %tmp66, null
  br i1 %cmp80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.then75
  %tmp67 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp67)
  store i32 -4, i32* %retval
  br label %return

if.end82:                                         ; preds = %if.then75
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end73
  %tmp68 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp68, i32 0, i32 8
  %tmp69 = load i8*, i8** %cnonce, align 8
  %cmp84 = icmp ne i8* %tmp69, null
  br i1 %cmp84, label %if.then85, label %if.end93

if.then85:                                        ; preds = %if.end83
  %tmp70 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %cnonce86 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp70, i32 0, i32 8
  %tmp71 = load i8*, i8** %cnonce86, align 8
  %call87 = call i8* @osip_strdup(i8* %tmp71)
  %tmp72 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %cnonce88 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp72, i32 0, i32 8
  store i8* %call87, i8** %cnonce88, align 8
  %tmp73 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %cnonce89 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp73, i32 0, i32 8
  %tmp74 = load i8*, i8** %cnonce89, align 8
  %cmp90 = icmp eq i8* %tmp74, null
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.then85
  %tmp75 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp75)
  store i32 -4, i32* %retval
  br label %return

if.end92:                                         ; preds = %if.then85
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end83
  %tmp76 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp76, i32 0, i32 9
  %tmp77 = load i8*, i8** %opaque, align 8
  %cmp94 = icmp ne i8* %tmp77, null
  br i1 %cmp94, label %if.then95, label %if.end103

if.then95:                                        ; preds = %if.end93
  %tmp78 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque96 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp78, i32 0, i32 9
  %tmp79 = load i8*, i8** %opaque96, align 8
  %call97 = call i8* @osip_strdup(i8* %tmp79)
  %tmp80 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %opaque98 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp80, i32 0, i32 9
  store i8* %call97, i8** %opaque98, align 8
  %tmp81 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %opaque99 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp81, i32 0, i32 9
  %tmp82 = load i8*, i8** %opaque99, align 8
  %cmp100 = icmp eq i8* %tmp82, null
  br i1 %cmp100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then95
  %tmp83 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp83)
  store i32 -4, i32* %retval
  br label %return

if.end102:                                        ; preds = %if.then95
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end93
  %tmp84 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp84, i32 0, i32 10
  %tmp85 = load i8*, i8** %message_qop, align 8
  %cmp104 = icmp ne i8* %tmp85, null
  br i1 %cmp104, label %if.then105, label %if.end113

if.then105:                                       ; preds = %if.end103
  %tmp86 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop106 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp86, i32 0, i32 10
  %tmp87 = load i8*, i8** %message_qop106, align 8
  %call107 = call i8* @osip_strdup(i8* %tmp87)
  %tmp88 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %message_qop108 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp88, i32 0, i32 10
  store i8* %call107, i8** %message_qop108, align 8
  %tmp89 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %message_qop109 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp89, i32 0, i32 10
  %tmp90 = load i8*, i8** %message_qop109, align 8
  %cmp110 = icmp eq i8* %tmp90, null
  br i1 %cmp110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.then105
  %tmp91 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp91)
  store i32 -4, i32* %retval
  br label %return

if.end112:                                        ; preds = %if.then105
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end103
  %tmp92 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp92, i32 0, i32 11
  %tmp93 = load i8*, i8** %nonce_count, align 8
  %cmp114 = icmp ne i8* %tmp93, null
  br i1 %cmp114, label %if.then115, label %if.end123

if.then115:                                       ; preds = %if.end113
  %tmp94 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count116 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp94, i32 0, i32 11
  %tmp95 = load i8*, i8** %nonce_count116, align 8
  %call117 = call i8* @osip_strdup(i8* %tmp95)
  %tmp96 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %nonce_count118 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp96, i32 0, i32 11
  store i8* %call117, i8** %nonce_count118, align 8
  %tmp97 = load %struct.osip_authorization*, %struct.osip_authorization** %auth.addr, align 8
  %nonce_count119 = getelementptr inbounds %struct.osip_authorization, %struct.osip_authorization* %tmp97, i32 0, i32 11
  %tmp98 = load i8*, i8** %nonce_count119, align 8
  %cmp120 = icmp eq i8* %tmp98, null
  br i1 %cmp120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.then115
  %tmp99 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  call void @osip_authorization_free(%struct.osip_authorization* %tmp99)
  store i32 -4, i32* %retval
  br label %return

if.end122:                                        ; preds = %if.then115
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.end113
  %tmp100 = load %struct.osip_authorization*, %struct.osip_authorization** %au, align 8
  %tmp101 = load %struct.osip_authorization**, %struct.osip_authorization*** %dest.addr, align 8
  store %struct.osip_authorization* %tmp100, %struct.osip_authorization** %tmp101, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end123, %if.then121, %if.then111, %if.then101, %if.then91, %if.then81, %if.then71, %if.then61, %if.then51, %if.then41, %if.then31, %if.then21, %if.then11, %if.then2, %if.then
  %tmp102 = load i32, i32* %retval
  ret i32 %tmp102
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_header(%struct.osip_message* %sip, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %h = alloca %struct.osip_header*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hname.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_header_init(%struct.osip_header** %h)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp2, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end4
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp6 = load i8*, i8** %hname.addr, align 8
  %call5 = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call5, 1
  %call6 = call i8* %tmp5(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end4
  %tmp7 = load i8*, i8** %hname.addr, align 8
  %call7 = call i64 @strlen(i8* %tmp7) #7
  %add8 = add i64 %call7, 1
  %call9 = call noalias i8* @malloc(i64 %add8) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ %call9, %cond.false ]
  %tmp8 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname10 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp8, i32 0, i32 0
  store i8* %cond, i8** %hname10, align 8
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname11 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %hname11, align 8
  %cmp12 = icmp eq i8* %tmp10, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %cond.end
  %tmp11 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end14:                                         ; preds = %cond.end
  %tmp12 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname15 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %hname15, align 8
  %tmp14 = load i8*, i8** %hname.addr, align 8
  %tmp15 = load i8*, i8** %hname.addr, align 8
  %call16 = call i64 @strlen(i8* %tmp15) #7
  %call17 = call i8* @osip_clrncpy(i8* %tmp13, i8* %tmp14, i64 %call16)
  %tmp16 = load i8*, i8** %hvalue.addr, align 8
  %cmp18 = icmp ne i8* %tmp16, null
  br i1 %cmp18, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end14
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool20 = icmp ne i8* (i64)* %tmp17, null
  br i1 %tobool20, label %cond.true21, label %cond.false25

cond.true21:                                      ; preds = %if.then19
  %tmp18 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp19 = load i8*, i8** %hvalue.addr, align 8
  %call22 = call i64 @strlen(i8* %tmp19) #7
  %add23 = add i64 %call22, 1
  %call24 = call i8* %tmp18(i64 %add23)
  br label %cond.end29

cond.false25:                                     ; preds = %if.then19
  %tmp20 = load i8*, i8** %hvalue.addr, align 8
  %call26 = call i64 @strlen(i8* %tmp20) #7
  %add27 = add i64 %call26, 1
  %call28 = call noalias i8* @malloc(i64 %add27) #8
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false25, %cond.true21
  %cond30 = phi i8* [ %call24, %cond.true21 ], [ %call28, %cond.false25 ]
  %tmp21 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue31 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp21, i32 0, i32 1
  store i8* %cond30, i8** %hvalue31, align 8
  %tmp22 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue32 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp22, i32 0, i32 1
  %tmp23 = load i8*, i8** %hvalue32, align 8
  %cmp33 = icmp eq i8* %tmp23, null
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %cond.end29
  %tmp24 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp24)
  store i32 -4, i32* %retval
  br label %return

if.end35:                                         ; preds = %cond.end29
  %tmp25 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue36 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp25, i32 0, i32 1
  %tmp26 = load i8*, i8** %hvalue36, align 8
  %tmp27 = load i8*, i8** %hvalue.addr, align 8
  %tmp28 = load i8*, i8** %hvalue.addr, align 8
  %call37 = call i64 @strlen(i8* %tmp28) #7
  %call38 = call i8* @osip_clrncpy(i8* %tmp26, i8* %tmp27, i64 %call37)
  br label %if.end40

if.else:                                          ; preds = %if.end14
  %tmp29 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue39 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp29, i32 0, i32 1
  store i8* null, i8** %hvalue39, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end35
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp30, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp31 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp31, i32 0, i32 30
  %tmp32 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %tmp33 = bitcast %struct.osip_header* %tmp32 to i8*
  %call41 = call i32 @osip_list_add(%struct.osip_list* %headers, i8* %tmp33, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then34, %if.then13, %if.then3, %if.then
  %tmp34 = load i32, i32* %retval
  ret i32 %tmp34
}

; Function Attrs: nounwind uwtable
define i32 @osip_header_init(%struct.osip_header** %header) #0 {
entry:
  %retval = alloca i32, align 4
  %header.addr = alloca %struct.osip_header**, align 8
  store %struct.osip_header** %header, %struct.osip_header*** %header.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 16)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_header*
  %tmp3 = load %struct.osip_header**, %struct.osip_header*** %header.addr, align 8
  store %struct.osip_header* %tmp2, %struct.osip_header** %tmp3, align 8
  %tmp4 = load %struct.osip_header**, %struct.osip_header*** %header.addr, align 8
  %tmp5 = load %struct.osip_header*, %struct.osip_header** %tmp4, align 8
  %cmp = icmp eq %struct.osip_header* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_header**, %struct.osip_header*** %header.addr, align 8
  %tmp7 = load %struct.osip_header*, %struct.osip_header** %tmp6, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp7, i32 0, i32 0
  store i8* null, i8** %hname, align 8
  %tmp8 = load %struct.osip_header**, %struct.osip_header*** %header.addr, align 8
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %tmp8, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp9, i32 0, i32 1
  store i8* null, i8** %hvalue, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp10 = load i32, i32* %retval
  ret i32 %tmp10
}

; Function Attrs: nounwind uwtable
define void @osip_header_free(%struct.osip_header* %header) #0 {
entry:
  %header.addr = alloca %struct.osip_header*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  %tmp = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp = icmp eq %struct.osip_header* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end25

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %hname, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname4 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %hname4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname5 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %hname5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %hvalue, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue12 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %hvalue12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue14 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %hvalue14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname17 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp17, i32 0, i32 0
  store i8* null, i8** %hname17, align 8
  %tmp18 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue18 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp18, i32 0, i32 1
  store i8* null, i8** %hvalue18, align 8
  %tmp19 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp19 = icmp ne %struct.osip_header* %tmp19, null
  br i1 %cmp19, label %if.then20, label %if.end25

if.then20:                                        ; preds = %if.end16
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool21 = icmp ne void (i8*)* %tmp20, null
  br i1 %tobool21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.then20
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp22 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %tmp23 = bitcast %struct.osip_header* %tmp22 to i8*
  call void %tmp21(i8* %tmp23)
  br label %if.end24

if.else23:                                        ; preds = %if.then20
  %tmp24 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %tmp25 = bitcast %struct.osip_header* %tmp24 to i8*
  call void @free(i8* %tmp25) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_replace_header(%struct.osip_message* %sip, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %h = alloca %struct.osip_header*, align 8
  %oldh = alloca %struct.osip_header*, align 8
  %i = alloca i32, align 4
  %oldpos = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  store i32 -1, i32* %oldpos, align 4
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hname.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %tmp3 = load i8*, i8** %hname.addr, align 8
  %call = call i32 @osip_message_header_get_byname(%struct.osip_message* %tmp2, i8* %tmp3, i32 0, %struct.osip_header** %oldh)
  store i32 %call, i32* %oldpos, align 4
  %call2 = call i32 @osip_header_init(%struct.osip_header** %h)
  store i32 %call2, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp4, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp6, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end5
  %tmp7 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp8 = load i8*, i8** %hname.addr, align 8
  %call6 = call i64 @strlen(i8* %tmp8) #7
  %add = add i64 %call6, 1
  %call7 = call i8* %tmp7(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  %tmp9 = load i8*, i8** %hname.addr, align 8
  %call8 = call i64 @strlen(i8* %tmp9) #7
  %add9 = add i64 %call8, 1
  %call10 = call noalias i8* @malloc(i64 %add9) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call7, %cond.true ], [ %call10, %cond.false ]
  %tmp10 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname11 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp10, i32 0, i32 0
  store i8* %cond, i8** %hname11, align 8
  %tmp11 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname12 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp11, i32 0, i32 0
  %tmp12 = load i8*, i8** %hname12, align 8
  %cmp13 = icmp eq i8* %tmp12, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %cond.end
  %tmp13 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp13)
  store i32 -4, i32* %retval
  br label %return

if.end15:                                         ; preds = %cond.end
  %tmp14 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname16 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp14, i32 0, i32 0
  %tmp15 = load i8*, i8** %hname16, align 8
  %tmp16 = load i8*, i8** %hname.addr, align 8
  %tmp17 = load i8*, i8** %hname.addr, align 8
  %call17 = call i64 @strlen(i8* %tmp17) #7
  %call18 = call i8* @osip_clrncpy(i8* %tmp15, i8* %tmp16, i64 %call17)
  %tmp18 = load i8*, i8** %hvalue.addr, align 8
  %cmp19 = icmp ne i8* %tmp18, null
  br i1 %cmp19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end15
  %tmp19 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool21 = icmp ne i8* (i64)* %tmp19, null
  br i1 %tobool21, label %cond.true22, label %cond.false26

cond.true22:                                      ; preds = %if.then20
  %tmp20 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp21 = load i8*, i8** %hvalue.addr, align 8
  %call23 = call i64 @strlen(i8* %tmp21) #7
  %add24 = add i64 %call23, 1
  %call25 = call i8* %tmp20(i64 %add24)
  br label %cond.end30

cond.false26:                                     ; preds = %if.then20
  %tmp22 = load i8*, i8** %hvalue.addr, align 8
  %call27 = call i64 @strlen(i8* %tmp22) #7
  %add28 = add i64 %call27, 1
  %call29 = call noalias i8* @malloc(i64 %add28) #8
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false26, %cond.true22
  %cond31 = phi i8* [ %call25, %cond.true22 ], [ %call29, %cond.false26 ]
  %tmp23 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue32 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp23, i32 0, i32 1
  store i8* %cond31, i8** %hvalue32, align 8
  %tmp24 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue33 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp24, i32 0, i32 1
  %tmp25 = load i8*, i8** %hvalue33, align 8
  %cmp34 = icmp eq i8* %tmp25, null
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %cond.end30
  %tmp26 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp26)
  store i32 -4, i32* %retval
  br label %return

if.end36:                                         ; preds = %cond.end30
  %tmp27 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue37 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp27, i32 0, i32 1
  %tmp28 = load i8*, i8** %hvalue37, align 8
  %tmp29 = load i8*, i8** %hvalue.addr, align 8
  %tmp30 = load i8*, i8** %hvalue.addr, align 8
  %call38 = call i64 @strlen(i8* %tmp30) #7
  %call39 = call i8* @osip_clrncpy(i8* %tmp28, i8* %tmp29, i64 %call38)
  br label %if.end41

if.else:                                          ; preds = %if.end15
  %tmp31 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue40 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp31, i32 0, i32 1
  store i8* null, i8** %hvalue40, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.end36
  %tmp32 = load i32, i32* %oldpos, align 4
  %cmp42 = icmp ne i32 %tmp32, -1
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end41
  %tmp33 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp33, i32 0, i32 30
  %tmp34 = load i32, i32* %oldpos, align 4
  %call44 = call i32 @osip_list_remove(%struct.osip_list* %headers, i32 %tmp34)
  %tmp35 = load %struct.osip_header*, %struct.osip_header** %oldh, align 8
  call void @osip_header_free(%struct.osip_header* %tmp35)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41
  %tmp36 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp36, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp37 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers46 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp37, i32 0, i32 30
  %tmp38 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %tmp39 = bitcast %struct.osip_header* %tmp38 to i8*
  %call47 = call i32 @osip_list_add(%struct.osip_list* %headers46, i8* %tmp39, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end45, %if.then35, %if.then14, %if.then4, %if.then
  %tmp40 = load i32, i32* %retval
  ret i32 %tmp40
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_header_get_byname(%struct.osip_message* %sip, i8* %hname, i32 %pos, %struct.osip_header** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_header**, align 8
  %i = alloca i32, align 4
  %tmp = alloca %struct.osip_header*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_header** %dest, %struct.osip_header*** %dest.addr, align 8
  %tmp1 = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* null, %struct.osip_header** %tmp1, align 8
  %tmp2 = load i32, i32* %pos.addr, align 4
  store i32 %tmp2, i32* %i, align 4
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 30
  %call = call i32 @osip_list_size(%struct.osip_list* %headers)
  %tmp4 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end10, %if.end
  %tmp5 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp5, i32 0, i32 30
  %call2 = call i32 @osip_list_size(%struct.osip_list* %headers1)
  %tmp6 = load i32, i32* %i, align 4
  %cmp3 = icmp sgt i32 %call2, %tmp6
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers4 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 30
  %tmp8 = load i32, i32* %i, align 4
  %call5 = call i8* @osip_list_get(%struct.osip_list* %headers4, i32 %tmp8)
  %tmp9 = bitcast i8* %call5 to %struct.osip_header*
  store %struct.osip_header* %tmp9, %struct.osip_header** %tmp, align 8
  %tmp10 = load %struct.osip_header*, %struct.osip_header** %tmp, align 8
  %hname6 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %hname6, align 8
  %tmp12 = load i8*, i8** %hname.addr, align 8
  %call7 = call i32 @osip_strcasecmp(i8* %tmp11, i8* %tmp12)
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %while.body
  %tmp13 = load %struct.osip_header*, %struct.osip_header** %tmp, align 8
  %tmp14 = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* %tmp13, %struct.osip_header** %tmp14, align 8
  %tmp15 = load i32, i32* %i, align 4
  store i32 %tmp15, i32* %retval
  br label %return

if.end10:                                         ; preds = %while.body
  %tmp16 = load i32, i32* %i, align 4
  %inc = add nsw i32 %tmp16, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then9, %if.then
  %tmp17 = load i32, i32* %retval
  ret i32 %tmp17
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_topheader(%struct.osip_message* %sip, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %h = alloca %struct.osip_header*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hname.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_header_init(%struct.osip_header** %h)
  store i32 %call, i32* %i, align 4
  %tmp2 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp2, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp3 = load i32, i32* %i, align 4
  store i32 %tmp3, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end4
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp6 = load i8*, i8** %hname.addr, align 8
  %call5 = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call5, 1
  %call6 = call i8* %tmp5(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end4
  %tmp7 = load i8*, i8** %hname.addr, align 8
  %call7 = call i64 @strlen(i8* %tmp7) #7
  %add8 = add i64 %call7, 1
  %call9 = call noalias i8* @malloc(i64 %add8) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ %call9, %cond.false ]
  %tmp8 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname10 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp8, i32 0, i32 0
  store i8* %cond, i8** %hname10, align 8
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname11 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %hname11, align 8
  %cmp12 = icmp eq i8* %tmp10, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %cond.end
  %tmp11 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end14:                                         ; preds = %cond.end
  %tmp12 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname15 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %hname15, align 8
  %tmp14 = load i8*, i8** %hname.addr, align 8
  %tmp15 = load i8*, i8** %hname.addr, align 8
  %call16 = call i64 @strlen(i8* %tmp15) #7
  %call17 = call i8* @osip_clrncpy(i8* %tmp13, i8* %tmp14, i64 %call16)
  %tmp16 = load i8*, i8** %hvalue.addr, align 8
  %cmp18 = icmp ne i8* %tmp16, null
  br i1 %cmp18, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end14
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool20 = icmp ne i8* (i64)* %tmp17, null
  br i1 %tobool20, label %cond.true21, label %cond.false25

cond.true21:                                      ; preds = %if.then19
  %tmp18 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp19 = load i8*, i8** %hvalue.addr, align 8
  %call22 = call i64 @strlen(i8* %tmp19) #7
  %add23 = add i64 %call22, 1
  %call24 = call i8* %tmp18(i64 %add23)
  br label %cond.end29

cond.false25:                                     ; preds = %if.then19
  %tmp20 = load i8*, i8** %hvalue.addr, align 8
  %call26 = call i64 @strlen(i8* %tmp20) #7
  %add27 = add i64 %call26, 1
  %call28 = call noalias i8* @malloc(i64 %add27) #8
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false25, %cond.true21
  %cond30 = phi i8* [ %call24, %cond.true21 ], [ %call28, %cond.false25 ]
  %tmp21 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue31 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp21, i32 0, i32 1
  store i8* %cond30, i8** %hvalue31, align 8
  %tmp22 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue32 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp22, i32 0, i32 1
  %tmp23 = load i8*, i8** %hvalue32, align 8
  %cmp33 = icmp eq i8* %tmp23, null
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %cond.end29
  %tmp24 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp24)
  store i32 -4, i32* %retval
  br label %return

if.end35:                                         ; preds = %cond.end29
  %tmp25 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue36 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp25, i32 0, i32 1
  %tmp26 = load i8*, i8** %hvalue36, align 8
  %tmp27 = load i8*, i8** %hvalue.addr, align 8
  %tmp28 = load i8*, i8** %hvalue.addr, align 8
  %call37 = call i64 @strlen(i8* %tmp28) #7
  %call38 = call i8* @osip_clrncpy(i8* %tmp26, i8* %tmp27, i64 %call37)
  br label %if.end40

if.else:                                          ; preds = %if.end14
  %tmp29 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue39 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp29, i32 0, i32 1
  store i8* null, i8** %hvalue39, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end35
  %tmp30 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp30, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp31 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp31, i32 0, i32 30
  %tmp32 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %tmp33 = bitcast %struct.osip_header* %tmp32 to i8*
  %call41 = call i32 @osip_list_add(%struct.osip_list* %headers, i8* %tmp33, i32 0)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then34, %if.then13, %if.then3, %if.then
  %tmp34 = load i32, i32* %retval
  ret i32 %tmp34
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_header(%struct.osip_message* %sip, i32 %pos, %struct.osip_header** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_header**, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_header** %dest, %struct.osip_header*** %dest.addr, align 8
  %tmp = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* null, %struct.osip_header** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 30
  %call = call i32 @osip_list_size(%struct.osip_list* %headers)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %headers1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 30
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %headers1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_header*
  %tmp6 = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* %tmp5, %struct.osip_header** %tmp6, align 8
  %tmp7 = load i32, i32* %pos.addr, align 4
  store i32 %tmp7, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp8 = load i32, i32* %retval
  ret i32 %tmp8
}

; Function Attrs: nounwind uwtable
define i32 @osip_header_to_str(%struct.osip_header* %header, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %header.addr = alloca %struct.osip_header*, align 8
  %dest.addr = alloca i8**, align 8
  %len = alloca i64, align 8
  %hlen = alloca i64, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp = icmp eq %struct.osip_header* %tmp1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %hname, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i64 0, i64* %len, align 8
  %tmp4 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname2 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp4, i32 0, i32 0
  %tmp5 = load i8*, i8** %hname2, align 8
  %call = call i64 @strlen(i8* %tmp5) #7
  store i64 %call, i64* %hlen, align 8
  %tmp6 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp6, i32 0, i32 1
  %tmp7 = load i8*, i8** %hvalue, align 8
  %cmp3 = icmp ne i8* %tmp7, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %tmp8 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue5 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp8, i32 0, i32 1
  %tmp9 = load i8*, i8** %hvalue5, align 8
  %call6 = call i64 @strlen(i8* %tmp9) #7
  store i64 %call6, i64* %len, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end7
  %tmp11 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp12 = load i64, i64* %hlen, align 8
  %tmp13 = load i64, i64* %len, align 8
  %add = add i64 %tmp12, %tmp13
  %add8 = add i64 %add, 3
  %call9 = call i8* %tmp11(i64 %add8)
  br label %cond.end

cond.false:                                       ; preds = %if.end7
  %tmp14 = load i64, i64* %hlen, align 8
  %tmp15 = load i64, i64* %len, align 8
  %add10 = add i64 %tmp14, %tmp15
  %add11 = add i64 %add10, 3
  %call12 = call noalias i8* @malloc(i64 %add11) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call9, %cond.true ], [ %call12, %cond.false ]
  %tmp16 = load i8**, i8*** %dest.addr, align 8
  store i8* %cond, i8** %tmp16, align 8
  %tmp17 = load i8**, i8*** %dest.addr, align 8
  %tmp18 = load i8*, i8** %tmp17, align 8
  %cmp13 = icmp eq i8* %tmp18, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end15:                                         ; preds = %cond.end
  %tmp19 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue16 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp19, i32 0, i32 1
  %tmp20 = load i8*, i8** %hvalue16, align 8
  %cmp17 = icmp ne i8* %tmp20, null
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end15
  %tmp21 = load i8**, i8*** %dest.addr, align 8
  %tmp22 = load i8*, i8** %tmp21, align 8
  %tmp23 = load i64, i64* %hlen, align 8
  %tmp24 = load i64, i64* %len, align 8
  %add19 = add i64 %tmp23, %tmp24
  %add20 = add i64 %add19, 3
  %tmp25 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname21 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp25, i32 0, i32 0
  %tmp26 = load i8*, i8** %hname21, align 8
  %tmp27 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue22 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp27, i32 0, i32 1
  %tmp28 = load i8*, i8** %hvalue22, align 8
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp22, i64 %add20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str404, i32 0, i32 0), i8* %tmp26, i8* %tmp28) #8
  br label %if.end28

if.else:                                          ; preds = %if.end15
  %tmp29 = load i8**, i8*** %dest.addr, align 8
  %tmp30 = load i8*, i8** %tmp29, align 8
  %tmp31 = load i64, i64* %hlen, align 8
  %tmp32 = load i64, i64* %len, align 8
  %add24 = add i64 %tmp31, %tmp32
  %add25 = add i64 %add24, 3
  %tmp33 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname26 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp33, i32 0, i32 0
  %tmp34 = load i8*, i8** %hname26, align 8
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp30, i64 %add25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str1405, i32 0, i32 0), i8* %tmp34) #8
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then18
  %tmp35 = load i8**, i8*** %dest.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %tmp35, i64 0
  %tmp36 = load i8*, i8** %arrayidx, align 8
  %tmp37 = load i8, i8* %tmp36, align 1
  %conv = sext i8 %tmp37 to i32
  %cmp29 = icmp sgt i32 %conv, 97
  br i1 %cmp29, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %if.end28
  %tmp38 = load i8**, i8*** %dest.addr, align 8
  %arrayidx31 = getelementptr inbounds i8*, i8** %tmp38, i64 0
  %tmp39 = load i8*, i8** %arrayidx31, align 8
  %tmp40 = load i8, i8* %tmp39, align 1
  %conv32 = sext i8 %tmp40 to i32
  %cmp33 = icmp slt i32 %conv32, 122
  br i1 %cmp33, label %if.then35, label %if.end40

if.then35:                                        ; preds = %land.lhs.true
  %tmp41 = load i8**, i8*** %dest.addr, align 8
  %arrayidx36 = getelementptr inbounds i8*, i8** %tmp41, i64 0
  %tmp42 = load i8*, i8** %arrayidx36, align 8
  %tmp43 = load i8, i8* %tmp42, align 1
  %conv37 = sext i8 %tmp43 to i32
  %sub = sub nsw i32 %conv37, 32
  %conv38 = trunc i32 %sub to i8
  %tmp44 = load i8**, i8*** %dest.addr, align 8
  %arrayidx39 = getelementptr inbounds i8*, i8** %tmp44, i64 0
  %tmp45 = load i8*, i8** %arrayidx39, align 8
  store i8 %conv38, i8* %tmp45, align 1
  br label %if.end40

if.end40:                                         ; preds = %if.then35, %land.lhs.true, %if.end28
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then14, %if.then
  %tmp46 = load i32, i32* %retval
  ret i32 %tmp46
}

; Function Attrs: nounwind uwtable
define i8* @osip_header_get_name(%struct.osip_header* %header) #0 {
entry:
  %retval = alloca i8*, align 8
  %header.addr = alloca %struct.osip_header*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  %tmp = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp = icmp eq %struct.osip_header* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %hname, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_header_set_name(%struct.osip_header* %header, i8* %name) #0 {
entry:
  %header.addr = alloca %struct.osip_header*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  %tmp = load i8*, i8** %name.addr, align 8
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %hname, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_header_get_value(%struct.osip_header* %header) #0 {
entry:
  %retval = alloca i8*, align 8
  %header.addr = alloca %struct.osip_header*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  %tmp = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp = icmp eq %struct.osip_header* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp1, i32 0, i32 1
  %tmp2 = load i8*, i8** %hvalue, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @osip_header_set_value(%struct.osip_header* %header, i8* %value) #0 {
entry:
  %header.addr = alloca %struct.osip_header*, align 8
  %value.addr = alloca i8*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  store i8* %value, i8** %value.addr, align 8
  %tmp = load i8*, i8** %value.addr, align 8
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %hvalue, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_header_clone(%struct.osip_header* %header, %struct.osip_header** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %header.addr = alloca %struct.osip_header*, align 8
  %dest.addr = alloca %struct.osip_header**, align 8
  %i = alloca i32, align 4
  %he = alloca %struct.osip_header*, align 8
  store %struct.osip_header* %header, %struct.osip_header** %header.addr, align 8
  store %struct.osip_header** %dest, %struct.osip_header*** %dest.addr, align 8
  %tmp = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* null, %struct.osip_header** %tmp, align 8
  %tmp1 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %cmp = icmp eq %struct.osip_header* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %hname, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_header_init(%struct.osip_header** %he)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hname7 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %hname7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  %hname9 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %hname9, align 8
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  %hname10 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %hname10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end6
  %tmp11 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  call void @osip_header_free(%struct.osip_header* %tmp11)
  store i32 -4, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end6
  %tmp12 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %hvalue, align 8
  %cmp14 = icmp ne i8* %tmp13, null
  br i1 %cmp14, label %if.then15, label %if.end23

if.then15:                                        ; preds = %if.end13
  %tmp14 = load %struct.osip_header*, %struct.osip_header** %header.addr, align 8
  %hvalue16 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %hvalue16, align 8
  %call17 = call i8* @osip_strdup(i8* %tmp15)
  %tmp16 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  %hvalue18 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp16, i32 0, i32 1
  store i8* %call17, i8** %hvalue18, align 8
  %tmp17 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  %hvalue19 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp17, i32 0, i32 1
  %tmp18 = load i8*, i8** %hvalue19, align 8
  %cmp20 = icmp eq i8* %tmp18, null
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.then15
  %tmp19 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  call void @osip_header_free(%struct.osip_header* %tmp19)
  store i32 -4, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.then15
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end13
  %tmp20 = load %struct.osip_header*, %struct.osip_header** %he, align 8
  %tmp21 = load %struct.osip_header**, %struct.osip_header*** %dest.addr, align 8
  store %struct.osip_header* %tmp20, %struct.osip_header** %tmp21, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end23, %if.then21, %if.then12, %if.then5, %if.then2, %if.then
  %tmp22 = load i32, i32* %retval
  ret i32 %tmp22
}

; Function Attrs: nounwind uwtable
define i32 @osip_www_authenticate_init(%struct.osip_www_authenticate** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.osip_www_authenticate**, align 8
  store %struct.osip_www_authenticate** %dest, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 72)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 72) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_www_authenticate*
  %tmp3 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* %tmp2, %struct.osip_www_authenticate** %tmp3, align 8
  %tmp4 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp5 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %tmp4, align 8
  %cmp = icmp eq %struct.osip_www_authenticate* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp7 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %tmp6, align 8
  %tmp8 = bitcast %struct.osip_www_authenticate* %tmp7 to i8*
  call void @llvm.memset.p0i8.i64(i8* %tmp8, i8 0, i64 72, i32 8, i1 false)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_www_authenticate(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %www_authenticate = alloca %struct.osip_www_authenticate*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp3 = icmp eq %struct.osip_message* %tmp3, null
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call = call i32 @osip_www_authenticate_init(%struct.osip_www_authenticate** %www_authenticate)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp4, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end6
  %tmp6 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call11 = call i32 @osip_www_authenticate_parse(%struct.osip_www_authenticate* %tmp6, i8* %tmp7)
  store i32 %call11, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp12 = icmp ne i32 %tmp8, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end10
  %tmp9 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp9)
  %tmp10 = load i32, i32* %i, align 4
  store i32 %tmp10, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.end10
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp12 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp12, i32 0, i32 29
  %tmp13 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate, align 8
  %tmp14 = bitcast %struct.osip_www_authenticate* %tmp13 to i8*
  %call16 = call i32 @osip_list_add(%struct.osip_list* %www_authenticates, i8* %tmp14, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then14, %if.then9, %if.then5, %if.then
  %tmp15 = load i32, i32* %retval
  ret i32 %tmp15
}

; Function Attrs: nounwind uwtable
define i32 @osip_www_authenticate_parse(%struct.osip_www_authenticate* %wwwa, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %wwwa.addr = alloca %struct.osip_www_authenticate*, align 8
  %hvalue.addr = alloca i8*, align 8
  %space = alloca i8*, align 8
  %next = alloca i8*, align 8
  %i = alloca i32, align 4
  %parse_ok = alloca i32, align 4
  %quote1 = alloca i8*, align 8
  %quote2 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_www_authenticate* %wwwa, %struct.osip_www_authenticate** %wwwa.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  store i8* null, i8** %next, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp1, i32 32) #7
  store i8* %call, i8** %space, align 8
  %tmp2 = load i8*, i8** %space, align 8
  %cmp = icmp eq i8* %tmp2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load i8*, i8** %space, align 8
  %tmp4 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp1 = icmp slt i64 %add, 2
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end3
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp7 = load i8*, i8** %space, align 8
  %tmp8 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast4 = ptrtoint i8* %tmp7 to i64
  %sub.ptr.rhs.cast5 = ptrtoint i8* %tmp8 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %add7 = add nsw i64 %sub.ptr.sub6, 1
  %call8 = call i8* %tmp6(i64 %add7)
  br label %cond.end

cond.false:                                       ; preds = %if.end3
  %tmp9 = load i8*, i8** %space, align 8
  %tmp10 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast9 = ptrtoint i8* %tmp9 to i64
  %sub.ptr.rhs.cast10 = ptrtoint i8* %tmp10 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10
  %add12 = add nsw i64 %sub.ptr.sub11, 1
  %call13 = call noalias i8* @malloc(i64 %add12) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call8, %cond.true ], [ %call13, %cond.false ]
  %tmp11 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp11, i32 0, i32 0
  store i8* %cond, i8** %auth_type, align 8
  %tmp12 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type14 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %auth_type14, align 8
  %cmp15 = icmp eq i8* %tmp13, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end17:                                         ; preds = %cond.end
  %tmp14 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type18 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp14, i32 0, i32 0
  %tmp15 = load i8*, i8** %auth_type18, align 8
  %tmp16 = load i8*, i8** %hvalue.addr, align 8
  %tmp17 = load i8*, i8** %space, align 8
  %tmp18 = load i8*, i8** %hvalue.addr, align 8
  %sub.ptr.lhs.cast19 = ptrtoint i8* %tmp17 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %tmp18 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %call22 = call i8* @osip_strncpy(i8* %tmp15, i8* %tmp16, i64 %sub.ptr.sub21)
  br label %for.cond

for.cond:                                         ; preds = %if.end134, %if.end17
  store i32 0, i32* %parse_ok, align 4
  %tmp19 = load i8*, i8** %space, align 8
  %tmp20 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp20, i32 0, i32 1
  %call23 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str414, i32 0, i32 0), i8* %tmp19, i8** %realm, i8** %next)
  store i32 %call23, i32* %i, align 4
  %tmp21 = load i32, i32* %i, align 4
  %cmp24 = icmp ne i32 %tmp21, 0
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %for.cond
  %tmp22 = load i32, i32* %i, align 4
  store i32 %tmp22, i32* %retval
  br label %return

if.end26:                                         ; preds = %for.cond
  %tmp23 = load i8*, i8** %next, align 8
  %cmp27 = icmp eq i8* %tmp23, null
  br i1 %cmp27, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end26
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end26
  %tmp24 = load i8*, i8** %next, align 8
  %tmp25 = load i8*, i8** %space, align 8
  %cmp29 = icmp ne i8* %tmp24, %tmp25
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.else
  %tmp26 = load i8*, i8** %next, align 8
  store i8* %tmp26, i8** %space, align 8
  %tmp27 = load i32, i32* %parse_ok, align 4
  %inc = add nsw i32 %tmp27, 1
  store i32 %inc, i32* %parse_ok, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31
  %tmp28 = load i8*, i8** %space, align 8
  %tmp29 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp29, i32 0, i32 2
  %call33 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str1415, i32 0, i32 0), i8* %tmp28, i8** %domain, i8** %next)
  store i32 %call33, i32* %i, align 4
  %tmp30 = load i32, i32* %i, align 4
  %cmp34 = icmp ne i32 %tmp30, 0
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end32
  %tmp31 = load i32, i32* %i, align 4
  store i32 %tmp31, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.end32
  %tmp32 = load i8*, i8** %next, align 8
  %cmp37 = icmp eq i8* %tmp32, null
  br i1 %cmp37, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.end36
  store i32 0, i32* %retval
  br label %return

if.else39:                                        ; preds = %if.end36
  %tmp33 = load i8*, i8** %next, align 8
  %tmp34 = load i8*, i8** %space, align 8
  %cmp40 = icmp ne i8* %tmp33, %tmp34
  br i1 %cmp40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.else39
  %tmp35 = load i8*, i8** %next, align 8
  store i8* %tmp35, i8** %space, align 8
  %tmp36 = load i32, i32* %parse_ok, align 4
  %inc42 = add nsw i32 %tmp36, 1
  store i32 %inc42, i32* %parse_ok, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.else39
  br label %if.end44

if.end44:                                         ; preds = %if.end43
  %tmp37 = load i8*, i8** %space, align 8
  %tmp38 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp38, i32 0, i32 3
  %call45 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str2416, i32 0, i32 0), i8* %tmp37, i8** %nonce, i8** %next)
  store i32 %call45, i32* %i, align 4
  %tmp39 = load i32, i32* %i, align 4
  %cmp46 = icmp ne i32 %tmp39, 0
  br i1 %cmp46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end44
  %tmp40 = load i32, i32* %i, align 4
  store i32 %tmp40, i32* %retval
  br label %return

if.end48:                                         ; preds = %if.end44
  %tmp41 = load i8*, i8** %next, align 8
  %cmp49 = icmp eq i8* %tmp41, null
  br i1 %cmp49, label %if.then50, label %if.else51

if.then50:                                        ; preds = %if.end48
  store i32 0, i32* %retval
  br label %return

if.else51:                                        ; preds = %if.end48
  %tmp42 = load i8*, i8** %next, align 8
  %tmp43 = load i8*, i8** %space, align 8
  %cmp52 = icmp ne i8* %tmp42, %tmp43
  br i1 %cmp52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.else51
  %tmp44 = load i8*, i8** %next, align 8
  store i8* %tmp44, i8** %space, align 8
  %tmp45 = load i32, i32* %parse_ok, align 4
  %inc54 = add nsw i32 %tmp45, 1
  store i32 %inc54, i32* %parse_ok, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.else51
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  %tmp46 = load i8*, i8** %space, align 8
  %tmp47 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp47, i32 0, i32 4
  %call57 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str3417, i32 0, i32 0), i8* %tmp46, i8** %opaque, i8** %next)
  store i32 %call57, i32* %i, align 4
  %tmp48 = load i32, i32* %i, align 4
  %cmp58 = icmp ne i32 %tmp48, 0
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end56
  %tmp49 = load i32, i32* %i, align 4
  store i32 %tmp49, i32* %retval
  br label %return

if.end60:                                         ; preds = %if.end56
  %tmp50 = load i8*, i8** %next, align 8
  %cmp61 = icmp eq i8* %tmp50, null
  br i1 %cmp61, label %if.then62, label %if.else63

if.then62:                                        ; preds = %if.end60
  store i32 0, i32* %retval
  br label %return

if.else63:                                        ; preds = %if.end60
  %tmp51 = load i8*, i8** %next, align 8
  %tmp52 = load i8*, i8** %space, align 8
  %cmp64 = icmp ne i8* %tmp51, %tmp52
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.else63
  %tmp53 = load i8*, i8** %next, align 8
  store i8* %tmp53, i8** %space, align 8
  %tmp54 = load i32, i32* %parse_ok, align 4
  %inc66 = add nsw i32 %tmp54, 1
  store i32 %inc66, i32* %parse_ok, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.else63
  br label %if.end68

if.end68:                                         ; preds = %if.end67
  %tmp55 = load i8*, i8** %space, align 8
  %tmp56 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp56, i32 0, i32 5
  %call69 = call i32 @__osip_token_set(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str4418, i32 0, i32 0), i8* %tmp55, i8** %stale, i8** %next)
  store i32 %call69, i32* %i, align 4
  %tmp57 = load i32, i32* %i, align 4
  %cmp70 = icmp ne i32 %tmp57, 0
  br i1 %cmp70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end68
  %tmp58 = load i32, i32* %i, align 4
  store i32 %tmp58, i32* %retval
  br label %return

if.end72:                                         ; preds = %if.end68
  %tmp59 = load i8*, i8** %next, align 8
  %cmp73 = icmp eq i8* %tmp59, null
  br i1 %cmp73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.end72
  store i32 0, i32* %retval
  br label %return

if.else75:                                        ; preds = %if.end72
  %tmp60 = load i8*, i8** %next, align 8
  %tmp61 = load i8*, i8** %space, align 8
  %cmp76 = icmp ne i8* %tmp60, %tmp61
  br i1 %cmp76, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.else75
  %tmp62 = load i8*, i8** %next, align 8
  store i8* %tmp62, i8** %space, align 8
  %tmp63 = load i32, i32* %parse_ok, align 4
  %inc78 = add nsw i32 %tmp63, 1
  store i32 %inc78, i32* %parse_ok, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.else75
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  %tmp64 = load i8*, i8** %space, align 8
  %tmp65 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp65, i32 0, i32 6
  %call81 = call i32 @__osip_token_set(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str5419, i32 0, i32 0), i8* %tmp64, i8** %algorithm, i8** %next)
  store i32 %call81, i32* %i, align 4
  %tmp66 = load i32, i32* %i, align 4
  %cmp82 = icmp ne i32 %tmp66, 0
  br i1 %cmp82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end80
  %tmp67 = load i32, i32* %i, align 4
  store i32 %tmp67, i32* %retval
  br label %return

if.end84:                                         ; preds = %if.end80
  %tmp68 = load i8*, i8** %next, align 8
  %cmp85 = icmp eq i8* %tmp68, null
  br i1 %cmp85, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.end84
  store i32 0, i32* %retval
  br label %return

if.else87:                                        ; preds = %if.end84
  %tmp69 = load i8*, i8** %next, align 8
  %tmp70 = load i8*, i8** %space, align 8
  %cmp88 = icmp ne i8* %tmp69, %tmp70
  br i1 %cmp88, label %if.then89, label %if.end91

if.then89:                                        ; preds = %if.else87
  %tmp71 = load i8*, i8** %next, align 8
  store i8* %tmp71, i8** %space, align 8
  %tmp72 = load i32, i32* %parse_ok, align 4
  %inc90 = add nsw i32 %tmp72, 1
  store i32 %inc90, i32* %parse_ok, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %if.else87
  br label %if.end92

if.end92:                                         ; preds = %if.end91
  %tmp73 = load i8*, i8** %space, align 8
  %tmp74 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp74, i32 0, i32 7
  %call93 = call i32 @__osip_quoted_string_set(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str6420, i32 0, i32 0), i8* %tmp73, i8** %qop_options, i8** %next)
  store i32 %call93, i32* %i, align 4
  %tmp75 = load i32, i32* %i, align 4
  %cmp94 = icmp ne i32 %tmp75, 0
  br i1 %cmp94, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end92
  %tmp76 = load i32, i32* %i, align 4
  store i32 %tmp76, i32* %retval
  br label %return

if.end96:                                         ; preds = %if.end92
  %tmp77 = load i8*, i8** %next, align 8
  %cmp97 = icmp eq i8* %tmp77, null
  br i1 %cmp97, label %if.then98, label %if.else99

if.then98:                                        ; preds = %if.end96
  store i32 0, i32* %retval
  br label %return

if.else99:                                        ; preds = %if.end96
  %tmp78 = load i8*, i8** %next, align 8
  %tmp79 = load i8*, i8** %space, align 8
  %cmp100 = icmp ne i8* %tmp78, %tmp79
  br i1 %cmp100, label %if.then101, label %if.end103

if.then101:                                       ; preds = %if.else99
  %tmp80 = load i8*, i8** %next, align 8
  store i8* %tmp80, i8** %space, align 8
  %tmp81 = load i32, i32* %parse_ok, align 4
  %inc102 = add nsw i32 %tmp81, 1
  store i32 %inc102, i32* %parse_ok, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %if.else99
  br label %if.end104

if.end104:                                        ; preds = %if.end103
  %tmp82 = load i32, i32* %parse_ok, align 4
  %cmp105 = icmp eq i32 0, %tmp82
  br i1 %cmp105, label %if.then106, label %if.end134

if.then106:                                       ; preds = %if.end104
  %tmp83 = load i8*, i8** %space, align 8
  %call107 = call i64 @strlen(i8* %tmp83) #7
  %cmp108 = icmp ult i64 %call107, 1
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.then106
  store i32 0, i32* %retval
  br label %return

if.end110:                                        ; preds = %if.then106
  %tmp84 = load i8*, i8** %space, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp84, i64 1
  %call111 = call i8* @strchr(i8* %add.ptr, i32 44) #7
  store i8* %call111, i8** %tmp, align 8
  %tmp85 = load i8*, i8** %tmp, align 8
  %cmp112 = icmp eq i8* %tmp85, null
  br i1 %cmp112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end110
  store i32 0, i32* %retval
  br label %return

if.end114:                                        ; preds = %if.end110
  %tmp86 = load i8*, i8** %space, align 8
  %call115 = call i8* @__osip_quote_find(i8* %tmp86)
  store i8* %call115, i8** %quote1, align 8
  %tmp87 = load i8*, i8** %quote1, align 8
  %cmp116 = icmp ne i8* %tmp87, null
  br i1 %cmp116, label %land.lhs.true, label %if.else132

land.lhs.true:                                    ; preds = %if.end114
  %tmp88 = load i8*, i8** %quote1, align 8
  %tmp89 = load i8*, i8** %tmp, align 8
  %cmp117 = icmp ult i8* %tmp88, %tmp89
  br i1 %cmp117, label %if.then118, label %if.else132

if.then118:                                       ; preds = %land.lhs.true
  %tmp90 = load i8*, i8** %quote1, align 8
  %add.ptr119 = getelementptr inbounds i8, i8* %tmp90, i64 1
  %call120 = call i8* @__osip_quote_find(i8* %add.ptr119)
  store i8* %call120, i8** %quote2, align 8
  %tmp91 = load i8*, i8** %quote2, align 8
  %cmp121 = icmp eq i8* %tmp91, null
  br i1 %cmp121, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.then118
  store i32 -5, i32* %retval
  br label %return

if.end123:                                        ; preds = %if.then118
  %tmp92 = load i8*, i8** %tmp, align 8
  %tmp93 = load i8*, i8** %quote2, align 8
  %cmp124 = icmp ult i8* %tmp92, %tmp93
  br i1 %cmp124, label %if.then125, label %if.else127

if.then125:                                       ; preds = %if.end123
  %tmp94 = load i8*, i8** %quote2, align 8
  %call126 = call i8* @strchr(i8* %tmp94, i32 44) #7
  store i8* %call126, i8** %space, align 8
  br label %if.end128

if.else127:                                       ; preds = %if.end123
  %tmp95 = load i8*, i8** %tmp, align 8
  store i8* %tmp95, i8** %space, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then125
  %tmp96 = load i8*, i8** %space, align 8
  %cmp129 = icmp eq i8* %tmp96, null
  br i1 %cmp129, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.end128
  store i32 0, i32* %retval
  br label %return

if.end131:                                        ; preds = %if.end128
  br label %if.end133

if.else132:                                       ; preds = %land.lhs.true, %if.end114
  %tmp97 = load i8*, i8** %tmp, align 8
  store i8* %tmp97, i8** %space, align 8
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end131
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.end104
  br label %for.cond

return:                                           ; preds = %if.then130, %if.then122, %if.then113, %if.then109, %if.then98, %if.then95, %if.then86, %if.then83, %if.then74, %if.then71, %if.then62, %if.then59, %if.then50, %if.then47, %if.then38, %if.then35, %if.then28, %if.then25, %if.then16, %if.then2, %if.then
  %tmp98 = load i32, i32* %retval
  ret i32 %tmp98
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_free(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %cmp = icmp eq %struct.osip_www_authenticate* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end77

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %auth_type, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %auth_type4 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %auth_type4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %auth_type5 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %auth_type5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %realm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %realm, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %realm12 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %realm12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %realm14 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %realm14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %domain = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp17, i32 0, i32 2
  %tmp18 = load i8*, i8** %domain, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end16
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.then18
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %domain21 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp21, i32 0, i32 2
  %tmp22 = load i8*, i8** %domain21, align 8
  call void %tmp20(i8* %tmp22)
  br label %if.end24

if.else22:                                        ; preds = %if.then18
  %tmp23 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %domain23 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp23, i32 0, i32 2
  %tmp24 = load i8*, i8** %domain23, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16
  %tmp25 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %nonce, align 8
  %cmp26 = icmp ne i8* %tmp26, null
  br i1 %cmp26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end25
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool28 = icmp ne void (i8*)* %tmp27, null
  br i1 %tobool28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.then27
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp29 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %nonce30 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp29, i32 0, i32 3
  %tmp30 = load i8*, i8** %nonce30, align 8
  call void %tmp28(i8* %tmp30)
  br label %if.end33

if.else31:                                        ; preds = %if.then27
  %tmp31 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %nonce32 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp31, i32 0, i32 3
  %tmp32 = load i8*, i8** %nonce32, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end25
  %tmp33 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp33, i32 0, i32 4
  %tmp34 = load i8*, i8** %opaque, align 8
  %cmp35 = icmp ne i8* %tmp34, null
  br i1 %cmp35, label %if.then36, label %if.end43

if.then36:                                        ; preds = %if.end34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool37 = icmp ne void (i8*)* %tmp35, null
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then36
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp37 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %opaque39 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp37, i32 0, i32 4
  %tmp38 = load i8*, i8** %opaque39, align 8
  call void %tmp36(i8* %tmp38)
  br label %if.end42

if.else40:                                        ; preds = %if.then36
  %tmp39 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %opaque41 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp39, i32 0, i32 4
  %tmp40 = load i8*, i8** %opaque41, align 8
  call void @free(i8* %tmp40) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  %tmp41 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %stale = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp41, i32 0, i32 5
  %tmp42 = load i8*, i8** %stale, align 8
  %cmp44 = icmp ne i8* %tmp42, null
  br i1 %cmp44, label %if.then45, label %if.end52

if.then45:                                        ; preds = %if.end43
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool46 = icmp ne void (i8*)* %tmp43, null
  br i1 %tobool46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.then45
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp45 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %stale48 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp45, i32 0, i32 5
  %tmp46 = load i8*, i8** %stale48, align 8
  call void %tmp44(i8* %tmp46)
  br label %if.end51

if.else49:                                        ; preds = %if.then45
  %tmp47 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %stale50 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp47, i32 0, i32 5
  %tmp48 = load i8*, i8** %stale50, align 8
  call void @free(i8* %tmp48) #8
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end43
  %tmp49 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp49, i32 0, i32 6
  %tmp50 = load i8*, i8** %algorithm, align 8
  %cmp53 = icmp ne i8* %tmp50, null
  br i1 %cmp53, label %if.then54, label %if.end61

if.then54:                                        ; preds = %if.end52
  %tmp51 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool55 = icmp ne void (i8*)* %tmp51, null
  br i1 %tobool55, label %if.then56, label %if.else58

if.then56:                                        ; preds = %if.then54
  %tmp52 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp53 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %algorithm57 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp53, i32 0, i32 6
  %tmp54 = load i8*, i8** %algorithm57, align 8
  call void %tmp52(i8* %tmp54)
  br label %if.end60

if.else58:                                        ; preds = %if.then54
  %tmp55 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %algorithm59 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp55, i32 0, i32 6
  %tmp56 = load i8*, i8** %algorithm59, align 8
  call void @free(i8* %tmp56) #8
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then56
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end52
  %tmp57 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp57, i32 0, i32 7
  %tmp58 = load i8*, i8** %qop_options, align 8
  %cmp62 = icmp ne i8* %tmp58, null
  br i1 %cmp62, label %if.then63, label %if.end70

if.then63:                                        ; preds = %if.end61
  %tmp59 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool64 = icmp ne void (i8*)* %tmp59, null
  br i1 %tobool64, label %if.then65, label %if.else67

if.then65:                                        ; preds = %if.then63
  %tmp60 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp61 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %qop_options66 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp61, i32 0, i32 7
  %tmp62 = load i8*, i8** %qop_options66, align 8
  call void %tmp60(i8* %tmp62)
  br label %if.end69

if.else67:                                        ; preds = %if.then63
  %tmp63 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %qop_options68 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp63, i32 0, i32 7
  %tmp64 = load i8*, i8** %qop_options68, align 8
  call void @free(i8* %tmp64) #8
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end61
  %tmp65 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %cmp71 = icmp ne %struct.osip_www_authenticate* %tmp65, null
  br i1 %cmp71, label %if.then72, label %if.end77

if.then72:                                        ; preds = %if.end70
  %tmp66 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool73 = icmp ne void (i8*)* %tmp66, null
  br i1 %tobool73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then72
  %tmp67 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp68 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp69 = bitcast %struct.osip_www_authenticate* %tmp68 to i8*
  call void %tmp67(i8* %tmp69)
  br label %if.end76

if.else75:                                        ; preds = %if.then72
  %tmp70 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp71 = bitcast %struct.osip_www_authenticate* %tmp70 to i8*
  call void @free(i8* %tmp71) #8
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end70, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @__osip_quoted_string_set(i8* %name, i8* %str, i8** %result, i8** %next) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %result.addr = alloca i8**, align 8
  %next.addr = alloca i8**, align 8
  %quote1 = alloca i8*, align 8
  %quote2 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %hack = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  store i8* %str, i8** %str.addr, align 8
  store i8** %result, i8*** %result.addr, align 8
  store i8** %next, i8*** %next.addr, align 8
  %tmp1 = load i8*, i8** %str.addr, align 8
  %tmp2 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp1, i8** %tmp2, align 8
  %tmp3 = load i8**, i8*** %result.addr, align 8
  %tmp4 = load i8*, i8** %tmp3, align 8
  %cmp = icmp ne i8* %tmp4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp5 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp5, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end10, %if.end
  %tmp6 = load i8*, i8** %str.addr, align 8
  %tmp7 = load i8, i8* %tmp6, align 1
  %conv = sext i8 %tmp7 to i32
  %cmp1 = icmp eq i32 32, %conv
  br i1 %cmp1, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %tmp8 = load i8*, i8** %str.addr, align 8
  %tmp9 = load i8, i8* %tmp8, align 1
  %conv3 = sext i8 %tmp9 to i32
  %cmp4 = icmp eq i32 9, %conv3
  br i1 %cmp4, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %tmp10 = load i8*, i8** %str.addr, align 8
  %tmp11 = load i8, i8* %tmp10, align 1
  %conv6 = sext i8 %tmp11 to i32
  %cmp7 = icmp eq i32 44, %conv6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %tmp12 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp7, %lor.rhs ]
  br i1 %tmp12, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %tmp13 = load i8*, i8** %str.addr, align 8
  %tmp14 = load i8, i8* %tmp13, align 1
  %tobool = icmp ne i8 %tmp14, 0
  br i1 %tobool, label %if.then9, label %if.else

if.then9:                                         ; preds = %while.body
  %tmp15 = load i8*, i8** %str.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp15, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 8
  br label %if.end10

if.else:                                          ; preds = %while.body
  store i32 -5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.then9
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %tmp16 = load i8*, i8** %str.addr, align 8
  %call = call i64 @strlen(i8* %tmp16) #7
  %tmp17 = load i8*, i8** %name.addr, align 8
  %call11 = call i64 @strlen(i8* %tmp17) #7
  %cmp12 = icmp ule i64 %call, %call11
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %while.end
  store i32 -5, i32* %retval
  br label %return

if.end15:                                         ; preds = %while.end
  %tmp18 = load i8*, i8** %name.addr, align 8
  %tmp19 = load i8*, i8** %str.addr, align 8
  %tmp20 = load i8*, i8** %name.addr, align 8
  %call16 = call i64 @strlen(i8* %tmp20) #7
  %call17 = call i32 @osip_strncasecmp(i8* %tmp18, i8* %tmp19, i64 %call16)
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then20, label %if.else185

if.then20:                                        ; preds = %if.end15
  %tmp21 = load i8*, i8** %str.addr, align 8
  %call22 = call i8* @strchr(i8* %tmp21, i32 61) #7
  store i8* %call22, i8** %hack, align 8
  %tmp22 = load i8*, i8** %hack, align 8
  %cmp23 = icmp eq i8* %tmp22, null
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.then20
  store i32 -5, i32* %retval
  br label %return

if.end26:                                         ; preds = %if.then20
  br label %while.cond27

while.cond27:                                     ; preds = %while.body31, %if.end26
  %tmp23 = load i8*, i8** %hack, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp23, i64 -1
  %tmp24 = load i8, i8* %add.ptr, align 1
  %conv28 = sext i8 %tmp24 to i32
  %cmp29 = icmp eq i32 32, %conv28
  br i1 %cmp29, label %while.body31, label %while.end33

while.body31:                                     ; preds = %while.cond27
  %tmp25 = load i8*, i8** %hack, align 8
  %incdec.ptr32 = getelementptr inbounds i8, i8* %tmp25, i32 -1
  store i8* %incdec.ptr32, i8** %hack, align 8
  br label %while.cond27

while.end33:                                      ; preds = %while.cond27
  %tmp26 = load i8*, i8** %hack, align 8
  %tmp27 = load i8*, i8** %str.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp26 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tmp28 = load i8*, i8** %name.addr, align 8
  %call34 = call i64 @strlen(i8* %tmp28) #7
  %cmp35 = icmp ne i64 %sub.ptr.sub, %call34
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %while.end33
  %tmp29 = load i8*, i8** %str.addr, align 8
  %tmp30 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp29, i8** %tmp30, align 8
  store i32 0, i32* %retval
  br label %return

if.end38:                                         ; preds = %while.end33
  %tmp31 = load i8*, i8** %str.addr, align 8
  %call39 = call i8* @__osip_quote_find(i8* %tmp31)
  store i8* %call39, i8** %quote1, align 8
  %tmp32 = load i8*, i8** %quote1, align 8
  %cmp40 = icmp eq i8* %tmp32, null
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end38
  store i32 -5, i32* %retval
  br label %return

if.end43:                                         ; preds = %if.end38
  %tmp33 = load i8*, i8** %quote1, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %tmp33, i64 1
  %call45 = call i8* @__osip_quote_find(i8* %add.ptr44)
  store i8* %call45, i8** %quote2, align 8
  %tmp34 = load i8*, i8** %quote2, align 8
  %cmp46 = icmp eq i8* %tmp34, null
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  store i32 -5, i32* %retval
  br label %return

if.end49:                                         ; preds = %if.end43
  %tmp35 = load i8*, i8** %quote2, align 8
  %tmp36 = load i8*, i8** %quote1, align 8
  %sub.ptr.lhs.cast50 = ptrtoint i8* %tmp35 to i64
  %sub.ptr.rhs.cast51 = ptrtoint i8* %tmp36 to i64
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51
  %cmp53 = icmp eq i64 %sub.ptr.sub52, 1
  br i1 %cmp53, label %if.then55, label %if.end108

if.then55:                                        ; preds = %if.end49
  %tmp37 = load i8*, i8** %quote2, align 8
  %add.ptr56 = getelementptr inbounds i8, i8* %tmp37, i64 1
  store i8* %add.ptr56, i8** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then55
  %tmp38 = load i8*, i8** %tmp, align 8
  %tmp39 = load i8, i8* %tmp38, align 1
  %conv57 = sext i8 %tmp39 to i32
  %cmp58 = icmp eq i32 %conv57, 32
  br i1 %cmp58, label %for.body, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %for.cond
  %tmp40 = load i8*, i8** %tmp, align 8
  %tmp41 = load i8, i8* %tmp40, align 1
  %conv61 = sext i8 %tmp41 to i32
  %cmp62 = icmp eq i32 %conv61, 9
  br i1 %cmp62, label %for.body, label %for.end

for.body:                                         ; preds = %lor.lhs.false60, %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp42 = load i8*, i8** %tmp, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %tmp42, i32 1
  store i8* %incdec.ptr64, i8** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.lhs.false60
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc74, %for.end
  %tmp43 = load i8*, i8** %tmp, align 8
  %tmp44 = load i8, i8* %tmp43, align 1
  %conv66 = sext i8 %tmp44 to i32
  %cmp67 = icmp eq i32 %conv66, 10
  br i1 %cmp67, label %for.body73, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %for.cond65
  %tmp45 = load i8*, i8** %tmp, align 8
  %tmp46 = load i8, i8* %tmp45, align 1
  %conv70 = sext i8 %tmp46 to i32
  %cmp71 = icmp eq i32 %conv70, 13
  br i1 %cmp71, label %for.body73, label %for.end76

for.body73:                                       ; preds = %lor.lhs.false69, %for.cond65
  br label %for.inc74

for.inc74:                                        ; preds = %for.body73
  %tmp47 = load i8*, i8** %tmp, align 8
  %incdec.ptr75 = getelementptr inbounds i8, i8* %tmp47, i32 1
  store i8* %incdec.ptr75, i8** %tmp, align 8
  br label %for.cond65

for.end76:                                        ; preds = %lor.lhs.false69
  %tmp48 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp48, align 8
  %tmp49 = load i8*, i8** %tmp, align 8
  %tmp50 = load i8, i8* %tmp49, align 1
  %conv77 = sext i8 %tmp50 to i32
  %cmp78 = icmp eq i32 %conv77, 0
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %for.end76
  store i32 0, i32* %retval
  br label %return

if.end81:                                         ; preds = %for.end76
  %tmp51 = load i8*, i8** %tmp, align 8
  %tmp52 = load i8, i8* %tmp51, align 1
  %conv82 = sext i8 %tmp52 to i32
  %cmp83 = icmp ne i32 %conv82, 9
  br i1 %cmp83, label %land.lhs.true, label %if.else89

land.lhs.true:                                    ; preds = %if.end81
  %tmp53 = load i8*, i8** %tmp, align 8
  %tmp54 = load i8, i8* %tmp53, align 1
  %conv85 = sext i8 %tmp54 to i32
  %cmp86 = icmp ne i32 %conv85, 32
  br i1 %cmp86, label %if.then88, label %if.else89

if.then88:                                        ; preds = %land.lhs.true
  %tmp55 = load i8*, i8** %tmp, align 8
  %tmp56 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp55, i8** %tmp56, align 8
  br label %if.end107

if.else89:                                        ; preds = %land.lhs.true, %if.end81
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc99, %if.else89
  %tmp57 = load i8*, i8** %tmp, align 8
  %tmp58 = load i8, i8* %tmp57, align 1
  %conv91 = sext i8 %tmp58 to i32
  %cmp92 = icmp eq i32 %conv91, 32
  br i1 %cmp92, label %for.body98, label %lor.lhs.false94

lor.lhs.false94:                                  ; preds = %for.cond90
  %tmp59 = load i8*, i8** %tmp, align 8
  %tmp60 = load i8, i8* %tmp59, align 1
  %conv95 = sext i8 %tmp60 to i32
  %cmp96 = icmp eq i32 %conv95, 9
  br i1 %cmp96, label %for.body98, label %for.end101

for.body98:                                       ; preds = %lor.lhs.false94, %for.cond90
  br label %for.inc99

for.inc99:                                        ; preds = %for.body98
  %tmp61 = load i8*, i8** %tmp, align 8
  %incdec.ptr100 = getelementptr inbounds i8, i8* %tmp61, i32 1
  store i8* %incdec.ptr100, i8** %tmp, align 8
  br label %for.cond90

for.end101:                                       ; preds = %lor.lhs.false94
  %tmp62 = load i8*, i8** %tmp, align 8
  %tmp63 = load i8, i8* %tmp62, align 1
  %conv102 = sext i8 %tmp63 to i32
  %cmp103 = icmp eq i32 %conv102, 0
  br i1 %cmp103, label %if.then105, label %if.end106

if.then105:                                       ; preds = %for.end101
  store i32 0, i32* %retval
  br label %return

if.end106:                                        ; preds = %for.end101
  %tmp64 = load i8*, i8** %tmp, align 8
  %tmp65 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp64, i8** %tmp65, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then88
  store i32 0, i32* %retval
  br label %return

if.end108:                                        ; preds = %if.end49
  %tmp66 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool109 = icmp ne i8* (i64)* %tmp66, null
  br i1 %tobool109, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end108
  %tmp67 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp68 = load i8*, i8** %quote2, align 8
  %tmp69 = load i8*, i8** %quote1, align 8
  %sub.ptr.lhs.cast110 = ptrtoint i8* %tmp68 to i64
  %sub.ptr.rhs.cast111 = ptrtoint i8* %tmp69 to i64
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111
  %add = add nsw i64 %sub.ptr.sub112, 3
  %call113 = call i8* %tmp67(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end108
  %tmp70 = load i8*, i8** %quote2, align 8
  %tmp71 = load i8*, i8** %quote1, align 8
  %sub.ptr.lhs.cast114 = ptrtoint i8* %tmp70 to i64
  %sub.ptr.rhs.cast115 = ptrtoint i8* %tmp71 to i64
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115
  %add117 = add nsw i64 %sub.ptr.sub116, 3
  %call118 = call noalias i8* @malloc(i64 %add117) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call113, %cond.true ], [ %call118, %cond.false ]
  %tmp72 = load i8**, i8*** %result.addr, align 8
  store i8* %cond, i8** %tmp72, align 8
  %tmp73 = load i8**, i8*** %result.addr, align 8
  %tmp74 = load i8*, i8** %tmp73, align 8
  %cmp119 = icmp eq i8* %tmp74, null
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end122:                                        ; preds = %cond.end
  %tmp75 = load i8**, i8*** %result.addr, align 8
  %tmp76 = load i8*, i8** %tmp75, align 8
  %tmp77 = load i8*, i8** %quote1, align 8
  %tmp78 = load i8*, i8** %quote2, align 8
  %tmp79 = load i8*, i8** %quote1, align 8
  %sub.ptr.lhs.cast123 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.rhs.cast124 = ptrtoint i8* %tmp79 to i64
  %sub.ptr.sub125 = sub i64 %sub.ptr.lhs.cast123, %sub.ptr.rhs.cast124
  %add126 = add nsw i64 %sub.ptr.sub125, 1
  %call127 = call i8* @osip_strncpy(i8* %tmp76, i8* %tmp77, i64 %add126)
  %tmp80 = load i8*, i8** %quote2, align 8
  %add.ptr128 = getelementptr inbounds i8, i8* %tmp80, i64 1
  store i8* %add.ptr128, i8** %tmp, align 8
  br label %for.cond129

for.cond129:                                      ; preds = %for.inc138, %if.end122
  %tmp81 = load i8*, i8** %tmp, align 8
  %tmp82 = load i8, i8* %tmp81, align 1
  %conv130 = sext i8 %tmp82 to i32
  %cmp131 = icmp eq i32 %conv130, 32
  br i1 %cmp131, label %for.body137, label %lor.lhs.false133

lor.lhs.false133:                                 ; preds = %for.cond129
  %tmp83 = load i8*, i8** %tmp, align 8
  %tmp84 = load i8, i8* %tmp83, align 1
  %conv134 = sext i8 %tmp84 to i32
  %cmp135 = icmp eq i32 %conv134, 9
  br i1 %cmp135, label %for.body137, label %for.end140

for.body137:                                      ; preds = %lor.lhs.false133, %for.cond129
  br label %for.inc138

for.inc138:                                       ; preds = %for.body137
  %tmp85 = load i8*, i8** %tmp, align 8
  %incdec.ptr139 = getelementptr inbounds i8, i8* %tmp85, i32 1
  store i8* %incdec.ptr139, i8** %tmp, align 8
  br label %for.cond129

for.end140:                                       ; preds = %lor.lhs.false133
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc150, %for.end140
  %tmp86 = load i8*, i8** %tmp, align 8
  %tmp87 = load i8, i8* %tmp86, align 1
  %conv142 = sext i8 %tmp87 to i32
  %cmp143 = icmp eq i32 %conv142, 10
  br i1 %cmp143, label %for.body149, label %lor.lhs.false145

lor.lhs.false145:                                 ; preds = %for.cond141
  %tmp88 = load i8*, i8** %tmp, align 8
  %tmp89 = load i8, i8* %tmp88, align 1
  %conv146 = sext i8 %tmp89 to i32
  %cmp147 = icmp eq i32 %conv146, 13
  br i1 %cmp147, label %for.body149, label %for.end152

for.body149:                                      ; preds = %lor.lhs.false145, %for.cond141
  br label %for.inc150

for.inc150:                                       ; preds = %for.body149
  %tmp90 = load i8*, i8** %tmp, align 8
  %incdec.ptr151 = getelementptr inbounds i8, i8* %tmp90, i32 1
  store i8* %incdec.ptr151, i8** %tmp, align 8
  br label %for.cond141

for.end152:                                       ; preds = %lor.lhs.false145
  %tmp91 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp91, align 8
  %tmp92 = load i8*, i8** %tmp, align 8
  %tmp93 = load i8, i8* %tmp92, align 1
  %conv153 = sext i8 %tmp93 to i32
  %cmp154 = icmp eq i32 %conv153, 0
  br i1 %cmp154, label %if.then156, label %if.end157

if.then156:                                       ; preds = %for.end152
  store i32 0, i32* %retval
  br label %return

if.end157:                                        ; preds = %for.end152
  %tmp94 = load i8*, i8** %tmp, align 8
  %tmp95 = load i8, i8* %tmp94, align 1
  %conv158 = sext i8 %tmp95 to i32
  %cmp159 = icmp ne i32 %conv158, 9
  br i1 %cmp159, label %land.lhs.true161, label %if.else166

land.lhs.true161:                                 ; preds = %if.end157
  %tmp96 = load i8*, i8** %tmp, align 8
  %tmp97 = load i8, i8* %tmp96, align 1
  %conv162 = sext i8 %tmp97 to i32
  %cmp163 = icmp ne i32 %conv162, 32
  br i1 %cmp163, label %if.then165, label %if.else166

if.then165:                                       ; preds = %land.lhs.true161
  %tmp98 = load i8*, i8** %tmp, align 8
  %tmp99 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp98, i8** %tmp99, align 8
  br label %if.end184

if.else166:                                       ; preds = %land.lhs.true161, %if.end157
  br label %for.cond167

for.cond167:                                      ; preds = %for.inc176, %if.else166
  %tmp100 = load i8*, i8** %tmp, align 8
  %tmp101 = load i8, i8* %tmp100, align 1
  %conv168 = sext i8 %tmp101 to i32
  %cmp169 = icmp eq i32 %conv168, 32
  br i1 %cmp169, label %for.body175, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %for.cond167
  %tmp102 = load i8*, i8** %tmp, align 8
  %tmp103 = load i8, i8* %tmp102, align 1
  %conv172 = sext i8 %tmp103 to i32
  %cmp173 = icmp eq i32 %conv172, 9
  br i1 %cmp173, label %for.body175, label %for.end178

for.body175:                                      ; preds = %lor.lhs.false171, %for.cond167
  br label %for.inc176

for.inc176:                                       ; preds = %for.body175
  %tmp104 = load i8*, i8** %tmp, align 8
  %incdec.ptr177 = getelementptr inbounds i8, i8* %tmp104, i32 1
  store i8* %incdec.ptr177, i8** %tmp, align 8
  br label %for.cond167

for.end178:                                       ; preds = %lor.lhs.false171
  %tmp105 = load i8*, i8** %tmp, align 8
  %tmp106 = load i8, i8* %tmp105, align 1
  %conv179 = sext i8 %tmp106 to i32
  %cmp180 = icmp eq i32 %conv179, 0
  br i1 %cmp180, label %if.then182, label %if.end183

if.then182:                                       ; preds = %for.end178
  store i32 0, i32* %retval
  br label %return

if.end183:                                        ; preds = %for.end178
  %tmp107 = load i8*, i8** %tmp, align 8
  %tmp108 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp107, i8** %tmp108, align 8
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then165
  br label %if.end186

if.else185:                                       ; preds = %if.end15
  %tmp109 = load i8*, i8** %str.addr, align 8
  %tmp110 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp109, i8** %tmp110, align 8
  br label %if.end186

if.end186:                                        ; preds = %if.else185, %if.end184
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end186, %if.then182, %if.then156, %if.then121, %if.end107, %if.then105, %if.then80, %if.then48, %if.then42, %if.then37, %if.then25, %if.then14, %if.else, %if.then
  %tmp111 = load i32, i32* %retval
  ret i32 %tmp111
}

; Function Attrs: nounwind uwtable
define i32 @__osip_token_set(i8* %name, i8* %str, i8** %result, i8** %next) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %result.addr = alloca i8**, align 8
  %next.addr = alloca i8**, align 8
  %beg = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %end = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  store i8* %str, i8** %str.addr, align 8
  store i8** %result, i8*** %result.addr, align 8
  store i8** %next, i8*** %next.addr, align 8
  %tmp1 = load i8*, i8** %str.addr, align 8
  %tmp2 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp1, i8** %tmp2, align 8
  %tmp3 = load i8**, i8*** %result.addr, align 8
  %tmp4 = load i8*, i8** %tmp3, align 8
  %cmp = icmp ne i8* %tmp4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp5 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp5, align 8
  %tmp6 = load i8*, i8** %str.addr, align 8
  %call = call i8* @strchr(i8* %tmp6, i32 61) #7
  store i8* %call, i8** %beg, align 8
  %tmp7 = load i8*, i8** %beg, align 8
  %cmp1 = icmp eq i8* %tmp7, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp8 = load i8*, i8** %str.addr, align 8
  %call4 = call i64 @strlen(i8* %tmp8) #7
  %cmp5 = icmp ult i64 %call4, 6
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end3
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %if.end7
  %tmp9 = load i8*, i8** %str.addr, align 8
  %tmp10 = load i8, i8* %tmp9, align 1
  %conv = sext i8 %tmp10 to i32
  %cmp8 = icmp eq i32 32, %conv
  br i1 %cmp8, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %tmp11 = load i8*, i8** %str.addr, align 8
  %tmp12 = load i8, i8* %tmp11, align 1
  %conv10 = sext i8 %tmp12 to i32
  %cmp11 = icmp eq i32 9, %conv10
  br i1 %cmp11, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %tmp13 = load i8*, i8** %str.addr, align 8
  %tmp14 = load i8, i8* %tmp13, align 1
  %conv13 = sext i8 %tmp14 to i32
  %cmp14 = icmp eq i32 44, %conv13
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %tmp15 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp14, %lor.rhs ]
  br i1 %tmp15, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %tmp16 = load i8*, i8** %str.addr, align 8
  %tmp17 = load i8, i8* %tmp16, align 1
  %tobool = icmp ne i8 %tmp17, 0
  br i1 %tobool, label %if.then16, label %if.else

if.then16:                                        ; preds = %while.body
  %tmp18 = load i8*, i8** %str.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp18, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 8
  br label %if.end17

if.else:                                          ; preds = %while.body
  store i32 -5, i32* %retval
  br label %return

if.end17:                                         ; preds = %if.then16
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %tmp19 = load i8*, i8** %name.addr, align 8
  %tmp20 = load i8*, i8** %str.addr, align 8
  %tmp21 = load i8*, i8** %name.addr, align 8
  %call18 = call i64 @strlen(i8* %tmp21) #7
  %call19 = call i32 @osip_strncasecmp(i8* %tmp19, i8* %tmp20, i64 %call18)
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %if.then22, label %if.else110

if.then22:                                        ; preds = %while.end
  %tmp22 = load i8*, i8** %str.addr, align 8
  %call24 = call i8* @strchr(i8* %tmp22, i32 44) #7
  store i8* %call24, i8** %end, align 8
  %tmp23 = load i8*, i8** %end, align 8
  %cmp25 = icmp eq i8* %tmp23, null
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then22
  %tmp24 = load i8*, i8** %str.addr, align 8
  %tmp25 = load i8*, i8** %str.addr, align 8
  %call28 = call i64 @strlen(i8* %tmp25) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp24, i64 %call28
  store i8* %add.ptr, i8** %end, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then22
  %tmp26 = load i8*, i8** %end, align 8
  %tmp27 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp26 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp30 = icmp slt i64 %sub.ptr.sub, 2
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end29
  store i32 -5, i32* %retval
  br label %return

if.end33:                                         ; preds = %if.end29
  %tmp28 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool34 = icmp ne i8* (i64)* %tmp28, null
  br i1 %tobool34, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end33
  %tmp29 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp30 = load i8*, i8** %end, align 8
  %tmp31 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast35 = ptrtoint i8* %tmp30 to i64
  %sub.ptr.rhs.cast36 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36
  %call38 = call i8* %tmp29(i64 %sub.ptr.sub37)
  br label %cond.end

cond.false:                                       ; preds = %if.end33
  %tmp32 = load i8*, i8** %end, align 8
  %tmp33 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %tmp32 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %tmp33 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %call42 = call noalias i8* @malloc(i64 %sub.ptr.sub41) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call38, %cond.true ], [ %call42, %cond.false ]
  %tmp34 = load i8**, i8*** %result.addr, align 8
  store i8* %cond, i8** %tmp34, align 8
  %tmp35 = load i8**, i8*** %result.addr, align 8
  %tmp36 = load i8*, i8** %tmp35, align 8
  %cmp43 = icmp eq i8* %tmp36, null
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end46:                                         ; preds = %cond.end
  %tmp37 = load i8**, i8*** %result.addr, align 8
  %tmp38 = load i8*, i8** %tmp37, align 8
  %tmp39 = load i8*, i8** %beg, align 8
  %add.ptr47 = getelementptr inbounds i8, i8* %tmp39, i64 1
  %tmp40 = load i8*, i8** %end, align 8
  %tmp41 = load i8*, i8** %beg, align 8
  %sub.ptr.lhs.cast48 = ptrtoint i8* %tmp40 to i64
  %sub.ptr.rhs.cast49 = ptrtoint i8* %tmp41 to i64
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49
  %sub = sub nsw i64 %sub.ptr.sub50, 1
  %call51 = call i8* @osip_clrncpy(i8* %tmp38, i8* %add.ptr47, i64 %sub)
  %tmp42 = load i8*, i8** %end, align 8
  %tmp43 = load i8, i8* %tmp42, align 1
  %conv52 = sext i8 %tmp43 to i32
  %tobool53 = icmp ne i32 %conv52, 0
  br i1 %tobool53, label %cond.true54, label %cond.false56

cond.true54:                                      ; preds = %if.end46
  %tmp44 = load i8*, i8** %end, align 8
  %add.ptr55 = getelementptr inbounds i8, i8* %tmp44, i64 1
  br label %cond.end57

cond.false56:                                     ; preds = %if.end46
  %tmp45 = load i8*, i8** %end, align 8
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false56, %cond.true54
  %cond58 = phi i8* [ %add.ptr55, %cond.true54 ], [ %tmp45, %cond.false56 ]
  store i8* %cond58, i8** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end57
  %tmp46 = load i8*, i8** %tmp, align 8
  %tmp47 = load i8, i8* %tmp46, align 1
  %conv59 = sext i8 %tmp47 to i32
  %cmp60 = icmp eq i32 %conv59, 32
  br i1 %cmp60, label %for.body, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %for.cond
  %tmp48 = load i8*, i8** %tmp, align 8
  %tmp49 = load i8, i8* %tmp48, align 1
  %conv63 = sext i8 %tmp49 to i32
  %cmp64 = icmp eq i32 %conv63, 9
  br i1 %cmp64, label %for.body, label %for.end

for.body:                                         ; preds = %lor.lhs.false62, %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %tmp50 = load i8*, i8** %tmp, align 8
  %incdec.ptr66 = getelementptr inbounds i8, i8* %tmp50, i32 1
  store i8* %incdec.ptr66, i8** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.lhs.false62
  br label %for.cond67

for.cond67:                                       ; preds = %for.inc76, %for.end
  %tmp51 = load i8*, i8** %tmp, align 8
  %tmp52 = load i8, i8* %tmp51, align 1
  %conv68 = sext i8 %tmp52 to i32
  %cmp69 = icmp eq i32 %conv68, 10
  br i1 %cmp69, label %for.body75, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %for.cond67
  %tmp53 = load i8*, i8** %tmp, align 8
  %tmp54 = load i8, i8* %tmp53, align 1
  %conv72 = sext i8 %tmp54 to i32
  %cmp73 = icmp eq i32 %conv72, 13
  br i1 %cmp73, label %for.body75, label %for.end78

for.body75:                                       ; preds = %lor.lhs.false71, %for.cond67
  br label %for.inc76

for.inc76:                                        ; preds = %for.body75
  %tmp55 = load i8*, i8** %tmp, align 8
  %incdec.ptr77 = getelementptr inbounds i8, i8* %tmp55, i32 1
  store i8* %incdec.ptr77, i8** %tmp, align 8
  br label %for.cond67

for.end78:                                        ; preds = %lor.lhs.false71
  %tmp56 = load i8**, i8*** %next.addr, align 8
  store i8* null, i8** %tmp56, align 8
  %tmp57 = load i8*, i8** %tmp, align 8
  %tmp58 = load i8, i8* %tmp57, align 1
  %conv79 = sext i8 %tmp58 to i32
  %cmp80 = icmp eq i32 %conv79, 0
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %for.end78
  store i32 0, i32* %retval
  br label %return

if.end83:                                         ; preds = %for.end78
  %tmp59 = load i8*, i8** %tmp, align 8
  %tmp60 = load i8, i8* %tmp59, align 1
  %conv84 = sext i8 %tmp60 to i32
  %cmp85 = icmp ne i32 %conv84, 9
  br i1 %cmp85, label %land.lhs.true, label %if.else91

land.lhs.true:                                    ; preds = %if.end83
  %tmp61 = load i8*, i8** %tmp, align 8
  %tmp62 = load i8, i8* %tmp61, align 1
  %conv87 = sext i8 %tmp62 to i32
  %cmp88 = icmp ne i32 %conv87, 32
  br i1 %cmp88, label %if.then90, label %if.else91

if.then90:                                        ; preds = %land.lhs.true
  %tmp63 = load i8*, i8** %tmp, align 8
  %tmp64 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp63, i8** %tmp64, align 8
  br label %if.end109

if.else91:                                        ; preds = %land.lhs.true, %if.end83
  br label %for.cond92

for.cond92:                                       ; preds = %for.inc101, %if.else91
  %tmp65 = load i8*, i8** %tmp, align 8
  %tmp66 = load i8, i8* %tmp65, align 1
  %conv93 = sext i8 %tmp66 to i32
  %cmp94 = icmp eq i32 %conv93, 32
  br i1 %cmp94, label %for.body100, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %for.cond92
  %tmp67 = load i8*, i8** %tmp, align 8
  %tmp68 = load i8, i8* %tmp67, align 1
  %conv97 = sext i8 %tmp68 to i32
  %cmp98 = icmp eq i32 %conv97, 9
  br i1 %cmp98, label %for.body100, label %for.end103

for.body100:                                      ; preds = %lor.lhs.false96, %for.cond92
  br label %for.inc101

for.inc101:                                       ; preds = %for.body100
  %tmp69 = load i8*, i8** %tmp, align 8
  %incdec.ptr102 = getelementptr inbounds i8, i8* %tmp69, i32 1
  store i8* %incdec.ptr102, i8** %tmp, align 8
  br label %for.cond92

for.end103:                                       ; preds = %lor.lhs.false96
  %tmp70 = load i8*, i8** %tmp, align 8
  %tmp71 = load i8, i8* %tmp70, align 1
  %conv104 = sext i8 %tmp71 to i32
  %cmp105 = icmp eq i32 %conv104, 0
  br i1 %cmp105, label %if.then107, label %if.end108

if.then107:                                       ; preds = %for.end103
  store i32 0, i32* %retval
  br label %return

if.end108:                                        ; preds = %for.end103
  %tmp72 = load i8*, i8** %tmp, align 8
  %tmp73 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp72, i8** %tmp73, align 8
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then90
  br label %if.end111

if.else110:                                       ; preds = %while.end
  %tmp74 = load i8*, i8** %str.addr, align 8
  %tmp75 = load i8**, i8*** %next.addr, align 8
  store i8* %tmp74, i8** %tmp75, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.end109
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end111, %if.then107, %if.then82, %if.then45, %if.then32, %if.else, %if.then6, %if.then2, %if.then
  %tmp76 = load i32, i32* %retval
  ret i32 %tmp76
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_www_authenticate(%struct.osip_message* %sip, i32 %pos, %struct.osip_www_authenticate** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_www_authenticate**, align 8
  %www_authenticate = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_www_authenticate** %dest, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* null, %struct.osip_www_authenticate** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 29
  %call = call i32 @osip_list_size(%struct.osip_list* %www_authenticates)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %www_authenticates1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 29
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %www_authenticates1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_www_authenticate*
  store %struct.osip_www_authenticate* %tmp5, %struct.osip_www_authenticate** %www_authenticate, align 8
  %tmp6 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate, align 8
  %tmp7 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* %tmp6, %struct.osip_www_authenticate** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_auth_type(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 0
  %tmp1 = load i8*, i8** %auth_type, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_auth_type(%struct.osip_www_authenticate* %www_authenticate, i8* %auth_type) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %auth_type.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %auth_type, i8** %auth_type.addr, align 8
  %tmp = load i8*, i8** %auth_type.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %auth_type1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %auth_type1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_realm(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %realm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 1
  %tmp1 = load i8*, i8** %realm, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_realm(%struct.osip_www_authenticate* %www_authenticate, i8* %realm) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %realm.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %realm, i8** %realm.addr, align 8
  %tmp = load i8*, i8** %realm.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %realm1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %realm1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_domain(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %domain = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 2
  %tmp1 = load i8*, i8** %domain, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_domain(%struct.osip_www_authenticate* %www_authenticate, i8* %domain) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %domain.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %domain, i8** %domain.addr, align 8
  %tmp = load i8*, i8** %domain.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %domain1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 2
  store i8* %tmp, i8** %domain1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_nonce(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 3
  %tmp1 = load i8*, i8** %nonce, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_nonce(%struct.osip_www_authenticate* %www_authenticate, i8* %nonce) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %nonce.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %nonce, i8** %nonce.addr, align 8
  %tmp = load i8*, i8** %nonce.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %nonce1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 3
  store i8* %tmp, i8** %nonce1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_stale(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %stale = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 5
  %tmp1 = load i8*, i8** %stale, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_stale(%struct.osip_www_authenticate* %www_authenticate, i8* %stale) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %stale.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %stale, i8** %stale.addr, align 8
  %tmp = load i8*, i8** %stale.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %stale1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 5
  store i8* %tmp, i8** %stale1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_opaque(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 4
  %tmp1 = load i8*, i8** %opaque, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_opaque(%struct.osip_www_authenticate* %www_authenticate, i8* %opaque) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %opaque.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  %tmp = load i8*, i8** %opaque.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %opaque1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 4
  store i8* %tmp, i8** %opaque1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_algorithm(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 6
  %tmp1 = load i8*, i8** %algorithm, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_algorithm(%struct.osip_www_authenticate* %www_authenticate, i8* %algorithm) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %algorithm.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %algorithm, i8** %algorithm.addr, align 8
  %tmp = load i8*, i8** %algorithm.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %algorithm1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 6
  store i8* %tmp, i8** %algorithm1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @osip_www_authenticate_get_qop_options(%struct.osip_www_authenticate* %www_authenticate) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %tmp = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp, i32 0, i32 7
  %tmp1 = load i8*, i8** %qop_options, align 8
  ret i8* %tmp1
}

; Function Attrs: nounwind uwtable
define void @osip_www_authenticate_set_qop_options(%struct.osip_www_authenticate* %www_authenticate, i8* %qop_options) #0 {
entry:
  %www_authenticate.addr = alloca %struct.osip_www_authenticate*, align 8
  %qop_options.addr = alloca i8*, align 8
  store %struct.osip_www_authenticate* %www_authenticate, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  store i8* %qop_options, i8** %qop_options.addr, align 8
  %tmp = load i8*, i8** %qop_options.addr, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %www_authenticate.addr, align 8
  %qop_options1 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp1, i32 0, i32 7
  store i8* %tmp, i8** %qop_options1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_www_authenticate_to_str(%struct.osip_www_authenticate* %wwwa, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %wwwa.addr = alloca %struct.osip_www_authenticate*, align 8
  %dest.addr = alloca i8**, align 8
  %len = alloca i64, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_www_authenticate* %wwwa, %struct.osip_www_authenticate** %wwwa.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %cmp = icmp eq %struct.osip_www_authenticate* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp3, i32 0, i32 0
  %tmp4 = load i8*, i8** %auth_type, align 8
  %cmp1 = icmp eq i8* %tmp4, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type2 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %auth_type2, align 8
  %call = call i64 @strlen(i8* %tmp6) #7
  %add = add i64 %call, 1
  store i64 %add, i64* %len, align 8
  %tmp7 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp7, i32 0, i32 1
  %tmp8 = load i8*, i8** %realm, align 8
  %cmp3 = icmp ne i8* %tmp8, null
  br i1 %cmp3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %tmp9 = load i64, i64* %len, align 8
  %tmp10 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm5 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp10, i32 0, i32 1
  %tmp11 = load i8*, i8** %realm5, align 8
  %call6 = call i64 @strlen(i8* %tmp11) #7
  %add7 = add i64 %tmp9, %call6
  %add8 = add i64 %add7, 7
  store i64 %add8, i64* %len, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.end
  %tmp12 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp12, i32 0, i32 3
  %tmp13 = load i8*, i8** %nonce, align 8
  %cmp10 = icmp ne i8* %tmp13, null
  br i1 %cmp10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end9
  %tmp14 = load i64, i64* %len, align 8
  %tmp15 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce12 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp15, i32 0, i32 3
  %tmp16 = load i8*, i8** %nonce12, align 8
  %call13 = call i64 @strlen(i8* %tmp16) #7
  %add14 = add i64 %tmp14, %call13
  %add15 = add i64 %add14, 8
  store i64 %add15, i64* %len, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %if.end9
  %tmp17 = load i64, i64* %len, align 8
  %add17 = add i64 %tmp17, 2
  store i64 %add17, i64* %len, align 8
  %tmp18 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp18, i32 0, i32 2
  %tmp19 = load i8*, i8** %domain, align 8
  %cmp18 = icmp ne i8* %tmp19, null
  br i1 %cmp18, label %if.then19, label %if.end24

if.then19:                                        ; preds = %if.end16
  %tmp20 = load i64, i64* %len, align 8
  %tmp21 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain20 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp21, i32 0, i32 2
  %tmp22 = load i8*, i8** %domain20, align 8
  %call21 = call i64 @strlen(i8* %tmp22) #7
  %add22 = add i64 %tmp20, %call21
  %add23 = add i64 %add22, 9
  store i64 %add23, i64* %len, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end16
  %tmp23 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp23, i32 0, i32 4
  %tmp24 = load i8*, i8** %opaque, align 8
  %cmp25 = icmp ne i8* %tmp24, null
  br i1 %cmp25, label %if.then26, label %if.end31

if.then26:                                        ; preds = %if.end24
  %tmp25 = load i64, i64* %len, align 8
  %tmp26 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque27 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp26, i32 0, i32 4
  %tmp27 = load i8*, i8** %opaque27, align 8
  %call28 = call i64 @strlen(i8* %tmp27) #7
  %add29 = add i64 %tmp25, %call28
  %add30 = add i64 %add29, 9
  store i64 %add30, i64* %len, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.then26, %if.end24
  %tmp28 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp28, i32 0, i32 5
  %tmp29 = load i8*, i8** %stale, align 8
  %cmp32 = icmp ne i8* %tmp29, null
  br i1 %cmp32, label %if.then33, label %if.end38

if.then33:                                        ; preds = %if.end31
  %tmp30 = load i64, i64* %len, align 8
  %tmp31 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale34 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp31, i32 0, i32 5
  %tmp32 = load i8*, i8** %stale34, align 8
  %call35 = call i64 @strlen(i8* %tmp32) #7
  %add36 = add i64 %tmp30, %call35
  %add37 = add i64 %add36, 8
  store i64 %add37, i64* %len, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %if.end31
  %tmp33 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp33, i32 0, i32 6
  %tmp34 = load i8*, i8** %algorithm, align 8
  %cmp39 = icmp ne i8* %tmp34, null
  br i1 %cmp39, label %if.then40, label %if.end45

if.then40:                                        ; preds = %if.end38
  %tmp35 = load i64, i64* %len, align 8
  %tmp36 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm41 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp36, i32 0, i32 6
  %tmp37 = load i8*, i8** %algorithm41, align 8
  %call42 = call i64 @strlen(i8* %tmp37) #7
  %add43 = add i64 %tmp35, %call42
  %add44 = add i64 %add43, 12
  store i64 %add44, i64* %len, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then40, %if.end38
  %tmp38 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp38, i32 0, i32 7
  %tmp39 = load i8*, i8** %qop_options, align 8
  %cmp46 = icmp ne i8* %tmp39, null
  br i1 %cmp46, label %if.then47, label %if.end52

if.then47:                                        ; preds = %if.end45
  %tmp40 = load i64, i64* %len, align 8
  %tmp41 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options48 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp41, i32 0, i32 7
  %tmp42 = load i8*, i8** %qop_options48, align 8
  %call49 = call i64 @strlen(i8* %tmp42) #7
  %add50 = add i64 %tmp40, %call49
  %add51 = add i64 %add50, 6
  store i64 %add51, i64* %len, align 8
  br label %if.end52

if.end52:                                         ; preds = %if.then47, %if.end45
  %tmp43 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp43, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end52
  %tmp44 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp45 = load i64, i64* %len, align 8
  %call53 = call i8* %tmp44(i64 %tmp45)
  br label %cond.end

cond.false:                                       ; preds = %if.end52
  %tmp46 = load i64, i64* %len, align 8
  %call54 = call noalias i8* @malloc(i64 %tmp46) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call53, %cond.true ], [ %call54, %cond.false ]
  store i8* %cond, i8** %tmp, align 8
  %tmp47 = load i8*, i8** %tmp, align 8
  %cmp55 = icmp eq i8* %tmp47, null
  br i1 %cmp55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end57:                                         ; preds = %cond.end
  %tmp48 = load i8*, i8** %tmp, align 8
  %tmp49 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp48, i8** %tmp49, align 8
  %tmp50 = load i8*, i8** %tmp, align 8
  %tmp51 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type58 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp51, i32 0, i32 0
  %tmp52 = load i8*, i8** %auth_type58, align 8
  %call59 = call i8* @osip_str_append(i8* %tmp50, i8* %tmp52)
  store i8* %call59, i8** %tmp, align 8
  %tmp53 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm60 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp53, i32 0, i32 1
  %tmp54 = load i8*, i8** %realm60, align 8
  %cmp61 = icmp ne i8* %tmp54, null
  br i1 %cmp61, label %if.then62, label %if.end66

if.then62:                                        ; preds = %if.end57
  %tmp55 = load i8*, i8** %tmp, align 8
  %call63 = call i8* @osip_strn_append(i8* %tmp55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str7421, i32 0, i32 0), i64 7)
  store i8* %call63, i8** %tmp, align 8
  %tmp56 = load i8*, i8** %tmp, align 8
  %tmp57 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm64 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp57, i32 0, i32 1
  %tmp58 = load i8*, i8** %realm64, align 8
  %call65 = call i8* @osip_str_append(i8* %tmp56, i8* %tmp58)
  store i8* %call65, i8** %tmp, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.then62, %if.end57
  %tmp59 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain67 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp59, i32 0, i32 2
  %tmp60 = load i8*, i8** %domain67, align 8
  %cmp68 = icmp ne i8* %tmp60, null
  br i1 %cmp68, label %if.then69, label %if.end73

if.then69:                                        ; preds = %if.end66
  %tmp61 = load i8*, i8** %tmp, align 8
  %call70 = call i8* @osip_strn_append(i8* %tmp61, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str8422, i32 0, i32 0), i64 9)
  store i8* %call70, i8** %tmp, align 8
  %tmp62 = load i8*, i8** %tmp, align 8
  %tmp63 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain71 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp63, i32 0, i32 2
  %tmp64 = load i8*, i8** %domain71, align 8
  %call72 = call i8* @osip_str_append(i8* %tmp62, i8* %tmp64)
  store i8* %call72, i8** %tmp, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.then69, %if.end66
  %tmp65 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce74 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp65, i32 0, i32 3
  %tmp66 = load i8*, i8** %nonce74, align 8
  %cmp75 = icmp ne i8* %tmp66, null
  br i1 %cmp75, label %if.then76, label %if.end80

if.then76:                                        ; preds = %if.end73
  %tmp67 = load i8*, i8** %tmp, align 8
  %call77 = call i8* @osip_strn_append(i8* %tmp67, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str9423, i32 0, i32 0), i64 8)
  store i8* %call77, i8** %tmp, align 8
  %tmp68 = load i8*, i8** %tmp, align 8
  %tmp69 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce78 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp69, i32 0, i32 3
  %tmp70 = load i8*, i8** %nonce78, align 8
  %call79 = call i8* @osip_str_append(i8* %tmp68, i8* %tmp70)
  store i8* %call79, i8** %tmp, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then76, %if.end73
  %tmp71 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque81 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp71, i32 0, i32 4
  %tmp72 = load i8*, i8** %opaque81, align 8
  %cmp82 = icmp ne i8* %tmp72, null
  br i1 %cmp82, label %if.then83, label %if.end87

if.then83:                                        ; preds = %if.end80
  %tmp73 = load i8*, i8** %tmp, align 8
  %call84 = call i8* @osip_strn_append(i8* %tmp73, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str10424, i32 0, i32 0), i64 9)
  store i8* %call84, i8** %tmp, align 8
  %tmp74 = load i8*, i8** %tmp, align 8
  %tmp75 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque85 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp75, i32 0, i32 4
  %tmp76 = load i8*, i8** %opaque85, align 8
  %call86 = call i8* @osip_str_append(i8* %tmp74, i8* %tmp76)
  store i8* %call86, i8** %tmp, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.then83, %if.end80
  %tmp77 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale88 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp77, i32 0, i32 5
  %tmp78 = load i8*, i8** %stale88, align 8
  %cmp89 = icmp ne i8* %tmp78, null
  br i1 %cmp89, label %if.then90, label %if.end94

if.then90:                                        ; preds = %if.end87
  %tmp79 = load i8*, i8** %tmp, align 8
  %call91 = call i8* @osip_strn_append(i8* %tmp79, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str11425, i32 0, i32 0), i64 8)
  store i8* %call91, i8** %tmp, align 8
  %tmp80 = load i8*, i8** %tmp, align 8
  %tmp81 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale92 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp81, i32 0, i32 5
  %tmp82 = load i8*, i8** %stale92, align 8
  %call93 = call i8* @osip_str_append(i8* %tmp80, i8* %tmp82)
  store i8* %call93, i8** %tmp, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then90, %if.end87
  %tmp83 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm95 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp83, i32 0, i32 6
  %tmp84 = load i8*, i8** %algorithm95, align 8
  %cmp96 = icmp ne i8* %tmp84, null
  br i1 %cmp96, label %if.then97, label %if.end101

if.then97:                                        ; preds = %if.end94
  %tmp85 = load i8*, i8** %tmp, align 8
  %call98 = call i8* @osip_strn_append(i8* %tmp85, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str12426, i32 0, i32 0), i64 12)
  store i8* %call98, i8** %tmp, align 8
  %tmp86 = load i8*, i8** %tmp, align 8
  %tmp87 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm99 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp87, i32 0, i32 6
  %tmp88 = load i8*, i8** %algorithm99, align 8
  %call100 = call i8* @osip_str_append(i8* %tmp86, i8* %tmp88)
  store i8* %call100, i8** %tmp, align 8
  br label %if.end101

if.end101:                                        ; preds = %if.then97, %if.end94
  %tmp89 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options102 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp89, i32 0, i32 7
  %tmp90 = load i8*, i8** %qop_options102, align 8
  %cmp103 = icmp ne i8* %tmp90, null
  br i1 %cmp103, label %if.then104, label %if.end108

if.then104:                                       ; preds = %if.end101
  %tmp91 = load i8*, i8** %tmp, align 8
  %call105 = call i8* @osip_strn_append(i8* %tmp91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str13427, i32 0, i32 0), i64 6)
  store i8* %call105, i8** %tmp, align 8
  %tmp92 = load i8*, i8** %tmp, align 8
  %tmp93 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options106 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp93, i32 0, i32 7
  %tmp94 = load i8*, i8** %qop_options106, align 8
  %call107 = call i8* @osip_str_append(i8* %tmp92, i8* %tmp94)
  store i8* %call107, i8** %tmp, align 8
  br label %if.end108

if.end108:                                        ; preds = %if.then104, %if.end101
  %tmp95 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm109 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp95, i32 0, i32 1
  %tmp96 = load i8*, i8** %realm109, align 8
  %cmp110 = icmp eq i8* %tmp96, null
  br i1 %cmp110, label %if.then111, label %if.end119

if.then111:                                       ; preds = %if.end108
  %tmp97 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type112 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp97, i32 0, i32 0
  %tmp98 = load i8*, i8** %auth_type112, align 8
  %call113 = call i64 @strlen(i8* %tmp98) #7
  store i64 %call113, i64* %len, align 8
  %tmp99 = load i64, i64* %len, align 8
  %tmp100 = load i8**, i8*** %dest.addr, align 8
  %tmp101 = load i8*, i8** %tmp100, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp101, i64 %tmp99
  %tmp102 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp102 to i32
  %cmp114 = icmp eq i32 %conv, 44
  br i1 %cmp114, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.then111
  %tmp103 = load i64, i64* %len, align 8
  %tmp104 = load i8**, i8*** %dest.addr, align 8
  %tmp105 = load i8*, i8** %tmp104, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %tmp105, i64 %tmp103
  store i8 32, i8* %arrayidx117, align 1
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %if.then111
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end108
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end119, %if.then56, %if.then
  %tmp106 = load i32, i32* %retval
  ret i32 %tmp106
}

; Function Attrs: nounwind uwtable
define i32 @osip_www_authenticate_clone(%struct.osip_www_authenticate* %wwwa, %struct.osip_www_authenticate** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %wwwa.addr = alloca %struct.osip_www_authenticate*, align 8
  %dest.addr = alloca %struct.osip_www_authenticate**, align 8
  %i = alloca i32, align 4
  %wa = alloca %struct.osip_www_authenticate*, align 8
  store %struct.osip_www_authenticate* %wwwa, %struct.osip_www_authenticate** %wwwa.addr, align 8
  store %struct.osip_www_authenticate** %dest, %struct.osip_www_authenticate*** %dest.addr, align 8
  %tmp = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* null, %struct.osip_www_authenticate** %tmp, align 8
  %tmp1 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %cmp = icmp eq %struct.osip_www_authenticate* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %auth_type, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call i32 @osip_www_authenticate_init(%struct.osip_www_authenticate** %wa)
  store i32 %call, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type7 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %auth_type7, align 8
  %call8 = call i8* @osip_strdup(i8* %tmp7)
  %tmp8 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %auth_type9 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp8, i32 0, i32 0
  store i8* %call8, i8** %auth_type9, align 8
  %tmp9 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %auth_type10 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %auth_type10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end6
  %tmp11 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %auth_type12 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp11, i32 0, i32 0
  %tmp12 = load i8*, i8** %auth_type12, align 8
  %cmp13 = icmp ne i8* %tmp12, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true
  %tmp13 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp13)
  store i32 -4, i32* %retval
  br label %return

if.end15:                                         ; preds = %land.lhs.true, %if.end6
  %tmp14 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp14, i32 0, i32 1
  %tmp15 = load i8*, i8** %realm, align 8
  %cmp16 = icmp ne i8* %tmp15, null
  br i1 %cmp16, label %if.then17, label %if.end21

if.then17:                                        ; preds = %if.end15
  %tmp16 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm18 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp16, i32 0, i32 1
  %tmp17 = load i8*, i8** %realm18, align 8
  %call19 = call i8* @osip_strdup(i8* %tmp17)
  %tmp18 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %realm20 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp18, i32 0, i32 1
  store i8* %call19, i8** %realm20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.end15
  %tmp19 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %realm22 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp19, i32 0, i32 1
  %tmp20 = load i8*, i8** %realm22, align 8
  %cmp23 = icmp eq i8* %tmp20, null
  br i1 %cmp23, label %land.lhs.true24, label %if.end28

land.lhs.true24:                                  ; preds = %if.end21
  %tmp21 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %realm25 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp21, i32 0, i32 1
  %tmp22 = load i8*, i8** %realm25, align 8
  %cmp26 = icmp ne i8* %tmp22, null
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %land.lhs.true24
  %tmp23 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp23)
  store i32 -4, i32* %retval
  br label %return

if.end28:                                         ; preds = %land.lhs.true24, %if.end21
  %tmp24 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp24, i32 0, i32 2
  %tmp25 = load i8*, i8** %domain, align 8
  %cmp29 = icmp ne i8* %tmp25, null
  br i1 %cmp29, label %if.then30, label %if.end34

if.then30:                                        ; preds = %if.end28
  %tmp26 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain31 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp26, i32 0, i32 2
  %tmp27 = load i8*, i8** %domain31, align 8
  %call32 = call i8* @osip_strdup(i8* %tmp27)
  %tmp28 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %domain33 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp28, i32 0, i32 2
  store i8* %call32, i8** %domain33, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.end28
  %tmp29 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %domain35 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp29, i32 0, i32 2
  %tmp30 = load i8*, i8** %domain35, align 8
  %cmp36 = icmp eq i8* %tmp30, null
  br i1 %cmp36, label %land.lhs.true37, label %if.end41

land.lhs.true37:                                  ; preds = %if.end34
  %tmp31 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %domain38 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp31, i32 0, i32 2
  %tmp32 = load i8*, i8** %domain38, align 8
  %cmp39 = icmp ne i8* %tmp32, null
  br i1 %cmp39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %land.lhs.true37
  %tmp33 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp33)
  store i32 -4, i32* %retval
  br label %return

if.end41:                                         ; preds = %land.lhs.true37, %if.end34
  %tmp34 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp34, i32 0, i32 3
  %tmp35 = load i8*, i8** %nonce, align 8
  %cmp42 = icmp ne i8* %tmp35, null
  br i1 %cmp42, label %if.then43, label %if.end47

if.then43:                                        ; preds = %if.end41
  %tmp36 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce44 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp36, i32 0, i32 3
  %tmp37 = load i8*, i8** %nonce44, align 8
  %call45 = call i8* @osip_strdup(i8* %tmp37)
  %tmp38 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %nonce46 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp38, i32 0, i32 3
  store i8* %call45, i8** %nonce46, align 8
  br label %if.end47

if.end47:                                         ; preds = %if.then43, %if.end41
  %tmp39 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %nonce48 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp39, i32 0, i32 3
  %tmp40 = load i8*, i8** %nonce48, align 8
  %cmp49 = icmp eq i8* %tmp40, null
  br i1 %cmp49, label %land.lhs.true50, label %if.end54

land.lhs.true50:                                  ; preds = %if.end47
  %tmp41 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %nonce51 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp41, i32 0, i32 3
  %tmp42 = load i8*, i8** %nonce51, align 8
  %cmp52 = icmp ne i8* %tmp42, null
  br i1 %cmp52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %land.lhs.true50
  %tmp43 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp43)
  store i32 -4, i32* %retval
  br label %return

if.end54:                                         ; preds = %land.lhs.true50, %if.end47
  %tmp44 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp44, i32 0, i32 4
  %tmp45 = load i8*, i8** %opaque, align 8
  %cmp55 = icmp ne i8* %tmp45, null
  br i1 %cmp55, label %if.then56, label %if.end60

if.then56:                                        ; preds = %if.end54
  %tmp46 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque57 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp46, i32 0, i32 4
  %tmp47 = load i8*, i8** %opaque57, align 8
  %call58 = call i8* @osip_strdup(i8* %tmp47)
  %tmp48 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %opaque59 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp48, i32 0, i32 4
  store i8* %call58, i8** %opaque59, align 8
  br label %if.end60

if.end60:                                         ; preds = %if.then56, %if.end54
  %tmp49 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %opaque61 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp49, i32 0, i32 4
  %tmp50 = load i8*, i8** %opaque61, align 8
  %cmp62 = icmp eq i8* %tmp50, null
  br i1 %cmp62, label %land.lhs.true63, label %if.end67

land.lhs.true63:                                  ; preds = %if.end60
  %tmp51 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %opaque64 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp51, i32 0, i32 4
  %tmp52 = load i8*, i8** %opaque64, align 8
  %cmp65 = icmp ne i8* %tmp52, null
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %land.lhs.true63
  %tmp53 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp53)
  store i32 -4, i32* %retval
  br label %return

if.end67:                                         ; preds = %land.lhs.true63, %if.end60
  %tmp54 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp54, i32 0, i32 5
  %tmp55 = load i8*, i8** %stale, align 8
  %cmp68 = icmp ne i8* %tmp55, null
  br i1 %cmp68, label %if.then69, label %if.end73

if.then69:                                        ; preds = %if.end67
  %tmp56 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale70 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp56, i32 0, i32 5
  %tmp57 = load i8*, i8** %stale70, align 8
  %call71 = call i8* @osip_strdup(i8* %tmp57)
  %tmp58 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %stale72 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp58, i32 0, i32 5
  store i8* %call71, i8** %stale72, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.then69, %if.end67
  %tmp59 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %stale74 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp59, i32 0, i32 5
  %tmp60 = load i8*, i8** %stale74, align 8
  %cmp75 = icmp eq i8* %tmp60, null
  br i1 %cmp75, label %land.lhs.true76, label %if.end80

land.lhs.true76:                                  ; preds = %if.end73
  %tmp61 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %stale77 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp61, i32 0, i32 5
  %tmp62 = load i8*, i8** %stale77, align 8
  %cmp78 = icmp ne i8* %tmp62, null
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %land.lhs.true76
  %tmp63 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp63)
  store i32 -4, i32* %retval
  br label %return

if.end80:                                         ; preds = %land.lhs.true76, %if.end73
  %tmp64 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp64, i32 0, i32 6
  %tmp65 = load i8*, i8** %algorithm, align 8
  %cmp81 = icmp ne i8* %tmp65, null
  br i1 %cmp81, label %if.then82, label %if.end86

if.then82:                                        ; preds = %if.end80
  %tmp66 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm83 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp66, i32 0, i32 6
  %tmp67 = load i8*, i8** %algorithm83, align 8
  %call84 = call i8* @osip_strdup(i8* %tmp67)
  %tmp68 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %algorithm85 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp68, i32 0, i32 6
  store i8* %call84, i8** %algorithm85, align 8
  br label %if.end86

if.end86:                                         ; preds = %if.then82, %if.end80
  %tmp69 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %algorithm87 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp69, i32 0, i32 6
  %tmp70 = load i8*, i8** %algorithm87, align 8
  %cmp88 = icmp eq i8* %tmp70, null
  br i1 %cmp88, label %land.lhs.true89, label %if.end93

land.lhs.true89:                                  ; preds = %if.end86
  %tmp71 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %algorithm90 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp71, i32 0, i32 6
  %tmp72 = load i8*, i8** %algorithm90, align 8
  %cmp91 = icmp ne i8* %tmp72, null
  br i1 %cmp91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %land.lhs.true89
  %tmp73 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp73)
  store i32 -4, i32* %retval
  br label %return

if.end93:                                         ; preds = %land.lhs.true89, %if.end86
  %tmp74 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp74, i32 0, i32 7
  %tmp75 = load i8*, i8** %qop_options, align 8
  %cmp94 = icmp ne i8* %tmp75, null
  br i1 %cmp94, label %if.then95, label %if.end99

if.then95:                                        ; preds = %if.end93
  %tmp76 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options96 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp76, i32 0, i32 7
  %tmp77 = load i8*, i8** %qop_options96, align 8
  %call97 = call i8* @osip_strdup(i8* %tmp77)
  %tmp78 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %qop_options98 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp78, i32 0, i32 7
  store i8* %call97, i8** %qop_options98, align 8
  br label %if.end99

if.end99:                                         ; preds = %if.then95, %if.end93
  %tmp79 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %qop_options100 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp79, i32 0, i32 7
  %tmp80 = load i8*, i8** %qop_options100, align 8
  %cmp101 = icmp eq i8* %tmp80, null
  br i1 %cmp101, label %land.lhs.true102, label %if.end106

land.lhs.true102:                                 ; preds = %if.end99
  %tmp81 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wwwa.addr, align 8
  %qop_options103 = getelementptr inbounds %struct.osip_www_authenticate, %struct.osip_www_authenticate* %tmp81, i32 0, i32 7
  %tmp82 = load i8*, i8** %qop_options103, align 8
  %cmp104 = icmp ne i8* %tmp82, null
  br i1 %cmp104, label %if.then105, label %if.end106

if.then105:                                       ; preds = %land.lhs.true102
  %tmp83 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  call void @osip_www_authenticate_free(%struct.osip_www_authenticate* %tmp83)
  store i32 -4, i32* %retval
  br label %return

if.end106:                                        ; preds = %land.lhs.true102, %if.end99
  %tmp84 = load %struct.osip_www_authenticate*, %struct.osip_www_authenticate** %wa, align 8
  %tmp85 = load %struct.osip_www_authenticate**, %struct.osip_www_authenticate*** %dest.addr, align 8
  store %struct.osip_www_authenticate* %tmp84, %struct.osip_www_authenticate** %tmp85, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end106, %if.then105, %if.then92, %if.then79, %if.then66, %if.then53, %if.then40, %if.then27, %if.then14, %if.then5, %if.then2, %if.then
  %tmp86 = load i32, i32* %retval
  ret i32 %tmp86
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_via(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %via = alloca %struct.osip_via*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp1, i64 0
  %tmp2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %tmp2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_via_init(%struct.osip_via** %via)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp3 = icmp ne i32 %tmp3, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %tmp6 = load i8*, i8** %hvalue.addr, align 8
  %call7 = call i32 @osip_via_parse(%struct.osip_via* %tmp5, i8* %tmp6)
  store i32 %call7, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp8 = icmp ne i32 %tmp7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  %tmp8 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  call void @osip_via_free(%struct.osip_via* %tmp8)
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end11:                                         ; preds = %if.end6
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp11 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp11, i32 0, i32 28
  %tmp12 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %tmp13 = bitcast %struct.osip_via* %tmp12 to i8*
  %call12 = call i32 @osip_list_add(%struct.osip_list* %vias, i8* %tmp13, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %tmp14 = load i32, i32* %retval
  ret i32 %tmp14
}

; Function Attrs: nounwind uwtable
define i32 @osip_via_init(%struct.osip_via** %via) #0 {
entry:
  %retval = alloca i32, align 4
  %via.addr = alloca %struct.osip_via**, align 8
  store %struct.osip_via** %via, %struct.osip_via*** %via.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 56)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 56) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_via*
  %tmp3 = load %struct.osip_via**, %struct.osip_via*** %via.addr, align 8
  store %struct.osip_via* %tmp2, %struct.osip_via** %tmp3, align 8
  %tmp4 = load %struct.osip_via**, %struct.osip_via*** %via.addr, align 8
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %tmp4, align 8
  %cmp = icmp eq %struct.osip_via* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_via**, %struct.osip_via*** %via.addr, align 8
  %tmp7 = load %struct.osip_via*, %struct.osip_via** %tmp6, align 8
  %tmp8 = bitcast %struct.osip_via* %tmp7 to i8*
  call void @llvm.memset.p0i8.i64(i8* %tmp8, i8 0, i64 56, i32 8, i1 false)
  %tmp9 = load %struct.osip_via**, %struct.osip_via*** %via.addr, align 8
  %tmp10 = load %struct.osip_via*, %struct.osip_via** %tmp9, align 8
  %via_params = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp10, i32 0, i32 5
  %call2 = call i32 @osip_list_init(%struct.osip_list* %via_params)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define i32 @osip_via_parse(%struct.osip_via* %via, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %via.addr = alloca %struct.osip_via*, align 8
  %hvalue.addr = alloca i8*, align 8
  %version = alloca i8*, align 8
  %protocol = alloca i8*, align 8
  %host = alloca i8*, align 8
  %ipv6host = alloca i8*, align 8
  %port = alloca i8*, align 8
  %via_params = alloca i8*, align 8
  %comment = alloca i8*, align 8
  %i = alloca i32, align 4
  %end_comment = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %cmp = icmp eq i8* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %call = call i8* @strchr(i8* %tmp2, i32 47) #7
  store i8* %call, i8** %version, align 8
  %tmp3 = load i8*, i8** %version, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -5, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load i8*, i8** %version, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp4, i64 1
  %call4 = call i8* @strchr(i8* %add.ptr, i32 47) #7
  store i8* %call4, i8** %protocol, align 8
  %tmp5 = load i8*, i8** %protocol, align 8
  %cmp5 = icmp eq i8* %tmp5, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -5, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end3
  %tmp6 = load i8*, i8** %protocol, align 8
  %tmp7 = load i8*, i8** %version, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp6 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp8 = icmp slt i64 %sub.ptr.sub, 2
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end7
  store i32 -5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end7
  %tmp8 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp8, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end10
  %tmp9 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp10 = load i8*, i8** %protocol, align 8
  %tmp11 = load i8*, i8** %version, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %tmp10 to i64
  %sub.ptr.rhs.cast12 = ptrtoint i8* %tmp11 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %call14 = call i8* %tmp9(i64 %sub.ptr.sub13)
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  %tmp12 = load i8*, i8** %protocol, align 8
  %tmp13 = load i8*, i8** %version, align 8
  %sub.ptr.lhs.cast15 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast16 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16
  %call18 = call noalias i8* @malloc(i64 %sub.ptr.sub17) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call14, %cond.true ], [ %call18, %cond.false ]
  %tmp14 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version19 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp14, i32 0, i32 0
  store i8* %cond, i8** %version19, align 8
  %tmp15 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version20 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %version20, align 8
  %cmp21 = icmp eq i8* %tmp16, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end23:                                         ; preds = %cond.end
  %tmp17 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version24 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp17, i32 0, i32 0
  %tmp18 = load i8*, i8** %version24, align 8
  %tmp19 = load i8*, i8** %version, align 8
  %add.ptr25 = getelementptr inbounds i8, i8* %tmp19, i64 1
  %tmp20 = load i8*, i8** %protocol, align 8
  %tmp21 = load i8*, i8** %version, align 8
  %sub.ptr.lhs.cast26 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %sub = sub nsw i64 %sub.ptr.sub28, 1
  %call29 = call i8* @osip_clrncpy(i8* %tmp18, i8* %add.ptr25, i64 %sub)
  %tmp22 = load i8*, i8** %protocol, align 8
  %add.ptr30 = getelementptr inbounds i8, i8* %tmp22, i64 1
  %call31 = call i8* @strchr(i8* %add.ptr30, i32 32) #7
  store i8* %call31, i8** %host, align 8
  %tmp23 = load i8*, i8** %host, align 8
  %cmp32 = icmp eq i8* %tmp23, null
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end23
  store i32 -5, i32* %retval
  br label %return

if.end34:                                         ; preds = %if.end23
  %tmp24 = load i8*, i8** %host, align 8
  %tmp25 = load i8*, i8** %protocol, align 8
  %add.ptr35 = getelementptr inbounds i8, i8* %tmp25, i64 1
  %cmp36 = icmp eq i8* %tmp24, %add.ptr35
  br i1 %cmp36, label %if.then37, label %if.end49

if.then37:                                        ; preds = %if.end34
  br label %while.cond

while.cond:                                       ; preds = %if.end43, %if.then37
  %tmp26 = load i8*, i8** %host, align 8
  %call38 = call i32 @strncmp(i8* %tmp26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str444, i32 0, i32 0), i64 1) #7
  %cmp39 = icmp eq i32 0, %call38
  br i1 %cmp39, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp27 = load i8*, i8** %host, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %tmp27, i32 1
  store i8* %incdec.ptr, i8** %host, align 8
  %tmp28 = load i8*, i8** %host, align 8
  %call40 = call i64 @strlen(i8* %tmp28) #7
  %cmp41 = icmp eq i64 %call40, 1
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %while.body
  store i32 -5, i32* %retval
  br label %return

if.end43:                                         ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp29 = load i8*, i8** %host, align 8
  %add.ptr44 = getelementptr inbounds i8, i8* %tmp29, i64 1
  %call45 = call i8* @strchr(i8* %add.ptr44, i32 32) #7
  store i8* %call45, i8** %host, align 8
  %tmp30 = load i8*, i8** %host, align 8
  %cmp46 = icmp eq i8* %tmp30, null
  br i1 %cmp46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %while.end
  store i32 -5, i32* %retval
  br label %return

if.end48:                                         ; preds = %while.end
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end34
  %tmp31 = load i8*, i8** %host, align 8
  %tmp32 = load i8*, i8** %protocol, align 8
  %sub.ptr.lhs.cast50 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.rhs.cast51 = ptrtoint i8* %tmp32 to i64
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51
  %cmp53 = icmp slt i64 %sub.ptr.sub52, 2
  br i1 %cmp53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end49
  store i32 -5, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.end49
  %tmp33 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool56 = icmp ne i8* (i64)* %tmp33, null
  br i1 %tobool56, label %cond.true57, label %cond.false62

cond.true57:                                      ; preds = %if.end55
  %tmp34 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp35 = load i8*, i8** %host, align 8
  %tmp36 = load i8*, i8** %protocol, align 8
  %sub.ptr.lhs.cast58 = ptrtoint i8* %tmp35 to i64
  %sub.ptr.rhs.cast59 = ptrtoint i8* %tmp36 to i64
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59
  %call61 = call i8* %tmp34(i64 %sub.ptr.sub60)
  br label %cond.end67

cond.false62:                                     ; preds = %if.end55
  %tmp37 = load i8*, i8** %host, align 8
  %tmp38 = load i8*, i8** %protocol, align 8
  %sub.ptr.lhs.cast63 = ptrtoint i8* %tmp37 to i64
  %sub.ptr.rhs.cast64 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.sub65 = sub i64 %sub.ptr.lhs.cast63, %sub.ptr.rhs.cast64
  %call66 = call noalias i8* @malloc(i64 %sub.ptr.sub65) #8
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false62, %cond.true57
  %cond68 = phi i8* [ %call61, %cond.true57 ], [ %call66, %cond.false62 ]
  %tmp39 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol69 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp39, i32 0, i32 1
  store i8* %cond68, i8** %protocol69, align 8
  %tmp40 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol70 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %protocol70, align 8
  %cmp71 = icmp eq i8* %tmp41, null
  br i1 %cmp71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %cond.end67
  store i32 -4, i32* %retval
  br label %return

if.end73:                                         ; preds = %cond.end67
  %tmp42 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol74 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp42, i32 0, i32 1
  %tmp43 = load i8*, i8** %protocol74, align 8
  %tmp44 = load i8*, i8** %protocol, align 8
  %add.ptr75 = getelementptr inbounds i8, i8* %tmp44, i64 1
  %tmp45 = load i8*, i8** %host, align 8
  %tmp46 = load i8*, i8** %protocol, align 8
  %sub.ptr.lhs.cast76 = ptrtoint i8* %tmp45 to i64
  %sub.ptr.rhs.cast77 = ptrtoint i8* %tmp46 to i64
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77
  %sub79 = sub nsw i64 %sub.ptr.sub78, 1
  %call80 = call i8* @osip_clrncpy(i8* %tmp43, i8* %add.ptr75, i64 %sub79)
  %tmp47 = load i8*, i8** %host, align 8
  %call81 = call i8* @strchr(i8* %tmp47, i32 40) #7
  store i8* %call81, i8** %comment, align 8
  %tmp48 = load i8*, i8** %comment, align 8
  %cmp82 = icmp ne i8* %tmp48, null
  br i1 %cmp82, label %if.then83, label %if.else

if.then83:                                        ; preds = %if.end73
  %tmp49 = load i8*, i8** %host, align 8
  %call84 = call i8* @strchr(i8* %tmp49, i32 41) #7
  store i8* %call84, i8** %end_comment, align 8
  %tmp50 = load i8*, i8** %end_comment, align 8
  %cmp85 = icmp eq i8* %tmp50, null
  br i1 %cmp85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.then83
  store i32 -5, i32* %retval
  br label %return

if.end87:                                         ; preds = %if.then83
  %tmp51 = load i8*, i8** %end_comment, align 8
  %tmp52 = load i8*, i8** %comment, align 8
  %sub.ptr.lhs.cast88 = ptrtoint i8* %tmp51 to i64
  %sub.ptr.rhs.cast89 = ptrtoint i8* %tmp52 to i64
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89
  %cmp91 = icmp slt i64 %sub.ptr.sub90, 2
  br i1 %cmp91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.end87
  store i32 -5, i32* %retval
  br label %return

if.end93:                                         ; preds = %if.end87
  %tmp53 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool94 = icmp ne i8* (i64)* %tmp53, null
  br i1 %tobool94, label %cond.true95, label %cond.false100

cond.true95:                                      ; preds = %if.end93
  %tmp54 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp55 = load i8*, i8** %end_comment, align 8
  %tmp56 = load i8*, i8** %comment, align 8
  %sub.ptr.lhs.cast96 = ptrtoint i8* %tmp55 to i64
  %sub.ptr.rhs.cast97 = ptrtoint i8* %tmp56 to i64
  %sub.ptr.sub98 = sub i64 %sub.ptr.lhs.cast96, %sub.ptr.rhs.cast97
  %call99 = call i8* %tmp54(i64 %sub.ptr.sub98)
  br label %cond.end105

cond.false100:                                    ; preds = %if.end93
  %tmp57 = load i8*, i8** %end_comment, align 8
  %tmp58 = load i8*, i8** %comment, align 8
  %sub.ptr.lhs.cast101 = ptrtoint i8* %tmp57 to i64
  %sub.ptr.rhs.cast102 = ptrtoint i8* %tmp58 to i64
  %sub.ptr.sub103 = sub i64 %sub.ptr.lhs.cast101, %sub.ptr.rhs.cast102
  %call104 = call noalias i8* @malloc(i64 %sub.ptr.sub103) #8
  br label %cond.end105

cond.end105:                                      ; preds = %cond.false100, %cond.true95
  %cond106 = phi i8* [ %call99, %cond.true95 ], [ %call104, %cond.false100 ]
  %tmp59 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment107 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp59, i32 0, i32 4
  store i8* %cond106, i8** %comment107, align 8
  %tmp60 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment108 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp60, i32 0, i32 4
  %tmp61 = load i8*, i8** %comment108, align 8
  %cmp109 = icmp eq i8* %tmp61, null
  br i1 %cmp109, label %if.then110, label %if.end111

if.then110:                                       ; preds = %cond.end105
  store i32 -4, i32* %retval
  br label %return

if.end111:                                        ; preds = %cond.end105
  %tmp62 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment112 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp62, i32 0, i32 4
  %tmp63 = load i8*, i8** %comment112, align 8
  %tmp64 = load i8*, i8** %comment, align 8
  %add.ptr113 = getelementptr inbounds i8, i8* %tmp64, i64 1
  %tmp65 = load i8*, i8** %end_comment, align 8
  %tmp66 = load i8*, i8** %comment, align 8
  %sub.ptr.lhs.cast114 = ptrtoint i8* %tmp65 to i64
  %sub.ptr.rhs.cast115 = ptrtoint i8* %tmp66 to i64
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115
  %sub117 = sub nsw i64 %sub.ptr.sub116, 1
  %call118 = call i8* @osip_strncpy(i8* %tmp63, i8* %add.ptr113, i64 %sub117)
  %tmp67 = load i8*, i8** %comment, align 8
  %incdec.ptr119 = getelementptr inbounds i8, i8* %tmp67, i32 -1
  store i8* %incdec.ptr119, i8** %comment, align 8
  br label %if.end122

if.else:                                          ; preds = %if.end73
  %tmp68 = load i8*, i8** %host, align 8
  %tmp69 = load i8*, i8** %host, align 8
  %call120 = call i64 @strlen(i8* %tmp69) #7
  %add.ptr121 = getelementptr inbounds i8, i8* %tmp68, i64 %call120
  store i8* %add.ptr121, i8** %comment, align 8
  br label %if.end122

if.end122:                                        ; preds = %if.else, %if.end111
  %tmp70 = load i8*, i8** %host, align 8
  %call123 = call i8* @strchr(i8* %tmp70, i32 59) #7
  store i8* %call123, i8** %via_params, align 8
  %tmp71 = load i8*, i8** %via_params, align 8
  %cmp124 = icmp ne i8* %tmp71, null
  br i1 %cmp124, label %land.lhs.true, label %if.end174

land.lhs.true:                                    ; preds = %if.end122
  %tmp72 = load i8*, i8** %via_params, align 8
  %tmp73 = load i8*, i8** %comment, align 8
  %cmp125 = icmp ult i8* %tmp72, %tmp73
  br i1 %cmp125, label %if.then126, label %if.end174

if.then126:                                       ; preds = %land.lhs.true
  %tmp74 = load i8*, i8** %comment, align 8
  %tmp75 = load i8*, i8** %via_params, align 8
  %sub.ptr.lhs.cast127 = ptrtoint i8* %tmp74 to i64
  %sub.ptr.rhs.cast128 = ptrtoint i8* %tmp75 to i64
  %sub.ptr.sub129 = sub i64 %sub.ptr.lhs.cast127, %sub.ptr.rhs.cast128
  %add = add nsw i64 %sub.ptr.sub129, 1
  %cmp130 = icmp slt i64 %add, 2
  br i1 %cmp130, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.then126
  store i32 -5, i32* %retval
  br label %return

if.end132:                                        ; preds = %if.then126
  %tmp76 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool133 = icmp ne i8* (i64)* %tmp76, null
  br i1 %tobool133, label %cond.true134, label %cond.false140

cond.true134:                                     ; preds = %if.end132
  %tmp77 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp78 = load i8*, i8** %comment, align 8
  %tmp79 = load i8*, i8** %via_params, align 8
  %sub.ptr.lhs.cast135 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.rhs.cast136 = ptrtoint i8* %tmp79 to i64
  %sub.ptr.sub137 = sub i64 %sub.ptr.lhs.cast135, %sub.ptr.rhs.cast136
  %add138 = add nsw i64 %sub.ptr.sub137, 1
  %call139 = call i8* %tmp77(i64 %add138)
  br label %cond.end146

cond.false140:                                    ; preds = %if.end132
  %tmp80 = load i8*, i8** %comment, align 8
  %tmp81 = load i8*, i8** %via_params, align 8
  %sub.ptr.lhs.cast141 = ptrtoint i8* %tmp80 to i64
  %sub.ptr.rhs.cast142 = ptrtoint i8* %tmp81 to i64
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142
  %add144 = add nsw i64 %sub.ptr.sub143, 1
  %call145 = call noalias i8* @malloc(i64 %add144) #8
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false140, %cond.true134
  %cond147 = phi i8* [ %call139, %cond.true134 ], [ %call145, %cond.false140 ]
  store i8* %cond147, i8** %tmp, align 8
  %tmp82 = load i8*, i8** %tmp, align 8
  %cmp148 = icmp eq i8* %tmp82, null
  br i1 %cmp148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %cond.end146
  store i32 -4, i32* %retval
  br label %return

if.end150:                                        ; preds = %cond.end146
  %tmp83 = load i8*, i8** %tmp, align 8
  %tmp84 = load i8*, i8** %via_params, align 8
  %tmp85 = load i8*, i8** %comment, align 8
  %tmp86 = load i8*, i8** %via_params, align 8
  %sub.ptr.lhs.cast151 = ptrtoint i8* %tmp85 to i64
  %sub.ptr.rhs.cast152 = ptrtoint i8* %tmp86 to i64
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152
  %call154 = call i8* @osip_strncpy(i8* %tmp83, i8* %tmp84, i64 %sub.ptr.sub153)
  %tmp87 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %via_params155 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp87, i32 0, i32 5
  %tmp88 = load i8*, i8** %tmp, align 8
  %call156 = call i32 @__osip_generic_param_parseall(%struct.osip_list* %via_params155, i8* %tmp88)
  store i32 %call156, i32* %i, align 4
  %tmp89 = load i32, i32* %i, align 4
  %cmp157 = icmp ne i32 %tmp89, 0
  br i1 %cmp157, label %if.then158, label %if.end166

if.then158:                                       ; preds = %if.end150
  %tmp90 = load i8*, i8** %tmp, align 8
  %cmp159 = icmp ne i8* %tmp90, null
  br i1 %cmp159, label %if.then160, label %if.end165

if.then160:                                       ; preds = %if.then158
  %tmp91 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool161 = icmp ne void (i8*)* %tmp91, null
  br i1 %tobool161, label %if.then162, label %if.else163

if.then162:                                       ; preds = %if.then160
  %tmp92 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp93 = load i8*, i8** %tmp, align 8
  call void %tmp92(i8* %tmp93)
  br label %if.end164

if.else163:                                       ; preds = %if.then160
  %tmp94 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp94) #8
  br label %if.end164

if.end164:                                        ; preds = %if.else163, %if.then162
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then158
  %tmp95 = load i32, i32* %i, align 4
  store i32 %tmp95, i32* %retval
  br label %return

if.end166:                                        ; preds = %if.end150
  %tmp96 = load i8*, i8** %tmp, align 8
  %cmp167 = icmp ne i8* %tmp96, null
  br i1 %cmp167, label %if.then168, label %if.end173

if.then168:                                       ; preds = %if.end166
  %tmp97 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool169 = icmp ne void (i8*)* %tmp97, null
  br i1 %tobool169, label %if.then170, label %if.else171

if.then170:                                       ; preds = %if.then168
  %tmp98 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp99 = load i8*, i8** %tmp, align 8
  call void %tmp98(i8* %tmp99)
  br label %if.end172

if.else171:                                       ; preds = %if.then168
  %tmp100 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp100) #8
  br label %if.end172

if.end172:                                        ; preds = %if.else171, %if.then170
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end166
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %land.lhs.true, %if.end122
  %tmp101 = load i8*, i8** %via_params, align 8
  %cmp175 = icmp eq i8* %tmp101, null
  br i1 %cmp175, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.end174
  %tmp102 = load i8*, i8** %comment, align 8
  store i8* %tmp102, i8** %via_params, align 8
  br label %if.end177

if.end177:                                        ; preds = %if.then176, %if.end174
  %tmp103 = load i8*, i8** %host, align 8
  %call178 = call i8* @strchr(i8* %tmp103, i32 91) #7
  store i8* %call178, i8** %ipv6host, align 8
  %tmp104 = load i8*, i8** %ipv6host, align 8
  %cmp179 = icmp ne i8* %tmp104, null
  br i1 %cmp179, label %land.lhs.true180, label %if.else220

land.lhs.true180:                                 ; preds = %if.end177
  %tmp105 = load i8*, i8** %ipv6host, align 8
  %tmp106 = load i8*, i8** %via_params, align 8
  %cmp181 = icmp ult i8* %tmp105, %tmp106
  br i1 %cmp181, label %if.then182, label %if.else220

if.then182:                                       ; preds = %land.lhs.true180
  %tmp107 = load i8*, i8** %ipv6host, align 8
  %call183 = call i8* @strchr(i8* %tmp107, i32 93) #7
  store i8* %call183, i8** %port, align 8
  %tmp108 = load i8*, i8** %port, align 8
  %cmp184 = icmp eq i8* %tmp108, null
  br i1 %cmp184, label %if.then186, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then182
  %tmp109 = load i8*, i8** %port, align 8
  %tmp110 = load i8*, i8** %via_params, align 8
  %cmp185 = icmp ugt i8* %tmp109, %tmp110
  br i1 %cmp185, label %if.then186, label %if.end187

if.then186:                                       ; preds = %lor.lhs.false, %if.then182
  store i32 -5, i32* %retval
  br label %return

if.end187:                                        ; preds = %lor.lhs.false
  %tmp111 = load i8*, i8** %port, align 8
  %tmp112 = load i8*, i8** %ipv6host, align 8
  %sub.ptr.lhs.cast188 = ptrtoint i8* %tmp111 to i64
  %sub.ptr.rhs.cast189 = ptrtoint i8* %tmp112 to i64
  %sub.ptr.sub190 = sub i64 %sub.ptr.lhs.cast188, %sub.ptr.rhs.cast189
  %cmp191 = icmp slt i64 %sub.ptr.sub190, 2
  br i1 %cmp191, label %if.then192, label %if.end193

if.then192:                                       ; preds = %if.end187
  store i32 -5, i32* %retval
  br label %return

if.end193:                                        ; preds = %if.end187
  %tmp113 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool194 = icmp ne i8* (i64)* %tmp113, null
  br i1 %tobool194, label %cond.true195, label %cond.false200

cond.true195:                                     ; preds = %if.end193
  %tmp114 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp115 = load i8*, i8** %port, align 8
  %tmp116 = load i8*, i8** %ipv6host, align 8
  %sub.ptr.lhs.cast196 = ptrtoint i8* %tmp115 to i64
  %sub.ptr.rhs.cast197 = ptrtoint i8* %tmp116 to i64
  %sub.ptr.sub198 = sub i64 %sub.ptr.lhs.cast196, %sub.ptr.rhs.cast197
  %call199 = call i8* %tmp114(i64 %sub.ptr.sub198)
  br label %cond.end205

cond.false200:                                    ; preds = %if.end193
  %tmp117 = load i8*, i8** %port, align 8
  %tmp118 = load i8*, i8** %ipv6host, align 8
  %sub.ptr.lhs.cast201 = ptrtoint i8* %tmp117 to i64
  %sub.ptr.rhs.cast202 = ptrtoint i8* %tmp118 to i64
  %sub.ptr.sub203 = sub i64 %sub.ptr.lhs.cast201, %sub.ptr.rhs.cast202
  %call204 = call noalias i8* @malloc(i64 %sub.ptr.sub203) #8
  br label %cond.end205

cond.end205:                                      ; preds = %cond.false200, %cond.true195
  %cond206 = phi i8* [ %call199, %cond.true195 ], [ %call204, %cond.false200 ]
  %tmp119 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host207 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp119, i32 0, i32 2
  store i8* %cond206, i8** %host207, align 8
  %tmp120 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host208 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp120, i32 0, i32 2
  %tmp121 = load i8*, i8** %host208, align 8
  %cmp209 = icmp eq i8* %tmp121, null
  br i1 %cmp209, label %if.then210, label %if.end211

if.then210:                                       ; preds = %cond.end205
  store i32 -4, i32* %retval
  br label %return

if.end211:                                        ; preds = %cond.end205
  %tmp122 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host212 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp122, i32 0, i32 2
  %tmp123 = load i8*, i8** %host212, align 8
  %tmp124 = load i8*, i8** %ipv6host, align 8
  %add.ptr213 = getelementptr inbounds i8, i8* %tmp124, i64 1
  %tmp125 = load i8*, i8** %port, align 8
  %tmp126 = load i8*, i8** %ipv6host, align 8
  %sub.ptr.lhs.cast214 = ptrtoint i8* %tmp125 to i64
  %sub.ptr.rhs.cast215 = ptrtoint i8* %tmp126 to i64
  %sub.ptr.sub216 = sub i64 %sub.ptr.lhs.cast214, %sub.ptr.rhs.cast215
  %sub217 = sub nsw i64 %sub.ptr.sub216, 1
  %call218 = call i8* @osip_clrncpy(i8* %tmp123, i8* %add.ptr213, i64 %sub217)
  %tmp127 = load i8*, i8** %port, align 8
  %call219 = call i8* @strchr(i8* %tmp127, i32 58) #7
  store i8* %call219, i8** %port, align 8
  br label %if.end222

if.else220:                                       ; preds = %land.lhs.true180, %if.end177
  %tmp128 = load i8*, i8** %host, align 8
  %call221 = call i8* @strchr(i8* %tmp128, i32 58) #7
  store i8* %call221, i8** %port, align 8
  store i8* null, i8** %ipv6host, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.else220, %if.end211
  %tmp129 = load i8*, i8** %port, align 8
  %cmp223 = icmp ne i8* %tmp129, null
  br i1 %cmp223, label %land.lhs.true224, label %if.else258

land.lhs.true224:                                 ; preds = %if.end222
  %tmp130 = load i8*, i8** %port, align 8
  %tmp131 = load i8*, i8** %via_params, align 8
  %cmp225 = icmp ult i8* %tmp130, %tmp131
  br i1 %cmp225, label %if.then226, label %if.else258

if.then226:                                       ; preds = %land.lhs.true224
  %tmp132 = load i8*, i8** %via_params, align 8
  %tmp133 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast227 = ptrtoint i8* %tmp132 to i64
  %sub.ptr.rhs.cast228 = ptrtoint i8* %tmp133 to i64
  %sub.ptr.sub229 = sub i64 %sub.ptr.lhs.cast227, %sub.ptr.rhs.cast228
  %cmp230 = icmp slt i64 %sub.ptr.sub229, 2
  br i1 %cmp230, label %if.then231, label %if.end232

if.then231:                                       ; preds = %if.then226
  store i32 -5, i32* %retval
  br label %return

if.end232:                                        ; preds = %if.then226
  %tmp134 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool233 = icmp ne i8* (i64)* %tmp134, null
  br i1 %tobool233, label %cond.true234, label %cond.false239

cond.true234:                                     ; preds = %if.end232
  %tmp135 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp136 = load i8*, i8** %via_params, align 8
  %tmp137 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast235 = ptrtoint i8* %tmp136 to i64
  %sub.ptr.rhs.cast236 = ptrtoint i8* %tmp137 to i64
  %sub.ptr.sub237 = sub i64 %sub.ptr.lhs.cast235, %sub.ptr.rhs.cast236
  %call238 = call i8* %tmp135(i64 %sub.ptr.sub237)
  br label %cond.end244

cond.false239:                                    ; preds = %if.end232
  %tmp138 = load i8*, i8** %via_params, align 8
  %tmp139 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast240 = ptrtoint i8* %tmp138 to i64
  %sub.ptr.rhs.cast241 = ptrtoint i8* %tmp139 to i64
  %sub.ptr.sub242 = sub i64 %sub.ptr.lhs.cast240, %sub.ptr.rhs.cast241
  %call243 = call noalias i8* @malloc(i64 %sub.ptr.sub242) #8
  br label %cond.end244

cond.end244:                                      ; preds = %cond.false239, %cond.true234
  %cond245 = phi i8* [ %call238, %cond.true234 ], [ %call243, %cond.false239 ]
  %tmp140 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port246 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp140, i32 0, i32 3
  store i8* %cond245, i8** %port246, align 8
  %tmp141 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port247 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp141, i32 0, i32 3
  %tmp142 = load i8*, i8** %port247, align 8
  %cmp248 = icmp eq i8* %tmp142, null
  br i1 %cmp248, label %if.then249, label %if.end250

if.then249:                                       ; preds = %cond.end244
  store i32 -4, i32* %retval
  br label %return

if.end250:                                        ; preds = %cond.end244
  %tmp143 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port251 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp143, i32 0, i32 3
  %tmp144 = load i8*, i8** %port251, align 8
  %tmp145 = load i8*, i8** %port, align 8
  %add.ptr252 = getelementptr inbounds i8, i8* %tmp145, i64 1
  %tmp146 = load i8*, i8** %via_params, align 8
  %tmp147 = load i8*, i8** %port, align 8
  %sub.ptr.lhs.cast253 = ptrtoint i8* %tmp146 to i64
  %sub.ptr.rhs.cast254 = ptrtoint i8* %tmp147 to i64
  %sub.ptr.sub255 = sub i64 %sub.ptr.lhs.cast253, %sub.ptr.rhs.cast254
  %sub256 = sub nsw i64 %sub.ptr.sub255, 1
  %call257 = call i8* @osip_clrncpy(i8* %tmp144, i8* %add.ptr252, i64 %sub256)
  br label %if.end259

if.else258:                                       ; preds = %land.lhs.true224, %if.end222
  %tmp148 = load i8*, i8** %via_params, align 8
  store i8* %tmp148, i8** %port, align 8
  br label %if.end259

if.end259:                                        ; preds = %if.else258, %if.end250
  %tmp149 = load i8*, i8** %ipv6host, align 8
  %cmp260 = icmp ne i8* %tmp149, null
  br i1 %cmp260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end259
  store i32 0, i32* %retval
  br label %return

if.end262:                                        ; preds = %if.end259
  %tmp150 = load i8*, i8** %port, align 8
  %tmp151 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast263 = ptrtoint i8* %tmp150 to i64
  %sub.ptr.rhs.cast264 = ptrtoint i8* %tmp151 to i64
  %sub.ptr.sub265 = sub i64 %sub.ptr.lhs.cast263, %sub.ptr.rhs.cast264
  %cmp266 = icmp slt i64 %sub.ptr.sub265, 2
  br i1 %cmp266, label %if.then267, label %if.end268

if.then267:                                       ; preds = %if.end262
  store i32 -5, i32* %retval
  br label %return

if.end268:                                        ; preds = %if.end262
  %tmp152 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool269 = icmp ne i8* (i64)* %tmp152, null
  br i1 %tobool269, label %cond.true270, label %cond.false275

cond.true270:                                     ; preds = %if.end268
  %tmp153 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp154 = load i8*, i8** %port, align 8
  %tmp155 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast271 = ptrtoint i8* %tmp154 to i64
  %sub.ptr.rhs.cast272 = ptrtoint i8* %tmp155 to i64
  %sub.ptr.sub273 = sub i64 %sub.ptr.lhs.cast271, %sub.ptr.rhs.cast272
  %call274 = call i8* %tmp153(i64 %sub.ptr.sub273)
  br label %cond.end280

cond.false275:                                    ; preds = %if.end268
  %tmp156 = load i8*, i8** %port, align 8
  %tmp157 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast276 = ptrtoint i8* %tmp156 to i64
  %sub.ptr.rhs.cast277 = ptrtoint i8* %tmp157 to i64
  %sub.ptr.sub278 = sub i64 %sub.ptr.lhs.cast276, %sub.ptr.rhs.cast277
  %call279 = call noalias i8* @malloc(i64 %sub.ptr.sub278) #8
  br label %cond.end280

cond.end280:                                      ; preds = %cond.false275, %cond.true270
  %cond281 = phi i8* [ %call274, %cond.true270 ], [ %call279, %cond.false275 ]
  %tmp158 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host282 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp158, i32 0, i32 2
  store i8* %cond281, i8** %host282, align 8
  %tmp159 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host283 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp159, i32 0, i32 2
  %tmp160 = load i8*, i8** %host283, align 8
  %cmp284 = icmp eq i8* %tmp160, null
  br i1 %cmp284, label %if.then285, label %if.end286

if.then285:                                       ; preds = %cond.end280
  store i32 -4, i32* %retval
  br label %return

if.end286:                                        ; preds = %cond.end280
  %tmp161 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host287 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp161, i32 0, i32 2
  %tmp162 = load i8*, i8** %host287, align 8
  %tmp163 = load i8*, i8** %host, align 8
  %add.ptr288 = getelementptr inbounds i8, i8* %tmp163, i64 1
  %tmp164 = load i8*, i8** %port, align 8
  %tmp165 = load i8*, i8** %host, align 8
  %sub.ptr.lhs.cast289 = ptrtoint i8* %tmp164 to i64
  %sub.ptr.rhs.cast290 = ptrtoint i8* %tmp165 to i64
  %sub.ptr.sub291 = sub i64 %sub.ptr.lhs.cast289, %sub.ptr.rhs.cast290
  %sub292 = sub nsw i64 %sub.ptr.sub291, 1
  %call293 = call i8* @osip_clrncpy(i8* %tmp162, i8* %add.ptr288, i64 %sub292)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end286, %if.then285, %if.then267, %if.then261, %if.then249, %if.then231, %if.then210, %if.then192, %if.then186, %if.end165, %if.then149, %if.then131, %if.then110, %if.then92, %if.then86, %if.then72, %if.then54, %if.then47, %if.then42, %if.then33, %if.then22, %if.then9, %if.then6, %if.then2, %if.then
  %tmp166 = load i32, i32* %retval
  ret i32 %tmp166
}

; Function Attrs: nounwind uwtable
define void @osip_via_free(%struct.osip_via* %via) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end50

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %version, align 8
  %cmp1 = icmp ne i8* %tmp2, null
  br i1 %cmp1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then2
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version4 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %version4, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end6

if.else:                                          ; preds = %if.then2
  %tmp7 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version5 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %version5, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %tmp9 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp9, i32 0, i32 1
  %tmp10 = load i8*, i8** %protocol, align 8
  %cmp8 = icmp ne i8* %tmp10, null
  br i1 %cmp8, label %if.then9, label %if.end16

if.then9:                                         ; preds = %if.end7
  %tmp11 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool10 = icmp ne void (i8*)* %tmp11, null
  br i1 %tobool10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.then9
  %tmp12 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp13 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol12 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp13, i32 0, i32 1
  %tmp14 = load i8*, i8** %protocol12, align 8
  call void %tmp12(i8* %tmp14)
  br label %if.end15

if.else13:                                        ; preds = %if.then9
  %tmp15 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol14 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp15, i32 0, i32 1
  %tmp16 = load i8*, i8** %protocol14, align 8
  call void @free(i8* %tmp16) #8
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %tmp17 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp17, i32 0, i32 2
  %tmp18 = load i8*, i8** %host, align 8
  %cmp17 = icmp ne i8* %tmp18, null
  br i1 %cmp17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end16
  %tmp19 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool19 = icmp ne void (i8*)* %tmp19, null
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.then18
  %tmp20 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp21 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host21 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp21, i32 0, i32 2
  %tmp22 = load i8*, i8** %host21, align 8
  call void %tmp20(i8* %tmp22)
  br label %if.end24

if.else22:                                        ; preds = %if.then18
  %tmp23 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host23 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp23, i32 0, i32 2
  %tmp24 = load i8*, i8** %host23, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then20
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end16
  %tmp25 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp25, i32 0, i32 3
  %tmp26 = load i8*, i8** %port, align 8
  %cmp26 = icmp ne i8* %tmp26, null
  br i1 %cmp26, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end25
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool28 = icmp ne void (i8*)* %tmp27, null
  br i1 %tobool28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.then27
  %tmp28 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp29 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port30 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp29, i32 0, i32 3
  %tmp30 = load i8*, i8** %port30, align 8
  call void %tmp28(i8* %tmp30)
  br label %if.end33

if.else31:                                        ; preds = %if.then27
  %tmp31 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port32 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp31, i32 0, i32 3
  %tmp32 = load i8*, i8** %port32, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end25
  %tmp33 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp33, i32 0, i32 4
  %tmp34 = load i8*, i8** %comment, align 8
  %cmp35 = icmp ne i8* %tmp34, null
  br i1 %cmp35, label %if.then36, label %if.end43

if.then36:                                        ; preds = %if.end34
  %tmp35 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool37 = icmp ne void (i8*)* %tmp35, null
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then36
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp37 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment39 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp37, i32 0, i32 4
  %tmp38 = load i8*, i8** %comment39, align 8
  call void %tmp36(i8* %tmp38)
  br label %if.end42

if.else40:                                        ; preds = %if.then36
  %tmp39 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment41 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp39, i32 0, i32 4
  %tmp40 = load i8*, i8** %comment41, align 8
  call void @free(i8* %tmp40) #8
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  %tmp41 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %via_params = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp41, i32 0, i32 5
  call void @osip_uri_param_freelist(%struct.osip_list* %via_params)
  %tmp42 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp44 = icmp ne %struct.osip_via* %tmp42, null
  br i1 %cmp44, label %if.then45, label %if.end50

if.then45:                                        ; preds = %if.end43
  %tmp43 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool46 = icmp ne void (i8*)* %tmp43, null
  br i1 %tobool46, label %if.then47, label %if.else48

if.then47:                                        ; preds = %if.then45
  %tmp44 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp45 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %tmp46 = bitcast %struct.osip_via* %tmp45 to i8*
  call void %tmp44(i8* %tmp46)
  br label %if.end49

if.else48:                                        ; preds = %if.then45
  %tmp47 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %tmp48 = bitcast %struct.osip_via* %tmp47 to i8*
  call void @free(i8* %tmp48) #8
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end43, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_append_via(%struct.osip_message* %sip, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %hvalue.addr = alloca i8*, align 8
  %via = alloca %struct.osip_via*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %call = call i32 @osip_via_init(%struct.osip_via** %via)
  store i32 %call, i32* %i, align 4
  %tmp = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %tmp, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp1 = load i32, i32* %i, align 4
  store i32 %tmp1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %tmp3 = load i8*, i8** %hvalue.addr, align 8
  %call1 = call i32 @osip_via_parse(%struct.osip_via* %tmp2, i8* %tmp3)
  store i32 %call1, i32* %i, align 4
  %tmp4 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp4, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  call void @osip_via_free(%struct.osip_via* %tmp5)
  %tmp6 = load i32, i32* %i, align 4
  store i32 %tmp6, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp7 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp7, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 28
  %tmp9 = load %struct.osip_via*, %struct.osip_via** %via, align 8
  %tmp10 = bitcast %struct.osip_via* %tmp9 to i8*
  %call5 = call i32 @osip_list_add(%struct.osip_list* %vias, i8* %tmp10, i32 0)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %tmp11 = load i32, i32* %retval
  ret i32 %tmp11
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_via(%struct.osip_message* %sip, i32 %pos, %struct.osip_via** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_via**, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_via** %dest, %struct.osip_via*** %dest.addr, align 8
  %tmp = load %struct.osip_via**, %struct.osip_via*** %dest.addr, align 8
  store %struct.osip_via* null, %struct.osip_via** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp2, i32 0, i32 28
  %call = call i32 @osip_list_size(%struct.osip_list* %vias)
  %tmp3 = load i32, i32* %pos.addr, align 4
  %cmp1 = icmp sle i32 %call, %tmp3
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %vias4 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp4, i32 0, i32 28
  %tmp5 = load i32, i32* %pos.addr, align 4
  %call5 = call i8* @osip_list_get(%struct.osip_list* %vias4, i32 %tmp5)
  %tmp6 = bitcast i8* %call5 to %struct.osip_via*
  %tmp7 = load %struct.osip_via**, %struct.osip_via*** %dest.addr, align 8
  store %struct.osip_via* %tmp6, %struct.osip_via** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_via_to_str(%struct.osip_via* %via, i8** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %via.addr = alloca %struct.osip_via*, align 8
  %dest.addr = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %len = alloca i64, align 8
  %plen = alloca i64, align 8
  %tmp = alloca i8*, align 8
  %pos = alloca i32, align 4
  %u_param = alloca %struct.osip_uri_param*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp1, align 8
  %tmp2 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp3 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp3, i32 0, i32 2
  %tmp4 = load i8*, i8** %host, align 8
  %cmp1 = icmp eq i8* %tmp4, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %version, align 8
  %cmp3 = icmp eq i8* %tmp6, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %tmp7 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp7, i32 0, i32 1
  %tmp8 = load i8*, i8** %protocol, align 8
  %cmp5 = icmp eq i8* %tmp8, null
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false4
  %tmp9 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version6 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %version6, align 8
  %call = call i64 @strlen(i8* %tmp10) #7
  %add = add i64 %call, 1
  %tmp11 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol7 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp11, i32 0, i32 1
  %tmp12 = load i8*, i8** %protocol7, align 8
  %call8 = call i64 @strlen(i8* %tmp12) #7
  %add9 = add i64 %add, %call8
  %add10 = add i64 %add9, 1
  %add11 = add i64 %add10, 3
  %add12 = add i64 %add11, 2
  store i64 %add12, i64* %len, align 8
  %tmp13 = load i64, i64* %len, align 8
  %tmp14 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host13 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp14, i32 0, i32 2
  %tmp15 = load i8*, i8** %host13, align 8
  %call14 = call i64 @strlen(i8* %tmp15) #7
  %add15 = add i64 %tmp13, %call14
  %add16 = add i64 %add15, 3
  %add17 = add i64 %add16, 1
  store i64 %add17, i64* %len, align 8
  %tmp16 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp16, i32 0, i32 3
  %tmp17 = load i8*, i8** %port, align 8
  %cmp18 = icmp ne i8* %tmp17, null
  br i1 %cmp18, label %if.then19, label %if.end24

if.then19:                                        ; preds = %if.end
  %tmp18 = load i64, i64* %len, align 8
  %tmp19 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port20 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp19, i32 0, i32 3
  %tmp20 = load i8*, i8** %port20, align 8
  %call21 = call i64 @strlen(i8* %tmp20) #7
  %add22 = add i64 %tmp18, %call21
  %add23 = add i64 %add22, 2
  store i64 %add23, i64* %len, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end
  %tmp21 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp21, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end24
  %tmp22 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp23 = load i64, i64* %len, align 8
  %call25 = call i8* %tmp22(i64 %tmp23)
  br label %cond.end

cond.false:                                       ; preds = %if.end24
  %tmp24 = load i64, i64* %len, align 8
  %call26 = call noalias i8* @malloc(i64 %tmp24) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call25, %cond.true ], [ %call26, %cond.false ]
  store i8* %cond, i8** %buf, align 8
  %tmp25 = load i8*, i8** %buf, align 8
  %cmp27 = icmp eq i8* %tmp25, null
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end29:                                         ; preds = %cond.end
  %tmp26 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host30 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp26, i32 0, i32 2
  %tmp27 = load i8*, i8** %host30, align 8
  %call31 = call i8* @strchr(i8* %tmp27, i32 58) #7
  %cmp32 = icmp ne i8* %call31, null
  br i1 %cmp32, label %if.then33, label %if.else47

if.then33:                                        ; preds = %if.end29
  %tmp28 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port34 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp28, i32 0, i32 3
  %tmp29 = load i8*, i8** %port34, align 8
  %cmp35 = icmp eq i8* %tmp29, null
  br i1 %cmp35, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.then33
  %tmp30 = load i8*, i8** %buf, align 8
  %tmp31 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version37 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp31, i32 0, i32 0
  %tmp32 = load i8*, i8** %version37, align 8
  %tmp33 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol38 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp33, i32 0, i32 1
  %tmp34 = load i8*, i8** %protocol38, align 8
  %tmp35 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host39 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp35, i32 0, i32 2
  %tmp36 = load i8*, i8** %host39, align 8
  %call40 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str1445, i32 0, i32 0), i8* %tmp32, i8* %tmp34, i8* %tmp36) #8
  br label %if.end46

if.else:                                          ; preds = %if.then33
  %tmp37 = load i8*, i8** %buf, align 8
  %tmp38 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version41 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp38, i32 0, i32 0
  %tmp39 = load i8*, i8** %version41, align 8
  %tmp40 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol42 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp40, i32 0, i32 1
  %tmp41 = load i8*, i8** %protocol42, align 8
  %tmp42 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host43 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp42, i32 0, i32 2
  %tmp43 = load i8*, i8** %host43, align 8
  %tmp44 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port44 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp44, i32 0, i32 3
  %tmp45 = load i8*, i8** %port44, align 8
  %call45 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str2446, i32 0, i32 0), i8* %tmp39, i8* %tmp41, i8* %tmp43, i8* %tmp45) #8
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then36
  br label %if.end62

if.else47:                                        ; preds = %if.end29
  %tmp46 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port48 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp46, i32 0, i32 3
  %tmp47 = load i8*, i8** %port48, align 8
  %cmp49 = icmp eq i8* %tmp47, null
  br i1 %cmp49, label %if.then50, label %if.else55

if.then50:                                        ; preds = %if.else47
  %tmp48 = load i8*, i8** %buf, align 8
  %tmp49 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version51 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp49, i32 0, i32 0
  %tmp50 = load i8*, i8** %version51, align 8
  %tmp51 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol52 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp51, i32 0, i32 1
  %tmp52 = load i8*, i8** %protocol52, align 8
  %tmp53 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host53 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp53, i32 0, i32 2
  %tmp54 = load i8*, i8** %host53, align 8
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str3447, i32 0, i32 0), i8* %tmp50, i8* %tmp52, i8* %tmp54) #8
  br label %if.end61

if.else55:                                        ; preds = %if.else47
  %tmp55 = load i8*, i8** %buf, align 8
  %tmp56 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version56 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp56, i32 0, i32 0
  %tmp57 = load i8*, i8** %version56, align 8
  %tmp58 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol57 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp58, i32 0, i32 1
  %tmp59 = load i8*, i8** %protocol57, align 8
  %tmp60 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host58 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp60, i32 0, i32 2
  %tmp61 = load i8*, i8** %host58, align 8
  %tmp62 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port59 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp62, i32 0, i32 3
  %tmp63 = load i8*, i8** %port59, align 8
  %call60 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str4448, i32 0, i32 0), i8* %tmp57, i8* %tmp59, i8* %tmp61, i8* %tmp63) #8
  br label %if.end61

if.end61:                                         ; preds = %if.else55, %if.then50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end46
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end99, %if.end62
  %tmp64 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %via_params = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp64, i32 0, i32 5
  %tmp65 = load i32, i32* %pos, align 4
  %call65 = call i32 @osip_list_eol(%struct.osip_list* %via_params, i32 %tmp65)
  %tobool66 = icmp ne i32 %call65, 0
  %lnot = xor i1 %tobool66, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp66 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %via_params67 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp66, i32 0, i32 5
  %tmp67 = load i32, i32* %pos, align 4
  %call68 = call i8* @osip_list_get(%struct.osip_list* %via_params67, i32 %tmp67)
  %tmp68 = bitcast i8* %call68 to %struct.osip_uri_param*
  store %struct.osip_uri_param* %tmp68, %struct.osip_uri_param** %u_param, align 8
  %tmp69 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp69, i32 0, i32 1
  %tmp70 = load i8*, i8** %gvalue, align 8
  %cmp69 = icmp eq i8* %tmp70, null
  br i1 %cmp69, label %if.then70, label %if.else73

if.then70:                                        ; preds = %while.body
  %tmp71 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp71, i32 0, i32 0
  %tmp72 = load i8*, i8** %gname, align 8
  %call71 = call i64 @strlen(i8* %tmp72) #7
  %add72 = add i64 %call71, 2
  store i64 %add72, i64* %plen, align 8
  br label %if.end80

if.else73:                                        ; preds = %while.body
  %tmp73 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname74 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp73, i32 0, i32 0
  %tmp74 = load i8*, i8** %gname74, align 8
  %call75 = call i64 @strlen(i8* %tmp74) #7
  %tmp75 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue76 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp75, i32 0, i32 1
  %tmp76 = load i8*, i8** %gvalue76, align 8
  %call77 = call i64 @strlen(i8* %tmp76) #7
  %add78 = add i64 %call75, %call77
  %add79 = add i64 %add78, 3
  store i64 %add79, i64* %plen, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.else73, %if.then70
  %tmp77 = load i64, i64* %len, align 8
  %tmp78 = load i64, i64* %plen, align 8
  %add81 = add i64 %tmp77, %tmp78
  store i64 %add81, i64* %len, align 8
  %tmp79 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool82 = icmp ne i8* (i8*, i64)* %tmp79, null
  br i1 %tobool82, label %cond.true83, label %cond.false85

cond.true83:                                      ; preds = %if.end80
  %tmp80 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp81 = load i8*, i8** %buf, align 8
  %tmp82 = load i64, i64* %len, align 8
  %call84 = call i8* %tmp80(i8* %tmp81, i64 %tmp82)
  br label %cond.end87

cond.false85:                                     ; preds = %if.end80
  %tmp83 = load i8*, i8** %buf, align 8
  %tmp84 = load i64, i64* %len, align 8
  %call86 = call i8* @realloc(i8* %tmp83, i64 %tmp84) #8
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false85, %cond.true83
  %cond88 = phi i8* [ %call84, %cond.true83 ], [ %call86, %cond.false85 ]
  store i8* %cond88, i8** %buf, align 8
  %tmp85 = load i8*, i8** %buf, align 8
  store i8* %tmp85, i8** %tmp, align 8
  %tmp86 = load i8*, i8** %tmp, align 8
  %tmp87 = load i8*, i8** %tmp, align 8
  %call89 = call i64 @strlen(i8* %tmp87) #7
  %add.ptr = getelementptr inbounds i8, i8* %tmp86, i64 %call89
  store i8* %add.ptr, i8** %tmp, align 8
  %tmp88 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue90 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp88, i32 0, i32 1
  %tmp89 = load i8*, i8** %gvalue90, align 8
  %cmp91 = icmp eq i8* %tmp89, null
  br i1 %cmp91, label %if.then92, label %if.else95

if.then92:                                        ; preds = %cond.end87
  %tmp90 = load i8*, i8** %tmp, align 8
  %tmp91 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname93 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp91, i32 0, i32 0
  %tmp92 = load i8*, i8** %gname93, align 8
  %call94 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str5449, i32 0, i32 0), i8* %tmp92) #8
  br label %if.end99

if.else95:                                        ; preds = %cond.end87
  %tmp93 = load i8*, i8** %tmp, align 8
  %tmp94 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gname96 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp94, i32 0, i32 0
  %tmp95 = load i8*, i8** %gname96, align 8
  %tmp96 = load %struct.osip_uri_param*, %struct.osip_uri_param** %u_param, align 8
  %gvalue97 = getelementptr inbounds %struct.osip_uri_param, %struct.osip_uri_param* %tmp96, i32 0, i32 1
  %tmp97 = load i8*, i8** %gvalue97, align 8
  %call98 = call i32 (i8*, i8*, ...) @sprintf(i8* %tmp93, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str6450, i32 0, i32 0), i8* %tmp95, i8* %tmp97) #8
  br label %if.end99

if.end99:                                         ; preds = %if.else95, %if.then92
  %tmp98 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp98, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp99 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp99, i32 0, i32 4
  %tmp100 = load i8*, i8** %comment, align 8
  %cmp100 = icmp ne i8* %tmp100, null
  br i1 %cmp100, label %if.then101, label %if.end117

if.then101:                                       ; preds = %while.end
  %tmp101 = load i64, i64* %len, align 8
  %tmp102 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment102 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp102, i32 0, i32 4
  %tmp103 = load i8*, i8** %comment102, align 8
  %call103 = call i64 @strlen(i8* %tmp103) #7
  %add104 = add i64 %tmp101, %call103
  %add105 = add i64 %add104, 4
  store i64 %add105, i64* %len, align 8
  %tmp104 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool106 = icmp ne i8* (i8*, i64)* %tmp104, null
  br i1 %tobool106, label %cond.true107, label %cond.false109

cond.true107:                                     ; preds = %if.then101
  %tmp105 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp106 = load i8*, i8** %buf, align 8
  %tmp107 = load i64, i64* %len, align 8
  %call108 = call i8* %tmp105(i8* %tmp106, i64 %tmp107)
  br label %cond.end111

cond.false109:                                    ; preds = %if.then101
  %tmp108 = load i8*, i8** %buf, align 8
  %tmp109 = load i64, i64* %len, align 8
  %call110 = call i8* @realloc(i8* %tmp108, i64 %tmp109) #8
  br label %cond.end111

cond.end111:                                      ; preds = %cond.false109, %cond.true107
  %cond112 = phi i8* [ %call108, %cond.true107 ], [ %call110, %cond.false109 ]
  store i8* %cond112, i8** %buf, align 8
  %tmp110 = load i8*, i8** %buf, align 8
  store i8* %tmp110, i8** %tmp, align 8
  %tmp111 = load i8*, i8** %tmp, align 8
  %tmp112 = load i8*, i8** %tmp, align 8
  %call113 = call i64 @strlen(i8* %tmp112) #7
  %add.ptr114 = getelementptr inbounds i8, i8* %tmp111, i64 %call113
  store i8* %add.ptr114, i8** %tmp, align 8
  %tmp113 = load i8*, i8** %tmp, align 8
  %tmp114 = load i64, i64* %len, align 8
  %tmp115 = load i8*, i8** %tmp, align 8
  %tmp116 = load i8*, i8** %buf, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp115 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp116 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %tmp114, %sub.ptr.sub
  %tmp117 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment115 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp117, i32 0, i32 4
  %tmp118 = load i8*, i8** %comment115, align 8
  %call116 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %tmp113, i64 %sub, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str7451, i32 0, i32 0), i8* %tmp118) #8
  br label %if.end117

if.end117:                                        ; preds = %cond.end111, %while.end
  %tmp119 = load i8*, i8** %buf, align 8
  %tmp120 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp119, i8** %tmp120, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end117, %if.then28, %if.then
  %tmp121 = load i32, i32* %retval
  ret i32 %tmp121
}

; Function Attrs: nounwind uwtable
define void @via_set_version(%struct.osip_via* %via, i8* %version) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  %version.addr = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %version, i8** %version.addr, align 8
  %tmp = load i8*, i8** %version.addr, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version1 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 0
  store i8* %tmp, i8** %version1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @via_get_version(%struct.osip_via* %via) #0 {
entry:
  %retval = alloca i8*, align 8
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %version, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @via_set_protocol(%struct.osip_via* %via, i8* %protocol) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  %protocol.addr = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %protocol, i8** %protocol.addr, align 8
  %tmp = load i8*, i8** %protocol.addr, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol1 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 1
  store i8* %tmp, i8** %protocol1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @via_get_protocol(%struct.osip_via* %via) #0 {
entry:
  %retval = alloca i8*, align 8
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 1
  %tmp2 = load i8*, i8** %protocol, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @via_set_host(%struct.osip_via* %via, i8* %host) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  %host.addr = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  %tmp = load i8*, i8** %host.addr, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host1 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 2
  store i8* %tmp, i8** %host1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @via_get_host(%struct.osip_via* %via) #0 {
entry:
  %retval = alloca i8*, align 8
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 2
  %tmp2 = load i8*, i8** %host, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @via_set_port(%struct.osip_via* %via, i8* %port) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  %port.addr = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %port, i8** %port.addr, align 8
  %tmp = load i8*, i8** %port.addr, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port1 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 3
  store i8* %tmp, i8** %port1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @via_get_port(%struct.osip_via* %via) #0 {
entry:
  %retval = alloca i8*, align 8
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 3
  %tmp2 = load i8*, i8** %port, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define void @via_set_comment(%struct.osip_via* %via, i8* %comment) #0 {
entry:
  %via.addr = alloca %struct.osip_via*, align 8
  %comment.addr = alloca i8*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store i8* %comment, i8** %comment.addr, align 8
  %tmp = load i8*, i8** %comment.addr, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment1 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 4
  store i8* %tmp, i8** %comment1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @via_get_comment(%struct.osip_via* %via) #0 {
entry:
  %retval = alloca i8*, align 8
  %via.addr = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp1, i32 0, i32 4
  %tmp2 = load i8*, i8** %comment, align 8
  store i8* %tmp2, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp3 = load i8*, i8** %retval
  ret i8* %tmp3
}

; Function Attrs: nounwind uwtable
define i32 @osip_via_clone(%struct.osip_via* %via, %struct.osip_via** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %via.addr = alloca %struct.osip_via*, align 8
  %dest.addr = alloca %struct.osip_via**, align 8
  %i = alloca i32, align 4
  %vi = alloca %struct.osip_via*, align 8
  store %struct.osip_via* %via, %struct.osip_via** %via.addr, align 8
  store %struct.osip_via** %dest, %struct.osip_via*** %dest.addr, align 8
  %tmp = load %struct.osip_via**, %struct.osip_via*** %dest.addr, align 8
  store %struct.osip_via* null, %struct.osip_via** %tmp, align 8
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp2, i32 0, i32 0
  %tmp3 = load i8*, i8** %version, align 8
  %cmp1 = icmp eq i8* %tmp3, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp4 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp4, i32 0, i32 1
  %tmp5 = load i8*, i8** %protocol, align 8
  %cmp4 = icmp eq i8* %tmp5, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp6 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp6, i32 0, i32 2
  %tmp7 = load i8*, i8** %host, align 8
  %cmp7 = icmp eq i8* %tmp7, null
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  store i32 -2, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end6
  %call = call i32 @osip_via_init(%struct.osip_via** %vi)
  store i32 %call, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp10 = icmp ne i32 %tmp8, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  %tmp9 = load i32, i32* %i, align 4
  store i32 %tmp9, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.end9
  %tmp10 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version13 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp10, i32 0, i32 0
  %tmp11 = load i8*, i8** %version13, align 8
  %call14 = call i8* @osip_strdup(i8* %tmp11)
  %tmp12 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %version15 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp12, i32 0, i32 0
  store i8* %call14, i8** %version15, align 8
  %tmp13 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %version16 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp13, i32 0, i32 0
  %tmp14 = load i8*, i8** %version16, align 8
  %cmp17 = icmp eq i8* %tmp14, null
  br i1 %cmp17, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %if.end12
  %tmp15 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %version18 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp15, i32 0, i32 0
  %tmp16 = load i8*, i8** %version18, align 8
  %cmp19 = icmp ne i8* %tmp16, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %land.lhs.true
  %tmp17 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp17)
  store i32 -4, i32* %retval
  br label %return

if.end21:                                         ; preds = %land.lhs.true, %if.end12
  %tmp18 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol22 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp18, i32 0, i32 1
  %tmp19 = load i8*, i8** %protocol22, align 8
  %call23 = call i8* @osip_strdup(i8* %tmp19)
  %tmp20 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %protocol24 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp20, i32 0, i32 1
  store i8* %call23, i8** %protocol24, align 8
  %tmp21 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %protocol25 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp21, i32 0, i32 1
  %tmp22 = load i8*, i8** %protocol25, align 8
  %cmp26 = icmp eq i8* %tmp22, null
  br i1 %cmp26, label %land.lhs.true27, label %if.end31

land.lhs.true27:                                  ; preds = %if.end21
  %tmp23 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %protocol28 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp23, i32 0, i32 1
  %tmp24 = load i8*, i8** %protocol28, align 8
  %cmp29 = icmp ne i8* %tmp24, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %land.lhs.true27
  %tmp25 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp25)
  store i32 -4, i32* %retval
  br label %return

if.end31:                                         ; preds = %land.lhs.true27, %if.end21
  %tmp26 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host32 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp26, i32 0, i32 2
  %tmp27 = load i8*, i8** %host32, align 8
  %call33 = call i8* @osip_strdup(i8* %tmp27)
  %tmp28 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %host34 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp28, i32 0, i32 2
  store i8* %call33, i8** %host34, align 8
  %tmp29 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %host35 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp29, i32 0, i32 2
  %tmp30 = load i8*, i8** %host35, align 8
  %cmp36 = icmp eq i8* %tmp30, null
  br i1 %cmp36, label %land.lhs.true37, label %if.end41

land.lhs.true37:                                  ; preds = %if.end31
  %tmp31 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %host38 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp31, i32 0, i32 2
  %tmp32 = load i8*, i8** %host38, align 8
  %cmp39 = icmp ne i8* %tmp32, null
  br i1 %cmp39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %land.lhs.true37
  %tmp33 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp33)
  store i32 -4, i32* %retval
  br label %return

if.end41:                                         ; preds = %land.lhs.true37, %if.end31
  %tmp34 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp34, i32 0, i32 3
  %tmp35 = load i8*, i8** %port, align 8
  %cmp42 = icmp ne i8* %tmp35, null
  br i1 %cmp42, label %if.then43, label %if.end51

if.then43:                                        ; preds = %if.end41
  %tmp36 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %port44 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp36, i32 0, i32 3
  %tmp37 = load i8*, i8** %port44, align 8
  %call45 = call i8* @osip_strdup(i8* %tmp37)
  %tmp38 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %port46 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp38, i32 0, i32 3
  store i8* %call45, i8** %port46, align 8
  %tmp39 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %port47 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp39, i32 0, i32 3
  %tmp40 = load i8*, i8** %port47, align 8
  %cmp48 = icmp eq i8* %tmp40, null
  br i1 %cmp48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.then43
  %tmp41 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp41)
  store i32 -4, i32* %retval
  br label %return

if.end50:                                         ; preds = %if.then43
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end41
  %tmp42 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp42, i32 0, i32 4
  %tmp43 = load i8*, i8** %comment, align 8
  %cmp52 = icmp ne i8* %tmp43, null
  br i1 %cmp52, label %if.then53, label %if.end61

if.then53:                                        ; preds = %if.end51
  %tmp44 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %comment54 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp44, i32 0, i32 4
  %tmp45 = load i8*, i8** %comment54, align 8
  %call55 = call i8* @osip_strdup(i8* %tmp45)
  %tmp46 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %comment56 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp46, i32 0, i32 4
  store i8* %call55, i8** %comment56, align 8
  %tmp47 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %comment57 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp47, i32 0, i32 4
  %tmp48 = load i8*, i8** %comment57, align 8
  %cmp58 = icmp eq i8* %tmp48, null
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.then53
  %tmp49 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp49)
  store i32 -4, i32* %retval
  br label %return

if.end60:                                         ; preds = %if.then53
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end51
  %tmp50 = load %struct.osip_via*, %struct.osip_via** %via.addr, align 8
  %via_params = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp50, i32 0, i32 5
  %tmp51 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %via_params62 = getelementptr inbounds %struct.osip_via, %struct.osip_via* %tmp51, i32 0, i32 5
  %call63 = call i32 @osip_list_clone(%struct.osip_list* %via_params, %struct.osip_list* %via_params62, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_uri_param*, %struct.osip_uri_param**)* @osip_uri_param_clone to i32 (i8*, i8**)*))
  store i32 %call63, i32* %i, align 4
  %tmp52 = load i32, i32* %i, align 4
  %cmp64 = icmp ne i32 %tmp52, 0
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end61
  %tmp53 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  call void @osip_via_free(%struct.osip_via* %tmp53)
  %tmp54 = load i32, i32* %i, align 4
  store i32 %tmp54, i32* %retval
  br label %return

if.end66:                                         ; preds = %if.end61
  %tmp55 = load %struct.osip_via*, %struct.osip_via** %vi, align 8
  %tmp56 = load %struct.osip_via**, %struct.osip_via*** %dest.addr, align 8
  store %struct.osip_via* %tmp55, %struct.osip_via** %tmp56, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end66, %if.then65, %if.then59, %if.then49, %if.then40, %if.then30, %if.then20, %if.then11, %if.then8, %if.then5, %if.then2, %if.then
  %tmp57 = load i32, i32* %retval
  ret i32 %tmp57
}

; Function Attrs: nounwind uwtable
define i32 @osip_via_match(%struct.osip_via* %via1, %struct.osip_via* %via2) #0 {
entry:
  %retval = alloca i32, align 4
  %via1.addr = alloca %struct.osip_via*, align 8
  %via2.addr = alloca %struct.osip_via*, align 8
  %_via1 = alloca i8*, align 8
  %_via2 = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_via* %via1, %struct.osip_via** %via1.addr, align 8
  store %struct.osip_via* %via2, %struct.osip_via** %via2.addr, align 8
  %tmp = load %struct.osip_via*, %struct.osip_via** %via1.addr, align 8
  %cmp = icmp eq %struct.osip_via* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_via*, %struct.osip_via** %via2.addr, align 8
  %cmp1 = icmp eq %struct.osip_via* %tmp1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %tmp2 = load %struct.osip_via*, %struct.osip_via** %via1.addr, align 8
  %call = call i32 @osip_via_to_str(%struct.osip_via* %tmp2, i8** %_via1)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp3, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp5 = load %struct.osip_via*, %struct.osip_via** %via2.addr, align 8
  %call5 = call i32 @osip_via_to_str(%struct.osip_via* %tmp5, i8** %_via2)
  store i32 %call5, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp6 = icmp ne i32 %tmp6, 0
  br i1 %cmp6, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end4
  %tmp7 = load i8*, i8** %_via1, align 8
  %cmp8 = icmp ne i8* %tmp7, null
  br i1 %cmp8, label %if.then9, label %if.end12

if.then9:                                         ; preds = %if.then7
  %tmp8 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp8, null
  br i1 %tobool, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.then9
  %tmp9 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp10 = load i8*, i8** %_via1, align 8
  call void %tmp9(i8* %tmp10)
  br label %if.end11

if.else:                                          ; preds = %if.then9
  %tmp11 = load i8*, i8** %_via1, align 8
  call void @free(i8* %tmp11) #8
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then7
  %tmp12 = load i32, i32* %i, align 4
  store i32 %tmp12, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end4
  %tmp13 = load i8*, i8** %_via1, align 8
  %tmp14 = load i8*, i8** %_via2, align 8
  %call14 = call i32 @strcmp(i8* %tmp13, i8* %tmp14) #7
  store i32 %call14, i32* %i, align 4
  %tmp15 = load i8*, i8** %_via1, align 8
  %cmp15 = icmp ne i8* %tmp15, null
  br i1 %cmp15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %if.end13
  %tmp16 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool17 = icmp ne void (i8*)* %tmp16, null
  br i1 %tobool17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %tmp17 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp18 = load i8*, i8** %_via1, align 8
  call void %tmp17(i8* %tmp18)
  br label %if.end20

if.else19:                                        ; preds = %if.then16
  %tmp19 = load i8*, i8** %_via1, align 8
  call void @free(i8* %tmp19) #8
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end13
  %tmp20 = load i8*, i8** %_via2, align 8
  %cmp22 = icmp ne i8* %tmp20, null
  br i1 %cmp22, label %if.then23, label %if.end28

if.then23:                                        ; preds = %if.end21
  %tmp21 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool24 = icmp ne void (i8*)* %tmp21, null
  br i1 %tobool24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then23
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp23 = load i8*, i8** %_via2, align 8
  call void %tmp22(i8* %tmp23)
  br label %if.end27

if.else26:                                        ; preds = %if.then23
  %tmp24 = load i8*, i8** %_via2, align 8
  call void @free(i8* %tmp24) #8
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then25
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end21
  %tmp25 = load i32, i32* %i, align 4
  %cmp29 = icmp ne i32 %tmp25, 0
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end28
  store i32 -1, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.end28
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end31, %if.then30, %if.end12, %if.then3, %if.then
  %tmp26 = load i32, i32* %retval
  ret i32 %tmp26
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_init(%struct.osip_body** %body) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body**, align 8
  store %struct.osip_body** %body, %struct.osip_body*** %body.addr, align 8
  %tmp = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp1 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call = call i8* %tmp1(i64 32)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 32) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %tmp2 = bitcast i8* %cond to %struct.osip_body*
  %tmp3 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  store %struct.osip_body* %tmp2, %struct.osip_body** %tmp3, align 8
  %tmp4 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp5 = load %struct.osip_body*, %struct.osip_body** %tmp4, align 8
  %cmp = icmp eq %struct.osip_body* %tmp5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %tmp6 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp7 = load %struct.osip_body*, %struct.osip_body** %tmp6, align 8
  %body2 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp7, i32 0, i32 0
  store i8* null, i8** %body2, align 8
  %tmp8 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp9 = load %struct.osip_body*, %struct.osip_body** %tmp8, align 8
  %content_type = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp9, i32 0, i32 3
  store %struct.osip_content_type* null, %struct.osip_content_type** %content_type, align 8
  %tmp10 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %tmp10, align 8
  %length = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp11, i32 0, i32 1
  store i64 0, i64* %length, align 8
  %tmp12 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool3 = icmp ne i8* (i64)* %tmp12, null
  br i1 %tobool3, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %if.end
  %tmp13 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %call5 = call i8* %tmp13(i64 16)
  br label %cond.end8

cond.false6:                                      ; preds = %if.end
  %call7 = call noalias i8* @malloc(i64 16) #8
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i8* [ %call5, %cond.true4 ], [ %call7, %cond.false6 ]
  %tmp14 = bitcast i8* %cond9 to %struct.osip_list*
  %tmp15 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp16 = load %struct.osip_body*, %struct.osip_body** %tmp15, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp16, i32 0, i32 2
  store %struct.osip_list* %tmp14, %struct.osip_list** %headers, align 8
  %tmp17 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp18 = load %struct.osip_body*, %struct.osip_body** %tmp17, align 8
  %headers10 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp18, i32 0, i32 2
  %tmp19 = load %struct.osip_list*, %struct.osip_list** %headers10, align 8
  %cmp11 = icmp eq %struct.osip_list* %tmp19, null
  br i1 %cmp11, label %if.then12, label %if.end19

if.then12:                                        ; preds = %cond.end8
  %tmp20 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp21 = load %struct.osip_body*, %struct.osip_body** %tmp20, align 8
  %cmp13 = icmp ne %struct.osip_body* %tmp21, null
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; preds = %if.then12
  %tmp22 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool15 = icmp ne void (i8*)* %tmp22, null
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.then14
  %tmp23 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp24 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp25 = load %struct.osip_body*, %struct.osip_body** %tmp24, align 8
  %tmp26 = bitcast %struct.osip_body* %tmp25 to i8*
  call void %tmp23(i8* %tmp26)
  br label %if.end17

if.else:                                          ; preds = %if.then14
  %tmp27 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp28 = load %struct.osip_body*, %struct.osip_body** %tmp27, align 8
  %tmp29 = bitcast %struct.osip_body* %tmp28 to i8*
  call void @free(i8* %tmp29) #8
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then12
  %tmp30 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  store %struct.osip_body* null, %struct.osip_body** %tmp30, align 8
  store i32 -4, i32* %retval
  br label %return

if.end19:                                         ; preds = %cond.end8
  %tmp31 = load %struct.osip_body**, %struct.osip_body*** %body.addr, align 8
  %tmp32 = load %struct.osip_body*, %struct.osip_body** %tmp31, align 8
  %headers20 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp32, i32 0, i32 2
  %tmp33 = load %struct.osip_list*, %struct.osip_list** %headers20, align 8
  %call21 = call i32 @osip_list_init(%struct.osip_list* %tmp33)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %if.end18, %if.then
  %tmp34 = load i32, i32* %retval
  ret i32 %tmp34
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_body(%struct.osip_message* %sip, i8* %buf, i64 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %body = alloca %struct.osip_body*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %call = call i32 @osip_body_init(%struct.osip_body** %body)
  store i32 %call, i32* %i, align 4
  %tmp = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %tmp, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp1 = load i32, i32* %i, align 4
  store i32 %tmp1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp2 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %tmp3 = load i8*, i8** %buf.addr, align 8
  %tmp4 = load i64, i64* %length.addr, align 8
  %call1 = call i32 @osip_body_parse(%struct.osip_body* %tmp2, i8* %tmp3, i64 %tmp4)
  store i32 %call1, i32* %i, align 4
  %tmp5 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp5, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp6 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  call void @osip_body_free(%struct.osip_body* %tmp6)
  %tmp7 = load i32, i32* %i, align 4
  store i32 %tmp7, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp8 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp8, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 31
  %tmp10 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %tmp11 = bitcast %struct.osip_body* %tmp10 to i8*
  %call5 = call i32 @osip_list_add(%struct.osip_list* %bodies, i8* %tmp11, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %tmp12 = load i32, i32* %retval
  ret i32 %tmp12
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_parse(%struct.osip_body* %body, i8* %start_of_body, i64 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %start_of_body.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8* %start_of_body, i8** %start_of_body.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %start_of_body.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp2 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp2, i32 0, i32 2
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  %cmp4 = icmp eq %struct.osip_list* %tmp3, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp4 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end6
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp6 = load i64, i64* %length.addr, align 8
  %add = add i64 %tmp6, 1
  %call = call i8* %tmp5(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  %tmp7 = load i64, i64* %length.addr, align 8
  %add7 = add i64 %tmp7, 1
  %call8 = call noalias i8* @malloc(i64 %add7) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call8, %cond.false ]
  %tmp8 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body9 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp8, i32 0, i32 0
  store i8* %cond, i8** %body9, align 8
  %tmp9 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body10 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp9, i32 0, i32 0
  %tmp10 = load i8*, i8** %body10, align 8
  %cmp11 = icmp eq i8* %tmp10, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end13:                                         ; preds = %cond.end
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body14 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp11, i32 0, i32 0
  %tmp12 = load i8*, i8** %body14, align 8
  %tmp13 = load i8*, i8** %start_of_body.addr, align 8
  %tmp14 = load i64, i64* %length.addr, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp12, i8* %tmp13, i64 %tmp14, i32 1, i1 false)
  %tmp15 = load i64, i64* %length.addr, align 8
  %tmp16 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body15 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp16, i32 0, i32 0
  %tmp17 = load i8*, i8** %body15, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp17, i64 %tmp15
  store i8 0, i8* %arrayidx, align 1
  %tmp18 = load i64, i64* %length.addr, align 8
  %tmp19 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length16 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp19, i32 0, i32 1
  store i64 %tmp18, i64* %length16, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end13, %if.then12, %if.then5, %if.then2, %if.then
  %tmp20 = load i32, i32* %retval
  ret i32 %tmp20
}

; Function Attrs: nounwind uwtable
define void @osip_body_free(%struct.osip_body* %body) #0 {
entry:
  %body.addr = alloca %struct.osip_body*, align 8
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end29

if.end:                                           ; preds = %entry
  %tmp1 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body1 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp1, i32 0, i32 0
  %tmp2 = load i8*, i8** %body1, align 8
  %cmp2 = icmp ne i8* %tmp2, null
  br i1 %cmp2, label %if.then3, label %if.end8

if.then3:                                         ; preds = %if.end
  %tmp3 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool = icmp ne void (i8*)* %tmp3, null
  br i1 %tobool, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then3
  %tmp4 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp5 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body5 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp5, i32 0, i32 0
  %tmp6 = load i8*, i8** %body5, align 8
  call void %tmp4(i8* %tmp6)
  br label %if.end7

if.else:                                          ; preds = %if.then3
  %tmp7 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body6 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %body6, align 8
  call void @free(i8* %tmp8) #8
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %tmp9 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp9, i32 0, i32 3
  %tmp10 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp9 = icmp ne %struct.osip_content_type* %tmp10, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type11 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp11, i32 0, i32 3
  %tmp12 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type11, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp12)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8
  %tmp13 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp13, i32 0, i32 2
  %tmp14 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  call void @osip_list_special_free(%struct.osip_list* %tmp14, void (i8*)* bitcast (void (%struct.osip_header*)* @osip_header_free to void (i8*)*))
  %tmp15 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers13 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp15, i32 0, i32 2
  %tmp16 = load %struct.osip_list*, %struct.osip_list** %headers13, align 8
  %cmp14 = icmp ne %struct.osip_list* %tmp16, null
  br i1 %cmp14, label %if.then15, label %if.end22

if.then15:                                        ; preds = %if.end12
  %tmp17 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool16 = icmp ne void (i8*)* %tmp17, null
  br i1 %tobool16, label %if.then17, label %if.else19

if.then17:                                        ; preds = %if.then15
  %tmp18 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp19 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers18 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp19, i32 0, i32 2
  %tmp20 = load %struct.osip_list*, %struct.osip_list** %headers18, align 8
  %tmp21 = bitcast %struct.osip_list* %tmp20 to i8*
  call void %tmp18(i8* %tmp21)
  br label %if.end21

if.else19:                                        ; preds = %if.then15
  %tmp22 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers20 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp22, i32 0, i32 2
  %tmp23 = load %struct.osip_list*, %struct.osip_list** %headers20, align 8
  %tmp24 = bitcast %struct.osip_list* %tmp23 to i8*
  call void @free(i8* %tmp24) #8
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end12
  %tmp25 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp23 = icmp ne %struct.osip_body* %tmp25, null
  br i1 %cmp23, label %if.then24, label %if.end29

if.then24:                                        ; preds = %if.end22
  %tmp26 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool25 = icmp ne void (i8*)* %tmp26, null
  br i1 %tobool25, label %if.then26, label %if.else27

if.then26:                                        ; preds = %if.then24
  %tmp27 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp28 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %tmp29 = bitcast %struct.osip_body* %tmp28 to i8*
  call void %tmp27(i8* %tmp29)
  br label %if.end28

if.else27:                                        ; preds = %if.then24
  %tmp30 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %tmp31 = bitcast %struct.osip_body* %tmp30 to i8*
  call void @free(i8* %tmp31) #8
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end22, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_clone(%struct.osip_body* %body, %struct.osip_body** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %dest.addr = alloca %struct.osip_body**, align 8
  %i = alloca i32, align 4
  %copy = alloca %struct.osip_body*, align 8
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store %struct.osip_body** %dest, %struct.osip_body*** %dest.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tmp1 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp1, i32 0, i32 1
  %tmp2 = load i64, i64* %length, align 8
  %cmp1 = icmp ule i64 %tmp2, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @osip_body_init(%struct.osip_body** %copy)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp2 = icmp ne i32 %tmp3, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %tmp5 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end4
  %tmp6 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp7 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length5 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp7, i32 0, i32 1
  %tmp8 = load i64, i64* %length5, align 8
  %add = add i64 %tmp8, 2
  %call6 = call i8* %tmp6(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end4
  %tmp9 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length7 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp9, i32 0, i32 1
  %tmp10 = load i64, i64* %length7, align 8
  %add8 = add i64 %tmp10, 2
  %call9 = call noalias i8* @malloc(i64 %add8) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ %call9, %cond.false ]
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %body10 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp11, i32 0, i32 0
  store i8* %cond, i8** %body10, align 8
  %tmp12 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %body11 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp12, i32 0, i32 0
  %tmp13 = load i8*, i8** %body11, align 8
  %cmp12 = icmp eq i8* %tmp13, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %cond.end
  %tmp14 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  call void @osip_body_free(%struct.osip_body* %tmp14)
  store i32 -4, i32* %retval
  br label %return

if.end14:                                         ; preds = %cond.end
  %tmp15 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length15 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp15, i32 0, i32 1
  %tmp16 = load i64, i64* %length15, align 8
  %tmp17 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %length16 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp17, i32 0, i32 1
  store i64 %tmp16, i64* %length16, align 8
  %tmp18 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %body17 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp18, i32 0, i32 0
  %tmp19 = load i8*, i8** %body17, align 8
  %tmp20 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body18 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp20, i32 0, i32 0
  %tmp21 = load i8*, i8** %body18, align 8
  %tmp22 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length19 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp22, i32 0, i32 1
  %tmp23 = load i64, i64* %length19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp19, i8* %tmp21, i64 %tmp23, i32 1, i1 false)
  %tmp24 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length20 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp24, i32 0, i32 1
  %tmp25 = load i64, i64* %length20, align 8
  %tmp26 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %body21 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %body21, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp27, i64 %tmp25
  store i8 0, i8* %arrayidx, align 1
  %tmp28 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp28, i32 0, i32 3
  %tmp29 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp22 = icmp ne %struct.osip_content_type* %tmp29, null
  br i1 %cmp22, label %if.then23, label %if.end30

if.then23:                                        ; preds = %if.end14
  %tmp30 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type24 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp30, i32 0, i32 3
  %tmp31 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type24, align 8
  %tmp32 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %content_type25 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp32, i32 0, i32 3
  %call26 = call i32 @osip_content_type_clone(%struct.osip_content_type* %tmp31, %struct.osip_content_type** %content_type25)
  store i32 %call26, i32* %i, align 4
  %tmp33 = load i32, i32* %i, align 4
  %cmp27 = icmp ne i32 %tmp33, 0
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then23
  %tmp34 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  call void @osip_body_free(%struct.osip_body* %tmp34)
  %tmp35 = load i32, i32* %i, align 4
  store i32 %tmp35, i32* %retval
  br label %return

if.end29:                                         ; preds = %if.then23
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end14
  %tmp36 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp36, i32 0, i32 2
  %tmp37 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  %tmp38 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %headers31 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp38, i32 0, i32 2
  %tmp39 = load %struct.osip_list*, %struct.osip_list** %headers31, align 8
  %call32 = call i32 @osip_list_clone(%struct.osip_list* %tmp37, %struct.osip_list* %tmp39, i32 (i8*, i8**)* bitcast (i32 (%struct.osip_header*, %struct.osip_header**)* @osip_header_clone to i32 (i8*, i8**)*))
  store i32 %call32, i32* %i, align 4
  %tmp40 = load i32, i32* %i, align 4
  %cmp33 = icmp ne i32 %tmp40, 0
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end30
  %tmp41 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  call void @osip_body_free(%struct.osip_body* %tmp41)
  %tmp42 = load i32, i32* %i, align 4
  store i32 %tmp42, i32* %retval
  br label %return

if.end35:                                         ; preds = %if.end30
  %tmp43 = load %struct.osip_body*, %struct.osip_body** %copy, align 8
  %tmp44 = load %struct.osip_body**, %struct.osip_body*** %dest.addr, align 8
  store %struct.osip_body* %tmp43, %struct.osip_body** %tmp44, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end35, %if.then34, %if.then28, %if.then13, %if.then3, %if.then
  %tmp45 = load i32, i32* %retval
  ret i32 %tmp45
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_get_body(%struct.osip_message* %sip, i32 %pos, %struct.osip_body** %dest) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %pos.addr = alloca i32, align 4
  %dest.addr = alloca %struct.osip_body**, align 8
  %body = alloca %struct.osip_body*, align 8
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i32 %pos, i32* %pos.addr, align 4
  store %struct.osip_body** %dest, %struct.osip_body*** %dest.addr, align 8
  %tmp = load %struct.osip_body**, %struct.osip_body*** %dest.addr, align 8
  store %struct.osip_body* null, %struct.osip_body** %tmp, align 8
  %tmp1 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp1, i32 0, i32 31
  %call = call i32 @osip_list_size(%struct.osip_list* %bodies)
  %tmp2 = load i32, i32* %pos.addr, align 4
  %cmp = icmp sle i32 %call, %tmp2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp3 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies1 = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp3, i32 0, i32 31
  %tmp4 = load i32, i32* %pos.addr, align 4
  %call2 = call i8* @osip_list_get(%struct.osip_list* %bodies1, i32 %tmp4)
  %tmp5 = bitcast i8* %call2 to %struct.osip_body*
  store %struct.osip_body* %tmp5, %struct.osip_body** %body, align 8
  %tmp6 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %tmp7 = load %struct.osip_body**, %struct.osip_body*** %dest.addr, align 8
  store %struct.osip_body* %tmp6, %struct.osip_body** %tmp7, align 8
  %tmp8 = load i32, i32* %pos.addr, align 4
  store i32 %tmp8, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %tmp9 = load i32, i32* %retval
  ret i32 %tmp9
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_set_contenttype(%struct.osip_body* %body, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %hvalue.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %hvalue.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp2 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp2, i32 0, i32 3
  %call = call i32 @osip_content_type_init(%struct.osip_content_type** %content_type)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp4 = icmp ne i32 %tmp3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp5 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type7 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp5, i32 0, i32 3
  %tmp6 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type7, align 8
  %tmp7 = load i8*, i8** %hvalue.addr, align 8
  %call8 = call i32 @osip_content_type_parse(%struct.osip_content_type* %tmp6, i8* %tmp7)
  store i32 %call8, i32* %i, align 4
  %tmp8 = load i32, i32* %i, align 4
  %cmp9 = icmp ne i32 %tmp8, 0
  br i1 %cmp9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end6
  %tmp9 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type11 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp9, i32 0, i32 3
  %tmp10 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type11, align 8
  call void @osip_content_type_free(%struct.osip_content_type* %tmp10)
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type12 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp11, i32 0, i32 3
  store %struct.osip_content_type* null, %struct.osip_content_type** %content_type12, align 8
  %tmp12 = load i32, i32* %i, align 4
  store i32 %tmp12, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end6
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end13, %if.then10, %if.then5, %if.then2, %if.then
  %tmp13 = load i32, i32* %retval
  ret i32 %tmp13
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_set_header(%struct.osip_body* %body, i8* %hname, i8* %hvalue) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %hname.addr = alloca i8*, align 8
  %hvalue.addr = alloca i8*, align 8
  %h = alloca %struct.osip_header*, align 8
  %i = alloca i32, align 4
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8* %hname, i8** %hname.addr, align 8
  store i8* %hvalue, i8** %hvalue.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %hname.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp2 = load i8*, i8** %hvalue.addr, align 8
  %cmp4 = icmp eq i8* %tmp2, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %call = call i32 @osip_header_init(%struct.osip_header** %h)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp3, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  %tmp4 = load i32, i32* %i, align 4
  store i32 %tmp4, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end6
  %tmp5 = load i8*, i8** %hname.addr, align 8
  %call10 = call i8* @osip_strdup(i8* %tmp5)
  %tmp6 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname11 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp6, i32 0, i32 0
  store i8* %call10, i8** %hname11, align 8
  %tmp7 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hname12 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp7, i32 0, i32 0
  %tmp8 = load i8*, i8** %hname12, align 8
  %cmp13 = icmp eq i8* %tmp8, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end9
  %tmp9 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp9)
  store i32 -4, i32* %retval
  br label %return

if.end15:                                         ; preds = %if.end9
  %tmp10 = load i8*, i8** %hvalue.addr, align 8
  %call16 = call i8* @osip_strdup(i8* %tmp10)
  %tmp11 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue17 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp11, i32 0, i32 1
  store i8* %call16, i8** %hvalue17, align 8
  %tmp12 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %hvalue18 = getelementptr inbounds %struct.osip_header, %struct.osip_header* %tmp12, i32 0, i32 1
  %tmp13 = load i8*, i8** %hvalue18, align 8
  %cmp19 = icmp eq i8* %tmp13, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end15
  %tmp14 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  call void @osip_header_free(%struct.osip_header* %tmp14)
  store i32 -4, i32* %retval
  br label %return

if.end21:                                         ; preds = %if.end15
  %tmp15 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp15, i32 0, i32 2
  %tmp16 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  %tmp17 = load %struct.osip_header*, %struct.osip_header** %h, align 8
  %tmp18 = bitcast %struct.osip_header* %tmp17 to i8*
  %call22 = call i32 @osip_list_add(%struct.osip_list* %tmp16, i8* %tmp18, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end21, %if.then20, %if.then14, %if.then8, %if.then5, %if.then2, %if.then
  %tmp19 = load i32, i32* %retval
  ret i32 %tmp19
}

; Function Attrs: nounwind uwtable
define i32 @osip_message_set_body_mime(%struct.osip_message* %sip, i8* %buf, i64 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %sip.addr = alloca %struct.osip_message*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %body = alloca %struct.osip_body*, align 8
  %i = alloca i32, align 4
  store %struct.osip_message* %sip, %struct.osip_message** %sip.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %cmp = icmp eq %struct.osip_message* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @osip_body_init(%struct.osip_body** %body)
  store i32 %call, i32* %i, align 4
  %tmp1 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp1, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %tmp2 = load i32, i32* %i, align 4
  store i32 %tmp2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp3 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %tmp4 = load i8*, i8** %buf.addr, align 8
  %tmp5 = load i64, i64* %length.addr, align 8
  %call4 = call i32 @osip_body_parse_mime(%struct.osip_body* %tmp3, i8* %tmp4, i64 %tmp5)
  store i32 %call4, i32* %i, align 4
  %tmp6 = load i32, i32* %i, align 4
  %cmp5 = icmp ne i32 %tmp6, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  %tmp7 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  call void @osip_body_free(%struct.osip_body* %tmp7)
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end3
  %tmp9 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %message_property = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp9, i32 0, i32 32
  store i32 2, i32* %message_property, align 4
  %tmp10 = load %struct.osip_message*, %struct.osip_message** %sip.addr, align 8
  %bodies = getelementptr inbounds %struct.osip_message, %struct.osip_message* %tmp10, i32 0, i32 31
  %tmp11 = load %struct.osip_body*, %struct.osip_body** %body, align 8
  %tmp12 = bitcast %struct.osip_body* %tmp11 to i8*
  %call8 = call i32 @osip_list_add(%struct.osip_list* %bodies, i8* %tmp12, i32 -1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %tmp13 = load i32, i32* %retval
  ret i32 %tmp13
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_parse_mime(%struct.osip_body* %body, i8* %start_of_body, i64 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %start_of_body.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %end_of_osip_body_header = alloca i8*, align 8
  %start_of_osip_body_header = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8* %start_of_body, i8** %start_of_body.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %tmp = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %tmp1 = load i8*, i8** %start_of_body.addr, align 8
  %cmp1 = icmp eq i8* %tmp1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %tmp2 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp2, i32 0, i32 2
  %tmp3 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  %cmp4 = icmp eq %struct.osip_list* %tmp3, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 -2, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end3
  %tmp4 = load i8*, i8** %start_of_body.addr, align 8
  store i8* %tmp4, i8** %start_of_osip_body_header, align 8
  %tmp5 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %tmp6 = load i8*, i8** %start_of_osip_body_header, align 8
  %call = call i32 @osip_body_parse_header(%struct.osip_body* %tmp5, i8* %tmp6, i8** %end_of_osip_body_header)
  store i32 %call, i32* %i, align 4
  %tmp7 = load i32, i32* %i, align 4
  %cmp7 = icmp ne i32 %tmp7, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  %tmp8 = load i32, i32* %i, align 4
  store i32 %tmp8, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end6
  %tmp9 = load i8*, i8** %end_of_osip_body_header, align 8
  store i8* %tmp9, i8** %start_of_osip_body_header, align 8
  %tmp10 = load i8*, i8** %start_of_osip_body_header, align 8
  %call10 = call i32 @strncmp(i8* %tmp10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str460, i32 0, i32 0), i64 2) #7
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  %tmp11 = load i8*, i8** %start_of_osip_body_header, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp11, i64 2
  store i8* %add.ptr, i8** %start_of_osip_body_header, align 8
  br label %if.end21

if.else:                                          ; preds = %if.end9
  %tmp12 = load i8*, i8** %start_of_osip_body_header, align 8
  %call13 = call i32 @strncmp(i8* %tmp12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str1461, i32 0, i32 0), i64 1) #7
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %tmp13 = load i8*, i8** %start_of_osip_body_header, align 8
  %call15 = call i32 @strncmp(i8* %tmp13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str2462, i32 0, i32 0), i64 1) #7
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.else19

if.then17:                                        ; preds = %lor.lhs.false, %if.else
  %tmp14 = load i8*, i8** %start_of_osip_body_header, align 8
  %add.ptr18 = getelementptr inbounds i8, i8* %tmp14, i64 1
  store i8* %add.ptr18, i8** %start_of_osip_body_header, align 8
  br label %if.end20

if.else19:                                        ; preds = %lor.lhs.false
  store i32 -5, i32* %retval
  br label %return

if.end20:                                         ; preds = %if.then17
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then12
  %tmp15 = load i8*, i8** %start_of_body.addr, align 8
  %tmp16 = load i64, i64* %length.addr, align 8
  %add.ptr22 = getelementptr inbounds i8, i8* %tmp15, i64 %tmp16
  store i8* %add.ptr22, i8** %end_of_osip_body_header, align 8
  %tmp17 = load i8*, i8** %end_of_osip_body_header, align 8
  %tmp18 = load i8*, i8** %start_of_osip_body_header, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp17 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp23 = icmp sle i64 %sub.ptr.sub, 0
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end21
  store i32 -5, i32* %retval
  br label %return

if.end25:                                         ; preds = %if.end21
  %tmp19 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp19, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end25
  %tmp20 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp21 = load i8*, i8** %end_of_osip_body_header, align 8
  %tmp22 = load i8*, i8** %start_of_osip_body_header, align 8
  %sub.ptr.lhs.cast26 = ptrtoint i8* %tmp21 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %add = add nsw i64 %sub.ptr.sub28, 1
  %call29 = call i8* %tmp20(i64 %add)
  br label %cond.end

cond.false:                                       ; preds = %if.end25
  %tmp23 = load i8*, i8** %end_of_osip_body_header, align 8
  %tmp24 = load i8*, i8** %start_of_osip_body_header, align 8
  %sub.ptr.lhs.cast30 = ptrtoint i8* %tmp23 to i64
  %sub.ptr.rhs.cast31 = ptrtoint i8* %tmp24 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  %add33 = add nsw i64 %sub.ptr.sub32, 1
  %call34 = call noalias i8* @malloc(i64 %add33) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call29, %cond.true ], [ %call34, %cond.false ]
  %tmp25 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body35 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp25, i32 0, i32 0
  store i8* %cond, i8** %body35, align 8
  %tmp26 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body36 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp26, i32 0, i32 0
  %tmp27 = load i8*, i8** %body36, align 8
  %cmp37 = icmp eq i8* %tmp27, null
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end39:                                         ; preds = %cond.end
  %tmp28 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body40 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp28, i32 0, i32 0
  %tmp29 = load i8*, i8** %body40, align 8
  %tmp30 = load i8*, i8** %start_of_osip_body_header, align 8
  %tmp31 = load i8*, i8** %end_of_osip_body_header, align 8
  %tmp32 = load i8*, i8** %start_of_osip_body_header, align 8
  %sub.ptr.lhs.cast41 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.rhs.cast42 = ptrtoint i8* %tmp32 to i64
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp29, i8* %tmp30, i64 %sub.ptr.sub43, i32 1, i1 false)
  %tmp33 = load i8*, i8** %end_of_osip_body_header, align 8
  %tmp34 = load i8*, i8** %start_of_osip_body_header, align 8
  %sub.ptr.lhs.cast44 = ptrtoint i8* %tmp33 to i64
  %sub.ptr.rhs.cast45 = ptrtoint i8* %tmp34 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  %tmp35 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length47 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp35, i32 0, i32 1
  store i64 %sub.ptr.sub46, i64* %length47, align 8
  %tmp36 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length48 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp36, i32 0, i32 1
  %tmp37 = load i64, i64* %length48, align 8
  %tmp38 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body49 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp38, i32 0, i32 0
  %tmp39 = load i8*, i8** %body49, align 8
  %arrayidx = getelementptr inbounds i8, i8* %tmp39, i64 %tmp37
  store i8 0, i8* %arrayidx, align 1
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end39, %if.then38, %if.then24, %if.else19, %if.then8, %if.then5, %if.then2, %if.then
  %tmp40 = load i32, i32* %retval
  ret i32 %tmp40
}

; Function Attrs: nounwind uwtable
define i32 @osip_body_to_str(%struct.osip_body* %body, i8** %dest, i64* %str_length) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %dest.addr = alloca i8**, align 8
  %str_length.addr = alloca i64*, align 8
  %tmp_body = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i64, align 8
  %len = alloca i64, align 8
  %header = alloca %struct.osip_header*, align 8
  %len109 = alloca i64, align 8
  %len155 = alloca i64, align 8
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8** %dest, i8*** %dest.addr, align 8
  store i64* %str_length, i64** %str_length.addr, align 8
  %tmp1 = load i8**, i8*** %dest.addr, align 8
  %tobool = icmp ne i8** %tmp1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tmp2 = load i8**, i8*** %dest.addr, align 8
  store i8* null, i8** %tmp2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tmp3 = load i64*, i64** %str_length.addr, align 8
  %tobool5 = icmp ne i64* %tmp3, null
  br i1 %tobool5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %tmp4 = load i64*, i64** %str_length.addr, align 8
  store i64 0, i64* %tmp4, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  %tmp5 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %cmp = icmp eq %struct.osip_body* %tmp5, null
  br i1 %cmp, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end7
  store i32 -2, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end7
  %tmp6 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body10 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp6, i32 0, i32 0
  %tmp7 = load i8*, i8** %body10, align 8
  %cmp11 = icmp eq i8* %tmp7, null
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end9
  store i32 -2, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.end9
  %tmp8 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp8, i32 0, i32 2
  %tmp9 = load %struct.osip_list*, %struct.osip_list** %headers, align 8
  %cmp14 = icmp eq %struct.osip_list* %tmp9, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end13
  store i32 -2, i32* %retval
  br label %return

if.end16:                                         ; preds = %if.end13
  %tmp10 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length17 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp10, i32 0, i32 1
  %tmp11 = load i64, i64* %length17, align 8
  %cmp18 = icmp ule i64 %tmp11, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end16
  store i32 -2, i32* %retval
  br label %return

if.end20:                                         ; preds = %if.end16
  %tmp12 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length21 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp12, i32 0, i32 1
  %tmp13 = load i64, i64* %length21, align 8
  %add = add i64 15, %tmp13
  %tmp14 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers22 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp14, i32 0, i32 2
  %tmp15 = load %struct.osip_list*, %struct.osip_list** %headers22, align 8
  %call = call i32 @osip_list_size(%struct.osip_list* %tmp15)
  %mul = mul nsw i32 %call, 40
  %conv = sext i32 %mul to i64
  %add23 = add i64 %add, %conv
  store i64 %add23, i64* %length, align 8
  %tmp16 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool24 = icmp ne i8* (i64)* %tmp16, null
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end20
  %tmp17 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp18 = load i64, i64* %length, align 8
  %call25 = call i8* %tmp17(i64 %tmp18)
  br label %cond.end

cond.false:                                       ; preds = %if.end20
  %tmp19 = load i64, i64* %length, align 8
  %call26 = call noalias i8* @malloc(i64 %tmp19) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call25, %cond.true ], [ %call26, %cond.false ]
  store i8* %cond, i8** %tmp_body, align 8
  %tmp20 = load i8*, i8** %tmp_body, align 8
  %cmp27 = icmp eq i8* %tmp20, null
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end30:                                         ; preds = %cond.end
  %tmp21 = load i8*, i8** %tmp_body, align 8
  store i8* %tmp21, i8** %ptr, align 8
  %tmp22 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp22, i32 0, i32 3
  %tmp23 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type, align 8
  %cmp31 = icmp ne %struct.osip_content_type* %tmp23, null
  br i1 %cmp31, label %if.then33, label %if.end79

if.then33:                                        ; preds = %if.end30
  %tmp24 = load i8*, i8** %tmp_body, align 8
  %call34 = call i8* @osip_strn_append(i8* %tmp24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str3463, i32 0, i32 0), i64 14)
  store i8* %call34, i8** %tmp_body, align 8
  %tmp25 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type35 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp25, i32 0, i32 3
  %tmp26 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type35, align 8
  %call36 = call i32 @osip_content_type_to_str(%struct.osip_content_type* %tmp26, i8** %tmp)
  store i32 %call36, i32* %i, align 4
  %tmp27 = load i32, i32* %i, align 4
  %cmp37 = icmp ne i32 %tmp27, 0
  br i1 %cmp37, label %if.then39, label %if.end47

if.then39:                                        ; preds = %if.then33
  %tmp28 = load i8*, i8** %ptr, align 8
  %cmp40 = icmp ne i8* %tmp28, null
  br i1 %cmp40, label %if.then42, label %if.end46

if.then42:                                        ; preds = %if.then39
  %tmp29 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool43 = icmp ne void (i8*)* %tmp29, null
  br i1 %tobool43, label %if.then44, label %if.else

if.then44:                                        ; preds = %if.then42
  %tmp30 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp31 = load i8*, i8** %ptr, align 8
  call void %tmp30(i8* %tmp31)
  br label %if.end45

if.else:                                          ; preds = %if.then42
  %tmp32 = load i8*, i8** %ptr, align 8
  call void @free(i8* %tmp32) #8
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then44
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then39
  %tmp33 = load i32, i32* %i, align 4
  store i32 %tmp33, i32* %retval
  br label %return

if.end47:                                         ; preds = %if.then33
  %tmp34 = load i64, i64* %length, align 8
  %tmp35 = load i8*, i8** %tmp_body, align 8
  %tmp36 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp35 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp36 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tmp37 = load i8*, i8** %tmp, align 8
  %call48 = call i64 @strlen(i8* %tmp37) #7
  %add49 = add i64 %sub.ptr.sub, %call48
  %add50 = add i64 %add49, 4
  %cmp51 = icmp ult i64 %tmp34, %add50
  br i1 %cmp51, label %if.then53, label %if.end68

if.then53:                                        ; preds = %if.end47
  %tmp38 = load i8*, i8** %tmp_body, align 8
  %tmp39 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast55 = ptrtoint i8* %tmp38 to i64
  %sub.ptr.rhs.cast56 = ptrtoint i8* %tmp39 to i64
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56
  store i64 %sub.ptr.sub57, i64* %len, align 8
  %tmp40 = load i64, i64* %length, align 8
  %tmp41 = load i8*, i8** %tmp, align 8
  %call58 = call i64 @strlen(i8* %tmp41) #7
  %add59 = add i64 %tmp40, %call58
  %add60 = add i64 %add59, 4
  store i64 %add60, i64* %length, align 8
  %tmp42 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool61 = icmp ne i8* (i8*, i64)* %tmp42, null
  br i1 %tobool61, label %cond.true62, label %cond.false64

cond.true62:                                      ; preds = %if.then53
  %tmp43 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp44 = load i8*, i8** %ptr, align 8
  %tmp45 = load i64, i64* %length, align 8
  %call63 = call i8* %tmp43(i8* %tmp44, i64 %tmp45)
  br label %cond.end66

cond.false64:                                     ; preds = %if.then53
  %tmp46 = load i8*, i8** %ptr, align 8
  %tmp47 = load i64, i64* %length, align 8
  %call65 = call i8* @realloc(i8* %tmp46, i64 %tmp47) #8
  br label %cond.end66

cond.end66:                                       ; preds = %cond.false64, %cond.true62
  %cond67 = phi i8* [ %call63, %cond.true62 ], [ %call65, %cond.false64 ]
  store i8* %cond67, i8** %ptr, align 8
  %tmp48 = load i8*, i8** %ptr, align 8
  %tmp49 = load i64, i64* %len, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp48, i64 %tmp49
  store i8* %add.ptr, i8** %tmp_body, align 8
  br label %if.end68

if.end68:                                         ; preds = %cond.end66, %if.end47
  %tmp50 = load i8*, i8** %tmp_body, align 8
  %tmp51 = load i8*, i8** %tmp, align 8
  %call69 = call i8* @osip_str_append(i8* %tmp50, i8* %tmp51)
  store i8* %call69, i8** %tmp_body, align 8
  %tmp52 = load i8*, i8** %tmp, align 8
  %cmp70 = icmp ne i8* %tmp52, null
  br i1 %cmp70, label %if.then72, label %if.end77

if.then72:                                        ; preds = %if.end68
  %tmp53 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool73 = icmp ne void (i8*)* %tmp53, null
  br i1 %tobool73, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then72
  %tmp54 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp55 = load i8*, i8** %tmp, align 8
  call void %tmp54(i8* %tmp55)
  br label %if.end76

if.else75:                                        ; preds = %if.then72
  %tmp56 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp56) #8
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end68
  %tmp57 = load i8*, i8** %tmp_body, align 8
  %call78 = call i8* @osip_strn_append(i8* %tmp57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str460, i32 0, i32 0), i64 2)
  store i8* %call78, i8** %tmp_body, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.end77, %if.end30
  store i32 0, i32* %pos, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end133, %if.end79
  %tmp58 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers80 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp58, i32 0, i32 2
  %tmp59 = load %struct.osip_list*, %struct.osip_list** %headers80, align 8
  %tmp60 = load i32, i32* %pos, align 4
  %call81 = call i32 @osip_list_eol(%struct.osip_list* %tmp59, i32 %tmp60)
  %tobool82 = icmp ne i32 %call81, 0
  %lnot = xor i1 %tobool82, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %tmp61 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers84 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp61, i32 0, i32 2
  %tmp62 = load %struct.osip_list*, %struct.osip_list** %headers84, align 8
  %tmp63 = load i32, i32* %pos, align 4
  %call85 = call i8* @osip_list_get(%struct.osip_list* %tmp62, i32 %tmp63)
  %tmp64 = bitcast i8* %call85 to %struct.osip_header*
  store %struct.osip_header* %tmp64, %struct.osip_header** %header, align 8
  %tmp65 = load %struct.osip_header*, %struct.osip_header** %header, align 8
  %call86 = call i32 @osip_header_to_str(%struct.osip_header* %tmp65, i8** %tmp)
  store i32 %call86, i32* %i, align 4
  %tmp66 = load i32, i32* %i, align 4
  %cmp87 = icmp ne i32 %tmp66, 0
  br i1 %cmp87, label %if.then89, label %if.end98

if.then89:                                        ; preds = %while.body
  %tmp67 = load i8*, i8** %ptr, align 8
  %cmp90 = icmp ne i8* %tmp67, null
  br i1 %cmp90, label %if.then92, label %if.end97

if.then92:                                        ; preds = %if.then89
  %tmp68 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool93 = icmp ne void (i8*)* %tmp68, null
  br i1 %tobool93, label %if.then94, label %if.else95

if.then94:                                        ; preds = %if.then92
  %tmp69 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp70 = load i8*, i8** %ptr, align 8
  call void %tmp69(i8* %tmp70)
  br label %if.end96

if.else95:                                        ; preds = %if.then92
  %tmp71 = load i8*, i8** %ptr, align 8
  call void @free(i8* %tmp71) #8
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %if.then94
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then89
  %tmp72 = load i32, i32* %i, align 4
  store i32 %tmp72, i32* %retval
  br label %return

if.end98:                                         ; preds = %while.body
  %tmp73 = load i64, i64* %length, align 8
  %tmp74 = load i8*, i8** %tmp_body, align 8
  %tmp75 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast99 = ptrtoint i8* %tmp74 to i64
  %sub.ptr.rhs.cast100 = ptrtoint i8* %tmp75 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100
  %tmp76 = load i8*, i8** %tmp, align 8
  %call102 = call i64 @strlen(i8* %tmp76) #7
  %add103 = add i64 %sub.ptr.sub101, %call102
  %add104 = add i64 %add103, 4
  %cmp105 = icmp ult i64 %tmp73, %add104
  br i1 %cmp105, label %if.then107, label %if.end124

if.then107:                                       ; preds = %if.end98
  %tmp77 = load i8*, i8** %tmp_body, align 8
  %tmp78 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast110 = ptrtoint i8* %tmp77 to i64
  %sub.ptr.rhs.cast111 = ptrtoint i8* %tmp78 to i64
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111
  store i64 %sub.ptr.sub112, i64* %len109, align 8
  %tmp79 = load i64, i64* %length, align 8
  %tmp80 = load i8*, i8** %tmp, align 8
  %call113 = call i64 @strlen(i8* %tmp80) #7
  %add114 = add i64 %tmp79, %call113
  %add115 = add i64 %add114, 4
  store i64 %add115, i64* %length, align 8
  %tmp81 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool116 = icmp ne i8* (i8*, i64)* %tmp81, null
  br i1 %tobool116, label %cond.true117, label %cond.false119

cond.true117:                                     ; preds = %if.then107
  %tmp82 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp83 = load i8*, i8** %ptr, align 8
  %tmp84 = load i64, i64* %length, align 8
  %call118 = call i8* %tmp82(i8* %tmp83, i64 %tmp84)
  br label %cond.end121

cond.false119:                                    ; preds = %if.then107
  %tmp85 = load i8*, i8** %ptr, align 8
  %tmp86 = load i64, i64* %length, align 8
  %call120 = call i8* @realloc(i8* %tmp85, i64 %tmp86) #8
  br label %cond.end121

cond.end121:                                      ; preds = %cond.false119, %cond.true117
  %cond122 = phi i8* [ %call118, %cond.true117 ], [ %call120, %cond.false119 ]
  store i8* %cond122, i8** %ptr, align 8
  %tmp87 = load i8*, i8** %ptr, align 8
  %tmp88 = load i64, i64* %len109, align 8
  %add.ptr123 = getelementptr inbounds i8, i8* %tmp87, i64 %tmp88
  store i8* %add.ptr123, i8** %tmp_body, align 8
  br label %if.end124

if.end124:                                        ; preds = %cond.end121, %if.end98
  %tmp89 = load i8*, i8** %tmp_body, align 8
  %tmp90 = load i8*, i8** %tmp, align 8
  %call125 = call i8* @osip_str_append(i8* %tmp89, i8* %tmp90)
  store i8* %call125, i8** %tmp_body, align 8
  %tmp91 = load i8*, i8** %tmp, align 8
  %cmp126 = icmp ne i8* %tmp91, null
  br i1 %cmp126, label %if.then128, label %if.end133

if.then128:                                       ; preds = %if.end124
  %tmp92 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool129 = icmp ne void (i8*)* %tmp92, null
  br i1 %tobool129, label %if.then130, label %if.else131

if.then130:                                       ; preds = %if.then128
  %tmp93 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp94 = load i8*, i8** %tmp, align 8
  call void %tmp93(i8* %tmp94)
  br label %if.end132

if.else131:                                       ; preds = %if.then128
  %tmp95 = load i8*, i8** %tmp, align 8
  call void @free(i8* %tmp95) #8
  br label %if.end132

if.end132:                                        ; preds = %if.else131, %if.then130
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end124
  %tmp96 = load i8*, i8** %tmp_body, align 8
  %call134 = call i8* @osip_strn_append(i8* %tmp96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str460, i32 0, i32 0), i64 2)
  store i8* %call134, i8** %tmp_body, align 8
  %tmp97 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %tmp97, 1
  store i32 %inc, i32* %pos, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tmp98 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %headers135 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp98, i32 0, i32 2
  %tmp99 = load %struct.osip_list*, %struct.osip_list** %headers135, align 8
  %call136 = call i32 @osip_list_size(%struct.osip_list* %tmp99)
  %cmp137 = icmp sgt i32 %call136, 0
  br i1 %cmp137, label %if.then142, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %tmp100 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %content_type139 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp100, i32 0, i32 3
  %tmp101 = load %struct.osip_content_type*, %struct.osip_content_type** %content_type139, align 8
  %cmp140 = icmp ne %struct.osip_content_type* %tmp101, null
  br i1 %cmp140, label %if.then142, label %if.end144

if.then142:                                       ; preds = %lor.lhs.false, %while.end
  %tmp102 = load i8*, i8** %tmp_body, align 8
  %call143 = call i8* @osip_strn_append(i8* %tmp102, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str460, i32 0, i32 0), i64 2)
  store i8* %call143, i8** %tmp_body, align 8
  br label %if.end144

if.end144:                                        ; preds = %if.then142, %lor.lhs.false
  %tmp103 = load i64, i64* %length, align 8
  %tmp104 = load i8*, i8** %tmp_body, align 8
  %tmp105 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast145 = ptrtoint i8* %tmp104 to i64
  %sub.ptr.rhs.cast146 = ptrtoint i8* %tmp105 to i64
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146
  %tmp106 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length148 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp106, i32 0, i32 1
  %tmp107 = load i64, i64* %length148, align 8
  %add149 = add i64 %sub.ptr.sub147, %tmp107
  %add150 = add i64 %add149, 4
  %cmp151 = icmp ult i64 %tmp103, %add150
  br i1 %cmp151, label %if.then153, label %if.end170

if.then153:                                       ; preds = %if.end144
  %tmp108 = load i8*, i8** %tmp_body, align 8
  %tmp109 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast156 = ptrtoint i8* %tmp108 to i64
  %sub.ptr.rhs.cast157 = ptrtoint i8* %tmp109 to i64
  %sub.ptr.sub158 = sub i64 %sub.ptr.lhs.cast156, %sub.ptr.rhs.cast157
  store i64 %sub.ptr.sub158, i64* %len155, align 8
  %tmp110 = load i64, i64* %length, align 8
  %tmp111 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length159 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp111, i32 0, i32 1
  %tmp112 = load i64, i64* %length159, align 8
  %add160 = add i64 %tmp110, %tmp112
  %add161 = add i64 %add160, 4
  store i64 %add161, i64* %length, align 8
  %tmp113 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tobool162 = icmp ne i8* (i8*, i64)* %tmp113, null
  br i1 %tobool162, label %cond.true163, label %cond.false165

cond.true163:                                     ; preds = %if.then153
  %tmp114 = load i8* (i8*, i64)*, i8* (i8*, i64)** @osip_realloc_func, align 8
  %tmp115 = load i8*, i8** %ptr, align 8
  %tmp116 = load i64, i64* %length, align 8
  %call164 = call i8* %tmp114(i8* %tmp115, i64 %tmp116)
  br label %cond.end167

cond.false165:                                    ; preds = %if.then153
  %tmp117 = load i8*, i8** %ptr, align 8
  %tmp118 = load i64, i64* %length, align 8
  %call166 = call i8* @realloc(i8* %tmp117, i64 %tmp118) #8
  br label %cond.end167

cond.end167:                                      ; preds = %cond.false165, %cond.true163
  %cond168 = phi i8* [ %call164, %cond.true163 ], [ %call166, %cond.false165 ]
  store i8* %cond168, i8** %ptr, align 8
  %tmp119 = load i8*, i8** %ptr, align 8
  %tmp120 = load i64, i64* %len155, align 8
  %add.ptr169 = getelementptr inbounds i8, i8* %tmp119, i64 %tmp120
  store i8* %add.ptr169, i8** %tmp_body, align 8
  br label %if.end170

if.end170:                                        ; preds = %cond.end167, %if.end144
  %tmp121 = load i8*, i8** %tmp_body, align 8
  %tmp122 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %body171 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp122, i32 0, i32 0
  %tmp123 = load i8*, i8** %body171, align 8
  %tmp124 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length172 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp124, i32 0, i32 1
  %tmp125 = load i64, i64* %length172, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp121, i8* %tmp123, i64 %tmp125, i32 1, i1 false)
  %tmp126 = load i8*, i8** %tmp_body, align 8
  %tmp127 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %length173 = getelementptr inbounds %struct.osip_body, %struct.osip_body* %tmp127, i32 0, i32 1
  %tmp128 = load i64, i64* %length173, align 8
  %add.ptr174 = getelementptr inbounds i8, i8* %tmp126, i64 %tmp128
  store i8* %add.ptr174, i8** %tmp_body, align 8
  %tmp129 = load i64*, i64** %str_length.addr, align 8
  %cmp175 = icmp ne i64* %tmp129, null
  br i1 %cmp175, label %if.then177, label %if.end181

if.then177:                                       ; preds = %if.end170
  %tmp130 = load i8*, i8** %tmp_body, align 8
  %tmp131 = load i8*, i8** %ptr, align 8
  %sub.ptr.lhs.cast178 = ptrtoint i8* %tmp130 to i64
  %sub.ptr.rhs.cast179 = ptrtoint i8* %tmp131 to i64
  %sub.ptr.sub180 = sub i64 %sub.ptr.lhs.cast178, %sub.ptr.rhs.cast179
  %tmp132 = load i64*, i64** %str_length.addr, align 8
  store i64 %sub.ptr.sub180, i64* %tmp132, align 8
  br label %if.end181

if.end181:                                        ; preds = %if.then177, %if.end170
  %tmp133 = load i8*, i8** %ptr, align 8
  %tmp134 = load i8**, i8*** %dest.addr, align 8
  store i8* %tmp133, i8** %tmp134, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end181, %if.end97, %if.end46, %if.then29, %if.then19, %if.then15, %if.then12, %if.then8
  %tmp135 = load i32, i32* %retval
  ret i32 %tmp135
}

; Function Attrs: nounwind uwtable
define internal i32 @osip_body_parse_header(%struct.osip_body* %body, i8* %start_of_osip_body_header, i8** %next_body) #0 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.osip_body*, align 8
  %start_of_osip_body_header.addr = alloca i8*, align 8
  %next_body.addr = alloca i8**, align 8
  %start_of_line = alloca i8*, align 8
  %end_of_line = alloca i8*, align 8
  %colon_index = alloca i8*, align 8
  %hname = alloca i8*, align 8
  %hvalue = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.osip_body* %body, %struct.osip_body** %body.addr, align 8
  store i8* %start_of_osip_body_header, i8** %start_of_osip_body_header.addr, align 8
  store i8** %next_body, i8*** %next_body.addr, align 8
  %tmp = load i8**, i8*** %next_body.addr, align 8
  store i8* null, i8** %tmp, align 8
  %tmp1 = load i8*, i8** %start_of_osip_body_header.addr, align 8
  store i8* %tmp1, i8** %start_of_line, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end104, %entry
  %tmp2 = load i8*, i8** %start_of_line, align 8
  %call = call i32 @__osip_find_next_crlf(i8* %tmp2, i8** %end_of_line)
  store i32 %call, i32* %i, align 4
  %tmp3 = load i32, i32* %i, align 4
  %cmp = icmp eq i32 %tmp3, -2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.cond
  br label %if.end3

if.else:                                          ; preds = %for.cond
  %tmp4 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %tmp4, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.else
  %tmp5 = load i32, i32* %i, align 4
  store i32 %tmp5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %tmp6 = load i8*, i8** %start_of_line, align 8
  %call4 = call i8* @strchr(i8* %tmp6, i32 58) #7
  store i8* %call4, i8** %colon_index, align 8
  %tmp7 = load i8*, i8** %colon_index, align 8
  %cmp5 = icmp eq i8* %tmp7, null
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  store i32 -5, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end3
  %tmp8 = load i8*, i8** %colon_index, align 8
  %tmp9 = load i8*, i8** %start_of_line, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %tmp8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %tmp9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i64 %sub.ptr.sub, 1
  %cmp8 = icmp slt i64 %add, 2
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end7
  store i32 -5, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end7
  %tmp10 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool = icmp ne i8* (i64)* %tmp10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end10
  %tmp11 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp12 = load i8*, i8** %colon_index, align 8
  %tmp13 = load i8*, i8** %start_of_line, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %tmp12 to i64
  %sub.ptr.rhs.cast12 = ptrtoint i8* %tmp13 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %add14 = add nsw i64 %sub.ptr.sub13, 1
  %call15 = call i8* %tmp11(i64 %add14)
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  %tmp14 = load i8*, i8** %colon_index, align 8
  %tmp15 = load i8*, i8** %start_of_line, align 8
  %sub.ptr.lhs.cast16 = ptrtoint i8* %tmp14 to i64
  %sub.ptr.rhs.cast17 = ptrtoint i8* %tmp15 to i64
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17
  %add19 = add nsw i64 %sub.ptr.sub18, 1
  %call20 = call noalias i8* @malloc(i64 %add19) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call15, %cond.true ], [ %call20, %cond.false ]
  store i8* %cond, i8** %hname, align 8
  %tmp16 = load i8*, i8** %hname, align 8
  %cmp21 = icmp eq i8* %tmp16, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %cond.end
  store i32 -4, i32* %retval
  br label %return

if.end23:                                         ; preds = %cond.end
  %tmp17 = load i8*, i8** %hname, align 8
  %tmp18 = load i8*, i8** %start_of_line, align 8
  %tmp19 = load i8*, i8** %colon_index, align 8
  %tmp20 = load i8*, i8** %start_of_line, align 8
  %sub.ptr.lhs.cast24 = ptrtoint i8* %tmp19 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %tmp20 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %call27 = call i8* @osip_clrncpy(i8* %tmp17, i8* %tmp18, i64 %sub.ptr.sub26)
  %tmp21 = load i8*, i8** %end_of_line, align 8
  %add.ptr = getelementptr inbounds i8, i8* %tmp21, i64 -2
  %tmp22 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast28 = ptrtoint i8* %add.ptr to i64
  %sub.ptr.rhs.cast29 = ptrtoint i8* %tmp22 to i64
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29
  %cmp31 = icmp slt i64 %sub.ptr.sub30, 2
  br i1 %cmp31, label %if.then32, label %if.end40

if.then32:                                        ; preds = %if.end23
  %tmp23 = load i8*, i8** %hname, align 8
  %cmp33 = icmp ne i8* %tmp23, null
  br i1 %cmp33, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.then32
  %tmp24 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool35 = icmp ne void (i8*)* %tmp24, null
  br i1 %tobool35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %if.then34
  %tmp25 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp26 = load i8*, i8** %hname, align 8
  call void %tmp25(i8* %tmp26)
  br label %if.end38

if.else37:                                        ; preds = %if.then34
  %tmp27 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp27) #8
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then32
  store i32 -5, i32* %retval
  br label %return

if.end40:                                         ; preds = %if.end23
  %tmp28 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tobool41 = icmp ne i8* (i64)* %tmp28, null
  br i1 %tobool41, label %cond.true42, label %cond.false48

cond.true42:                                      ; preds = %if.end40
  %tmp29 = load i8* (i64)*, i8* (i64)** @osip_malloc_func, align 8
  %tmp30 = load i8*, i8** %end_of_line, align 8
  %add.ptr43 = getelementptr inbounds i8, i8* %tmp30, i64 -2
  %tmp31 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast44 = ptrtoint i8* %add.ptr43 to i64
  %sub.ptr.rhs.cast45 = ptrtoint i8* %tmp31 to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45
  %call47 = call i8* %tmp29(i64 %sub.ptr.sub46)
  br label %cond.end54

cond.false48:                                     ; preds = %if.end40
  %tmp32 = load i8*, i8** %end_of_line, align 8
  %add.ptr49 = getelementptr inbounds i8, i8* %tmp32, i64 -2
  %tmp33 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast50 = ptrtoint i8* %add.ptr49 to i64
  %sub.ptr.rhs.cast51 = ptrtoint i8* %tmp33 to i64
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51
  %call53 = call noalias i8* @malloc(i64 %sub.ptr.sub52) #8
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false48, %cond.true42
  %cond55 = phi i8* [ %call47, %cond.true42 ], [ %call53, %cond.false48 ]
  store i8* %cond55, i8** %hvalue, align 8
  %tmp34 = load i8*, i8** %hvalue, align 8
  %cmp56 = icmp eq i8* %tmp34, null
  br i1 %cmp56, label %if.then57, label %if.end65

if.then57:                                        ; preds = %cond.end54
  %tmp35 = load i8*, i8** %hname, align 8
  %cmp58 = icmp ne i8* %tmp35, null
  br i1 %cmp58, label %if.then59, label %if.end64

if.then59:                                        ; preds = %if.then57
  %tmp36 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool60 = icmp ne void (i8*)* %tmp36, null
  br i1 %tobool60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.then59
  %tmp37 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp38 = load i8*, i8** %hname, align 8
  call void %tmp37(i8* %tmp38)
  br label %if.end63

if.else62:                                        ; preds = %if.then59
  %tmp39 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp39) #8
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then57
  store i32 -4, i32* %retval
  br label %return

if.end65:                                         ; preds = %cond.end54
  %tmp40 = load i8*, i8** %hvalue, align 8
  %tmp41 = load i8*, i8** %colon_index, align 8
  %add.ptr66 = getelementptr inbounds i8, i8* %tmp41, i64 1
  %tmp42 = load i8*, i8** %end_of_line, align 8
  %add.ptr67 = getelementptr inbounds i8, i8* %tmp42, i64 -2
  %tmp43 = load i8*, i8** %colon_index, align 8
  %sub.ptr.lhs.cast68 = ptrtoint i8* %add.ptr67 to i64
  %sub.ptr.rhs.cast69 = ptrtoint i8* %tmp43 to i64
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69
  %sub = sub nsw i64 %sub.ptr.sub70, 1
  %call71 = call i8* @osip_clrncpy(i8* %tmp40, i8* %add.ptr66, i64 %sub)
  %tmp44 = load i8*, i8** %hname, align 8
  %call72 = call i32 @osip_strncasecmp(i8* %tmp44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str4464, i32 0, i32 0), i64 12)
  %cmp73 = icmp eq i32 %call72, 0
  br i1 %cmp73, label %if.then74, label %if.else76

if.then74:                                        ; preds = %if.end65
  %tmp45 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %tmp46 = load i8*, i8** %hvalue, align 8
  %call75 = call i32 @osip_body_set_contenttype(%struct.osip_body* %tmp45, i8* %tmp46)
  store i32 %call75, i32* %i, align 4
  br label %if.end78

if.else76:                                        ; preds = %if.end65
  %tmp47 = load %struct.osip_body*, %struct.osip_body** %body.addr, align 8
  %tmp48 = load i8*, i8** %hname, align 8
  %tmp49 = load i8*, i8** %hvalue, align 8
  %call77 = call i32 @osip_body_set_header(%struct.osip_body* %tmp47, i8* %tmp48, i8* %tmp49)
  store i32 %call77, i32* %i, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then74
  %tmp50 = load i8*, i8** %hname, align 8
  %cmp79 = icmp ne i8* %tmp50, null
  br i1 %cmp79, label %if.then80, label %if.end85

if.then80:                                        ; preds = %if.end78
  %tmp51 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool81 = icmp ne void (i8*)* %tmp51, null
  br i1 %tobool81, label %if.then82, label %if.else83

if.then82:                                        ; preds = %if.then80
  %tmp52 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp53 = load i8*, i8** %hname, align 8
  call void %tmp52(i8* %tmp53)
  br label %if.end84

if.else83:                                        ; preds = %if.then80
  %tmp54 = load i8*, i8** %hname, align 8
  call void @free(i8* %tmp54) #8
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then82
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end78
  %tmp55 = load i8*, i8** %hvalue, align 8
  %cmp86 = icmp ne i8* %tmp55, null
  br i1 %cmp86, label %if.then87, label %if.end92

if.then87:                                        ; preds = %if.end85
  %tmp56 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tobool88 = icmp ne void (i8*)* %tmp56, null
  br i1 %tobool88, label %if.then89, label %if.else90

if.then89:                                        ; preds = %if.then87
  %tmp57 = load void (i8*)*, void (i8*)** @osip_free_func, align 8
  %tmp58 = load i8*, i8** %hvalue, align 8
  call void %tmp57(i8* %tmp58)
  br label %if.end91

if.else90:                                        ; preds = %if.then87
  %tmp59 = load i8*, i8** %hvalue, align 8
  call void @free(i8* %tmp59) #8
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then89
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end85
  %tmp60 = load i32, i32* %i, align 4
  %cmp93 = icmp ne i32 %tmp60, 0
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end92
  %tmp61 = load i32, i32* %i, align 4
  store i32 %tmp61, i32* %retval
  br label %return

if.end95:                                         ; preds = %if.end92
  %tmp62 = load i8*, i8** %end_of_line, align 8
  %call96 = call i32 @strncmp(i8* %tmp62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str460, i32 0, i32 0), i64 2) #7
  %cmp97 = icmp eq i32 %call96, 0
  br i1 %cmp97, label %if.then103, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end95
  %tmp63 = load i8*, i8** %end_of_line, align 8
  %call98 = call i32 @strncmp(i8* %tmp63, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str1461, i32 0, i32 0), i64 1) #7
  %cmp99 = icmp eq i32 %call98, 0
  br i1 %cmp99, label %if.then103, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false
  %tmp64 = load i8*, i8** %end_of_line, align 8
  %call101 = call i32 @strncmp(i8* %tmp64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str2462, i32 0, i32 0), i64 1) #7
  %cmp102 = icmp eq i32 %call101, 0
  br i1 %cmp102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %lor.lhs.false100, %lor.lhs.false, %if.end95
  %tmp65 = load i8*, i8** %end_of_line, align 8
  %tmp66 = load i8**, i8*** %next_body.addr, align 8
  store i8* %tmp65, i8** %tmp66, align 8
  store i32 0, i32* %retval
  br label %return

if.end104:                                        ; preds = %lor.lhs.false100
  %tmp67 = load i8*, i8** %end_of_line, align 8
  store i8* %tmp67, i8** %start_of_line, align 8
  br label %for.cond

return:                                           ; preds = %if.then103, %if.then94, %if.end64, %if.end39, %if.then22, %if.then9, %if.then6, %if.then2
  %tmp68 = load i32, i32* %retval
  ret i32 %tmp68
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 1, !"Debug Info Version", i32 1}
!2 = !{!"clang version 3.4.2 (tags/RELEASE_342/final 323614)"}
